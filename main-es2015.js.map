{"version":3,"sources":["./src/app/modules/onboarding/onboarding-start-options/onboarding-start-options.component.ts","./src/app/modules/onboarding/onboarding-start-options/onboarding-start-options.component.html","./src/environments/backendAPIs.ts","./src/app/theme/confirmation-dialogue/confirmation-dialogue-input.ts","./src/app/modules/welcome/welcome-component/welcome-component.component.ts","./src/app/modules/welcome/welcome-component/welcome-component.component.html","./src/app/auto-generated/auto-generated.component.ts","./src/app/auto-generated/auto-generated.component.html","./src/app/modules/dashboard/portfolio-summary/accounts.service.ts","./src/app/modules/dashboard/dashboard/dashboard.component.ts","./src/app/modules/dashboard/dashboard/dashboard.component.html","./src/app/theme/footer-bar/footer-bar.component.ts","./src/app/theme/footer-bar/footer-bar.component.html","./src/app/theme/notification/notification.service.ts","./src/app/page-layouts/page-layouts.module.ts","./src/app/modules/users/email-verification/email-verification.component.ts","./src/app/modules/users/email-verification/email-verification.component.html","./src/app/modules/login/login.service.ts","./src/environments/environment.ts","./src/app/theme/theme.module.ts","./src/app/modules/login/logout/logout.component.ts","./src/app/theme/confirmation-dialogue/confirmation-dialogue.component.ts","./src/app/theme/confirmation-dialogue/confirmation-dialogue.component.html","./src/app/theme/expandable-list/expandable-list.component.ts","./src/app/theme/expandable-list/expandable-list.component.html","./src/app/modules/onboarding/onboarding-components/onboardinghost.directive.ts","./src/app/common/token.interceptor.ts","./src/app/modules/onboarding/retail-onboarding/retailoffer.model.ts","./src/app/modules/documentation/privacy-policy/privacy-policy.component.ts","./src/app/modules/documentation/privacy-policy/privacy-policy.component.html","./src/app/common/guards/LoggedInGuard.ts","./src/app/common/mock.interceptor.ts","./src/app/modules/onboarding/onboarding-components/onboarding-form-notfound-error/onboarding-form-notfound-error.component.ts","./src/app/modules/onboarding/onboarding-components/onboarding-form-notfound-error/onboarding-form-notfound-error.component.html","./src/app/common/image-slider/image-slider.component.ts","./src/app/common/image-slider/image-slider.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/modules/onboarding/onboarding-components/retail-exploring-onboarding/retail-exploring-onboarding.component.ts","./src/app/modules/onboarding/onboarding-components/retail-exploring-onboarding/retail-exploring-onboarding.component.html","./src/app/theme/expandable-list/pageupdatedevent.model.ts","./src/app/theme/notification/notification.component.ts","./src/app/modules/dashboard/dashboard.module.ts","./src/app/app.module.ts","./src/app/modules/dashboard/transactions-summary/transactions-summary.component.ts","./src/app/modules/dashboard/transactions-summary/transactions-summary.component.html","./src/app/common/common.module.ts","./src/app/modules/onboarding/retail-onboarding/retail-onboarding.component.ts","./src/app/modules/onboarding/retail-onboarding/retail-onboarding.component.html","./src/app/theme/main-layout/main-layout.component.ts","./src/app/theme/main-layout/main-layout.component.html","./src/app/modules/users/user.service.ts","./src/app/modules/welcome/welcome.module.ts","./src/app/common/mock/mockresponse.service.ts","./src/app/modules/login/login.module.ts","./src/app/modules/welcome/register/register.component.ts","./src/app/modules/welcome/register/register.component.html","./src/app/common/top-navigation-bar/top-navigation-bar.component.ts","./src/app/common/top-navigation-bar/top-navigation-bar.component.html","./src/app/modules/login/login-form/login-form.component.ts","./src/app/modules/login/login-form/login-form.component.html","./src/app/modules/users/user.model.ts","./src/app/page-layouts/pre-login/pre-login.component.ts","./src/app/page-layouts/pre-login/pre-login.component.html","./src/app/modules/onboarding/onboarding-components/onboarding.step.ts","./src/app/modules/dashboard/portfolio-summary/portfolio-summary.component.ts","./src/app/modules/dashboard/portfolio-summary/portfolio-summary.component.html","./src/app/theme/top-fixed-bar/top-fixed-bar.component.ts","./src/app/theme/top-fixed-bar/top-fixed-bar.component.html","./src/app/modules/dashboard/quick-actions-bar/quick-actions-bar.component.ts","./src/app/modules/dashboard/quick-actions-bar/quick-actions-bar.component.html","./src/app/app-routing.module.ts","./src/app/modules/onboarding/onboarding.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialogRef } from '@angular/material/dialog';\n@Component({\n  selector: 'app-onboarding-start-options',\n  templateUrl: './onboarding-start-options.component.html',\n  styleUrls: ['./onboarding-start-options.component.css']\n})\nexport class OnboardingStartOptionsComponent implements OnInit {\n\n  constructor(public router: Router,\n              private dialogRef: MatDialogRef<OnboardingStartOptionsComponent >) { }\n\n  ngOnInit(): void {\n  }\n  startRetailOnboarding(){\n    this.dialogRef.close();\n    this.router.navigate(['/retail-onboarding']);\n  }\n}\n","<div class=\"start-onboarding\">\n    <p>Great to have you onboard!</p>\n    <p>Please chose an option which best identifies you :</p>\n    <mat-grid-list cols=\"3\" rowHeight=\"100px\">\n        <mat-grid-tile [colspan]=\"3\" [rowspan]=\"2\" class=\"onboarding-tile\">\n            <mat-card class=\"onboarding-card\">\n                <mat-card-header>\n                    <div mat-card-avatar class=\"material-icons md-48\">face</div>\n                    <mat-card-title>Individual</mat-card-title>\n                    <mat-card-subtitle>Retail Banking</mat-card-subtitle>\n                </mat-card-header>\n                <mat-card-content>\n                    <p>\n                        Apply now and get access to 7% interest rate on your savings account.\n                    </p>\n                </mat-card-content>\n                <mat-card-actions>\n                    <button mat-button (click)=\"startRetailOnboarding()\">Apply Now</button>\n                </mat-card-actions>\n            </mat-card>\n        </mat-grid-tile>\n        <mat-grid-tile [colspan]=\"3\" [rowspan]=\"2\" class=\"onboarding-tile\">\n            <mat-card class=\"onboarding-card\">\n                <mat-card-header>\n                    <div mat-card-avatar class=\"material-icons md-48\">admin_panel_settings</div>\n                    <mat-card-title>Corporate Admin</mat-card-title>\n                    <mat-card-subtitle>Corporate Banking</mat-card-subtitle>\n                </mat-card-header>\n                <mat-card-content>\n                    <p>\n                        Apply now for a complete corporate banking solution for your business.\n                    </p>\n                </mat-card-content>\n                <mat-card-actions>\n                    <button mat-button>Apply Now</button>\n                </mat-card-actions>\n            </mat-card>\n        </mat-grid-tile>\n        <mat-grid-tile [colspan]=\"3\" [rowspan]=\"2\" class=\"onboarding-tile\">\n            <mat-card class=\"onboarding-card\" >\n                <mat-card-header>\n                    <div mat-card-avatar class=\"material-icons md-48\">person</div>\n                    <mat-card-title>Corporate User</mat-card-title>\n                    <mat-card-subtitle>Corporate Banking</mat-card-subtitle>\n                </mat-card-header>\n                <mat-card-content>\n                    <p>\n                        Already have your business registered with us? Join here to access your business details.\n                    </p>\n                </mat-card-content>\n                <mat-card-actions>\n                    <button mat-button>Apply Now</button>\n                </mat-card-actions>\n            </mat-card>\n        </mat-grid-tile>\n    </mat-grid-list>\n</div>","import { environment } from './environment';\nimport { Injectable } from '@angular/core';\n@Injectable({\n  providedIn: 'root',\n})\nexport class BackendAPIService {\n    \n\n  private getBaseUrl() {\n    const backendUrl =  environment.backendUrl;\n    const PATH_SEPERATOR = '/';\n    const context = environment.contextName;\n\n    let baseURL = backendUrl + PATH_SEPERATOR;\n    if (context !== '') {\n      baseURL = baseURL + context + PATH_SEPERATOR;\n    }\n    return  baseURL;\n  }\n\n  getAccountsAPI(): string {\n    return this.getBaseUrl()  + 'user/products/accounts';\n  }\n  getDepositAccountsAPI(): string {\n    return this.getBaseUrl()  + 'user/products/deposits';\n  }\n  getLoanAccountsAPI(): string {\n    return this.getBaseUrl()  + 'user/products/loans';\n  }\n  getCardsAccountsAPI(): string {\n    return this.getBaseUrl()  + 'user/products/cards';\n  }\n  getCorporatesAPI(): string {\n    return this.getBaseUrl() + 'corporates/';\n  }\n\n  getLogintAPI(): string {\n    return this.getBaseUrl()  + 'auth/login';\n  }\n  getLogOutAPI(): string {\n    return this.getBaseUrl()  + 'logout';\n  }\n    getInventoryListAPI(pageSize: number, pageNumber: number): string {\n      return this.getBaseUrl()  +\n       'inventory/list' + '?pageSize=' + pageSize + '&pageNumber=' + pageNumber + '&sortBy=id';\n    }\n    getUpdateInventoryListAPI(companyName: string, medicineName: string): string {\n      return this.getBaseUrl()  +\n       'inventory/update/' + companyName + '/' + medicineName + '/' ;\n    }\n    getSearchInventoryListAPI(searchCriteria: string): string {\n      return this.getBaseUrl()  +\n      'inventory/search?q=' + searchCriteria ;\n    }\n\n  getDeleteArticleAPI(id: number): string {\n    return this.getBaseUrl()  + 'article' + '/' + id;\n  }\n  getCreateArticleAPI(): string {\n    return this.getBaseUrl()  + 'article';\n  }\n  public getArticleListAPI(pageSize: number, pageNumber: number): string {\n    return this.getBaseUrl()\n      + 'article/list?pageSize='\n      + pageSize\n      + '&pageNumber='\n      + pageNumber\n      + '&sortBy=id';\n  }\n  public getUsersListAPI(pageSize: number, pageNumber: number) {\n    return this.getBaseUrl()  + 'user/list?pageSize=' + pageSize + '&pageNumber=' + pageNumber + '&sortBy=id';\n  }\n  public getLoggedInUserAPI(): string {\n    return this.getBaseUrl()  + 'users/me';\n}\n}\n","export class ConfirmationDialogueInput {\n    message: string;\n    buttons: ConfirmationDialogueButtons[];\n    closeButtons: string[];\n}\nexport class ConfirmationDialogueButtons {\n    text: string;\n    color: string;\n    returnText: string;\n    constructor(text: string, returnText: string, color?: string) {\n        this.text = text;\n        this.returnText = returnText;\n        this.color = color;\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome-component',\n  templateUrl: './welcome-component.component.html',\n  styleUrls: ['./welcome-component.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { console.log('Welcome Component');}\n  public imagesUrl;\n\n  ngOnInit() {\n    this.imagesUrl = ['/assets/images/welcome/1.jpg'];\n  }\n\n}\n","<mat-grid-list cols=\"11\" rowHeight=\"100px\">\n    <mat-grid-tile\n        [colspan]=\"8\"\n        [rowspan]=\"8\"\n        >\n            <app-image-slider \n            [images]=\"imagesUrl\"></app-image-slider> \n\n    </mat-grid-tile>\n    <mat-grid-tile\n        [colspan]=\"3\"\n        [rowspan]=\"2\"\n        >\n        <app-login-form></app-login-form>\n    </mat-grid-tile>\n    <mat-grid-tile\n        [colspan]=\"3\"\n        [rowspan]=\"2\"\n        >\n        <app-register class=\"register\"></app-register>\n    </mat-grid-tile>\n    \n  </mat-grid-list>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auto-generated',\n  templateUrl: './auto-generated.component.html',\n  styleUrls: ['./auto-generated.component.css']\n})\nexport class AutoGeneratedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>auto-generated works!</p>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BackendAPIService } from 'src/environments/backendAPIs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountsService {\n  getSavingsAccounts() {\n    return this.http.get(this.backendApis.getAccountsAPI());\n  }\n  getDepositAccounts() {\n    return this.http.get(this.backendApis.getDepositAccountsAPI());\n  }\n  getLoanAccounts() {\n    return this.http.get(this.backendApis.getLoanAccountsAPI());\n  }\n  getCardAccounts() {\n    return this.http.get(this.backendApis.getCardsAccountsAPI());\n  }\n  constructor(private http: HttpClient,\n              private backendApis: BackendAPIService) { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","\n<mat-grid-list cols=\"11\" rowHeight=\"100px\">\n    <mat-grid-tile\n        [colspan]=\"7\"\n        [rowspan]=\"2\"\n        [style.background]=\"'white'\">\n        <app-portfolio-summary></app-portfolio-summary>\n    </mat-grid-tile>\n    <mat-grid-tile\n        [colspan]=\"4\"\n        [rowspan]=\"6\"\n        [style.background]=\"'white'\">\n        <app-quick-actions-bar></app-quick-actions-bar>\n    </mat-grid-tile>\n    <mat-grid-tile\n        [colspan]=\"7\"\n        [rowspan]=\"4\"\n        [style.background]=\"'white'\">\n        <app-transactions-summary ></app-transactions-summary>\n    </mat-grid-tile>\n\n    \n  </mat-grid-list>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer-bar',\n  templateUrl: './footer-bar.component.html',\n  styleUrls: ['./footer-bar.component.css']\n})\nexport class FooterBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<footer>\n  <mat-toolbar>  \n    <mat-toolbar-row>\n      <mat-icon>copyright</mat-icon> Mohit Kanwar\n    </mat-toolbar-row>\n  </mat-toolbar>\n</footer>\n","import { Output, EventEmitter, Injectable } from '@angular/core';\n@Injectable({\n    providedIn: 'root',\n})\nexport class NotificationService {\n    @Output() notificationEvent: EventEmitter<{'message': string}> = new EventEmitter();\n\n    public sendNotification(message: string) {\n        this.notificationEvent.emit({message});\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PreLoginComponent } from './pre-login/pre-login.component';\nimport { CommonAppModule } from '../common/common.module';\n\n@NgModule({\n  declarations: [PreLoginComponent],\n  imports: [\n    CommonModule,\n    CommonAppModule\n  ],\n  exports: [\n    PreLoginComponent\n  ]\n})\nexport class PageLayoutsModule { }\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-email-verification',\n  templateUrl: './email-verification.component.html',\n  styleUrls: ['./email-verification.component.css']\n})\nexport class EmailVerificationComponent implements OnInit {\n\n  message: string;\n  constructor(private activatedRoute: ActivatedRoute) {\n    this.activatedRoute.queryParams.subscribe(params => {\n          const queryParam = params.q;\n          console.log(queryParam);\n          if (queryParam == null || queryParam === '') {\n            this.message = 'Unable to verify the email';\n          } else {\n            this.message = 'Email verified successfully';\n          }\n      });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>{{message}}</p>\n","import { Injectable } from '@angular/core';\nimport { User } from '../users/user.model';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BackendAPIService } from 'src/environments/backendAPIs';\nimport { DataResponse } from 'src/app/common/responseTypes/data-response.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  isAuthenticated(): boolean {\n    return  sessionStorage.getItem('authenticated') === 'true';\n  }\n  constructor(private http: HttpClient,\n              private backendAPIs: BackendAPIService) { }\n\n  login(user: User): Observable<DataResponse> {\n    const authKey = 'Basic ' + btoa(user.username + ':' + user.password);\n    const headers = new HttpHeaders(user ? {\n      authorization : authKey\n  } : {});\n    sessionStorage.setItem('auth-key', authKey);\n    return this.http.post<DataResponse>(this.backendAPIs.getLogintAPI(), user, {headers});\n  }\n  logout() {\n    const authKey = sessionStorage.getItem('auth-key');\n    const headers = new HttpHeaders(authKey ? {\n      authorization : authKey\n  } : {});\n    return this.http.post<DataResponse>(this.backendAPIs.getLogOutAPI(), null, {headers});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  backendUrl: 'http://localhost:8080',\n  mockBackendUrl: 'assets/mocks',\n  contextName: '',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { TopFixedBarComponent } from './top-fixed-bar/top-fixed-bar.component';\nimport { MainLayoutComponent } from './main-layout/main-layout.component';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FooterBarComponent } from './footer-bar/footer-bar.component';\nimport { NotificationComponent } from './notification/notification.component';\nimport { ExpandableListComponent } from './expandable-list/expandable-list.component';\nimport { ConfirmationDialogueComponent } from './confirmation-dialogue/confirmation-dialogue.component';\nimport { AppRoutingModule } from '../app-routing.module';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n@NgModule({\n    declarations: [\n    TopFixedBarComponent,\n    MainLayoutComponent,\n    FooterBarComponent,\n    NotificationComponent,\n    ExpandableListComponent,\n    ConfirmationDialogueComponent,\n    ],\n    imports: [\n      CommonModule,\n      BrowserAnimationsModule,\n      MatToolbarModule,\n      MatMenuModule,\n      MatIconModule,\n      AppRoutingModule,\n      MatSnackBarModule,\n      MatButtonModule,\n      MatTableModule,\n      MatPaginatorModule,\n      MatCheckboxModule,\n\n    ],\n    providers: [],\n    bootstrap: [MainLayoutComponent],\n    exports: [MainLayoutComponent, NotificationComponent, ExpandableListComponent, ConfirmationDialogueComponent]\n  })\nexport class ThemeModule {\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NotificationService } from 'src/app/theme/notification/notification.service';\nimport { LoginService } from '../login.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private router: Router, private notificationService: NotificationService, private logoutService: LoginService) { }\n\n  ngOnInit() {\n    sessionStorage.removeItem('authenticated');\n    sessionStorage.removeItem('auth-key');\n    this.router.navigate(['login']);\n    this.logoutService.logout();\n    this.notificationService.sendNotification('Logged out successfully!');\n  }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ConfirmationDialogueInput } from './confirmation-dialogue-input';\n\n@Component({\n  selector: 'app-confirmation-dialogue',\n  templateUrl: './confirmation-dialogue.component.html',\n  styleUrls: ['./confirmation-dialogue.component.css']\n})\nexport class ConfirmationDialogueComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<ConfirmationDialogueComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmationDialogueInput) {}\n\n  ngOnInit() {\n  }\n\n\n\n  onCloseClick(): void {\n    this.dialogRef.close('');\n  }\n\n  buttonClicked(i: number) {\n    this.dialogRef.close(this.data.buttons[i].returnText);\n  }\n}\n","<div class=\"dialogue\">\n  <p>\n    {{data.message}}\n  </p>\n  <span *ngFor=\"let button of data.buttons;let i=index\">\n    <button   mat-button mat-flat-button  color=\"{{button.color}}\" (click)=\"buttonClicked(i)\" class=\"button-class\">{{button.text}}</button>\n  </span>\n  <span *ngFor=\"let buttonText of data.closeButtons\">\n    <button   mat-button mat-flat-button  color=\"warn\" (click)=\"onCloseClick()\" class=\"button-class\">{{buttonText}}</button>\n  </span>\n</div>\n\n","import { Component, OnInit, Input, Output , EventEmitter} from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { PageUpdatedEventData } from './pageupdatedevent.model';\nimport { ActivatedRoute, Params } from '@angular/router';\n\n@Component({\n  selector: 'app-expandable-list',\n  templateUrl: './expandable-list.component.html',\n  styleUrls: ['./expandable-list.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class ExpandableListComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute) { }\n  @Input() listData ;\n  @Input() listColumns ;\n  @Input() detailsColumns? ;\n  @Input()totalNumberOfItems;\n  @Input()pageSize = 5;\n  @Input()pageNumber = 1;\n  @Output() pageChanged: EventEmitter<PageUpdatedEventData> = new EventEmitter<PageUpdatedEventData>();\n  @Output() deleteEvent: EventEmitter<PageUpdatedEventData> = new EventEmitter<PageUpdatedEventData>();\n\n  expandedRow;\n  ngOnInit() {\n    this.route.params.subscribe((params: Params) => {\n      this.getPaginatedItems({length: 0, pageIndex: 1, pageSize: 5, previousPageIndex: 1});\n   });\n  }\n  toggleExpandedRow(row) {\n    if (this.expandedRow !== row) {\n      this.expandedRow = row;\n    } else {\n      this.expandedRow = '';\n    }\n  }\n  getPaginatedItems(event) {\n    const paginationUpdate: PageUpdatedEventData = new PageUpdatedEventData();\n    paginationUpdate.length = event.length;\n    paginationUpdate.pageIndex = event.pageIndex;\n    paginationUpdate.pageSize = event.pageSize;\n    paginationUpdate.previousPageIndex = event.previousPageIndex;\n    this.pageChanged.emit(paginationUpdate);\n  }\n}\n","<!-- <table>\n  <tr>\n    <th *ngFor=\"let column of columnsToDisplay\">{{column}}</th>\n  </tr>\n  <tr *ngFor=\"let data of listDataSource\">\n    <td *ngFor=\"let column of columnsToDisplay\">{{data[column]}}</td>\n  </tr>\n</table> -->\n<table mat-table [dataSource]=\"listData\" multiTemplateDataRows class=\"mat-elevation-z8\">\n  \n      <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of listColumns\">\n\n          <th mat-header-cell *matHeaderCellDef> {{column}} </th>\n          <td mat-cell *matCellDef=\"let detailRow\"> {{detailRow[column]}} </td>\n        </ng-container>\n  \n  \n\n  <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n  <ng-container matColumnDef=\"expandedDetail\">\n    <td mat-cell *matCellDef=\"let row\" [attr.colspan]=\"columnsToDisplayInDetails.length\">\n      <div class=\"user-details\" [@detailExpand]=\"row == expandedRow ? 'expanded' : 'collapsed'\">\n\n        <table class=\"user-details-table\">\n          <tr class=\"user-details-row\" *ngFor=\"let column of columnsToDisplayInDetails\">\n            <th class=\"user-details-header\"><b>{{column}}</b></th>\n            <td class=\"user-details-details\">{{row[column]}}</td>\n          </tr>\n        </table>\n      </div>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"listColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: listColumns;\" class=\"user-details-row\"\n    [class.user-details-expanded-row]=\"expandedRow === row\" (click)=\"toggleExpandedRow(row)\">\n  </tr>\n  <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"user-detail-row\"></tr>\n</table>\n<mat-paginator [length]=\"totalNumberOfItems\"\n              [pageSize]=\"pageSize\"\n              [pageIndex]=\"pageNumber\"\n              [pageSizeOptions]=\"[5, 10, 25, 100]\"\n              (page)=\"getPaginatedItems($event)\">\n</mat-paginator>","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appOnboardingHost]',\n})\nexport class OnboardingDirective {\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor() {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    const accessToken = sessionStorage.getItem('auth-key');\n    request = request.clone({\n      setHeaders: {\n        Authorization: `${accessToken}`\n      }\n    });\n    return next.handle(request);\n  }\n}\n","export class RetailOffer {\nid: number;\ntitle: string;\nsubtitle: string;\ndescription: string;\nrecomended: boolean;\nformName: string;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-privacy-policy',\n  templateUrl: './privacy-policy.component.html',\n  styleUrls: ['./privacy-policy.component.css']\n})\nexport class PrivacyPolicyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>\n    <i>Last Updated on : 9 March 2021</i>\n</p>\n\n<p>\nThis Privacy Policy explains our practices regarding the collection, usage and disclosure of information that we receive from our users through our chat bot functionalities as made available by our product along with it's implementations. \n</p>\n<p>\nPlease take a moment to familiarize yourself with our privacy practices and contact us if you have any questions.\n</p>\n<p>\nInformation we collect from you\nPersonal information is data that can be used to identify or contact a single person. \n\nSince this chat bot is built to provide answers to basic questions related to a specific topic of discussion (Your Banking Queries), the interactions are not user-specific. Therefore, as we are not dealing with user specific data to provide our services, we do not collect any personal information of our users, except the queries asked by them. Our primary goal in collecting this textual information is to improve our services.\n\nBut there is certain amount of information that is collected by the platforms and integrations our chat bot uses. This includes \n</p>\n<ul>\n    <li>Time zone</li>\n    <li>Location (Latitude and Longitude values wrapped in a Location object)</li>\n    <li>Query (Natural language text to be processed )</li>\n    <li>sessionID- a unique anonymous string of characters identifying the session, etc</li>\n</ul>\n<p>\n<b>How we use the information</b><br/>\nWe only store the textual information to better our chat bots questions handling capacity and efficiency and also to ensure that the number of no match conversations is minimum. Other pieces of information mentioned above are necessary for the agents's functioning over various platforms. \n</p>\n<p>\n    <b>What information do we share?</b><br/>\n    We never share the data with anyone. Data is collected solely for enhancing the response quality and the bot is built for the purpose of making the users aware of their banking needs. \n    \n</p>\n<p>\n<b>How users can change/delete their data</b><br/>\nThe only way this chat bot can identify a user is with the help of a 'sessionID' which is a unique, anonymous string of characters which identifies their session. The users can choose any one of the two options called 'Reset App' or 'Stop this app from remembering me'. Doing this will change or reset the unique code the chat bot uses to remember them and hence the user will seem to be a new user during their next interaction with the app.\n</p>\n<p>\n<b>Privacy Questions</b><br/>\nIf you have any questions or concerns about our Privacy Policy or data processing, or if you would like to reach out to us to report a possible breach of local privacy laws, please contact us. \n</p>\n<p>\n<b>Revisions to this Privacy Policy</b> <br/>\nAny information that is collected via our services is covered by our Privacy Policy in effect at the time such information is collected. We may revise this Privacy Policy from time to time. If any change is brought to this Privacy Policy, we will provide a proper notice of those changes on our service and also update the “Last Updated on” field above to indicate when those changes become effective.\n</p>","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { LoginService } from 'src/app/modules/login/login.service';\nimport { User } from 'src/app/modules/users/user.model';\nimport { UserService } from 'src/app/modules/users/user.service';\n@Injectable()\nexport class UserStateGuard implements CanActivate {\n    constructor(private loginService: LoginService,\n                private userService: UserService\n    ) { }\n\n    canActivate(): Observable<boolean> {\n        const isAuthenticated = this.loginService.isAuthenticated();\n        console.log(sessionStorage.getItem('authenticated') === 'true');\n        if (sessionStorage.getItem('authenticated') === 'true') {\n            const loggedInUser = this.userService.getLoggedInUser();\n            loggedInUser.subscribe(data => {\n                console.log(data);\n                if (!data) {\n                    // No response from API\n                    console.log('No response from API');\n                    return of(false);\n                }\n                if (data.status.status === 'SUCCESS') {\n                    const user: User = data.data;\n                    if (!user.accountNonExpired) {\n                        // account expired\n                        console.log('Account Expired');\n                        return of(false);\n                    }\n                    if (!user.accountNonLocked) {\n                        // account locked\n                        console.log('Account Locked');\n                        return of(false);\n                    }\n                    if (!user.credentialsNonExpired) {\n                        // credentials expired\n                        console.log('credentials expired');\n                        return of(false);\n                    }\n                    if (!user.termsAccepted) {\n                        // Terms not Accepted\n                        console.log('Terms not Accepted');\n                        return of(false);\n                    }\n                    if (user.firstTimePwdReset) {\n                        // First Time Pwd Reset\n                        console.log('First Time Pwd Reset');\n                        return of(false);\n                    }\n                    console.log(' All well, move ahed');\n                    return of(true);\n                }\n                else {\n                    console.log(' some error');\n                    return of(false);\n                }\n            }, error => {\n                console.log(' some error');\n                return of(false);\n            });\n            return of(true);\n        }\n        else {\n            console.log(' user is not authenticated');\n            return of(false);\n        }\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\nimport { Observable} from 'rxjs';\nimport { MockResponseService } from './mock/mockresponse.service';\n\n\n@Injectable()\nexport class MockInterceptor implements HttpInterceptor {\n  constructor(private mockResponseService: MockResponseService ) {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const mock = sessionStorage.getItem('mock');\n    if (mock === 'true' && !request.url.startsWith('assets')) {\n        const mockRequestUrl = this.mockResponseService.getMockRequestUrl(request);\n        const mockRequest = request.clone({url: mockRequestUrl, method: 'GET'});\n        return next.handle(mockRequest);\n    } else {\n      // mocks are disabled here\n      return next.handle(request);\n     }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { OnboardingComponent } from '../onboarding.component';\n\n@Component({\n  selector: 'app-onboarding-form-notfound-error',\n  templateUrl: './onboarding-form-notfound-error.component.html',\n  styleUrls: ['./onboarding-form-notfound-error.component.css']\n})\nexport class OnboardingFormNotfoundErrorComponent implements OnInit, OnboardingComponent {\n\n  constructor() { }\n  data: any;\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>There is a setup error on this page. The developers have been informed of the error. Please check back in 1 hour</p>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { interval, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-image-slider',\n  templateUrl: './image-slider.component.html',\n  styleUrls: ['./image-slider.component.css']\n})\nexport class ImageSliderComponent implements OnInit {\n  @Input() images: string[];\n  timer = interval(2500);\n  subscription: Subscription;\n  public selectedImage: string;\n  constructor() { }\n  ngOnInit() {\n    let i = 0;\n    this.selectedImage = this.images[i];\n    this.subscription = this.timer.subscribe( () => {\n      this.selectedImage = this.images[i++];\n      if (i === this.images.length) {\n        i = 0;\n      }\n  });\n  }\n\n}\n","<img [src]=\"selectedImage\" width=\"100%\" height=\"100%\"/>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'retail-banking-angular';\n}\n","<app-main-layout></app-main-layout>","import { Component, OnInit } from '@angular/core';\nimport { OnboardingComponent } from '../onboarding.component';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-retail-exploring-onboarding',\n  templateUrl: './retail-exploring-onboarding.component.html',\n  styleUrls: ['./retail-exploring-onboarding.component.css']\n})\nexport class RetailExploringOnboardingComponent implements OnInit, OnboardingComponent {\n\n  constructor(private fb: FormBuilder) { }\n  data: any;\n  profileForm: FormGroup;\n  message: string;\n  ngOnInit(): void {\n    this.profileForm = this.fb.group({\n      email:  ['', Validators.required],\n    });\n  }\n\n  onEmailSubmit() {\n    console.log(this.profileForm);\n    this.profileForm = null;\n    this.message = 'A verification email has been sent to your email address. See you there!';\n  }\n}\n","\n    <form [formGroup]=\"profileForm\" *ngIf=\"profileForm\">\n      <mat-form-field class=\"full-width\">\n        <mat-label>Email Address</mat-label>\n        <input matInput placeholder=\"Email Address\" formControlName=\"email\" name=\"profileForm.email\" email/>\n      </mat-form-field>\n      <div class=\"full-width\">\n        <button matInput type=\"submit\" mat-raised-button color=\"primary\" (click)=\"onEmailSubmit()\" [disabled]=\"!profileForm.valid\">Register</button>\n      </div>\n    </form>\n    <div *ngIf=\"message\">\n      {{message}}\n    </div>","export class PageUpdatedEventData {\n    length: number;\n    pageIndex: number;\n    pageSize: number;\n    previousPageIndex: number;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NotificationService } from './notification.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.css']\n})\nexport class NotificationComponent implements OnInit {\n  private showNotification: boolean;\n  private message: string;\n  constructor(private notificationService: NotificationService, private snackbar: MatSnackBar) { }\n\n  ngOnInit() {\n    this.showNotification = false;\n    this.notificationService.notificationEvent.subscribe(message => {\n      setTimeout(() => {\n        this.showNotification = true;\n        this.message = message.message;\n        this.snackbar.open(this.message, 'Close', {\n          duration: 5000,\n        });\n        setTimeout(() => {    // <<<---    using ()=> syntax\n          this.showNotification = false;\n          this.message = '';\n        }, 5000);\n      });\n\n    });\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { PortfolioSummaryComponent } from './portfolio-summary/portfolio-summary.component';\nimport { CommonAppModule } from 'src/app/common/common.module';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTableModule } from '@angular/material/table';\nimport { TransactionsSummaryComponent } from './transactions-summary/transactions-summary.component';\nimport { QuickActionsBarComponent } from './quick-actions-bar/quick-actions-bar.component';\n\n@NgModule({\n  declarations: [DashboardComponent, PortfolioSummaryComponent, TransactionsSummaryComponent, QuickActionsBarComponent],\n  exports: [DashboardComponent],\n  imports: [\n    CommonModule,\n    CommonAppModule,\n    MatGridListModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    MatTableModule\n  ]\n})\nexport class DashboardModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from '@src/app/app-routing.module';\nimport { AppComponent } from '@src/app/app.component';\nimport { CommonAppModule } from '@src/app/common/common.module';\nimport { WelcomeModule } from '@src/app/modules/welcome/welcome.module';\nimport { PageLayoutsModule } from '@src/app/page-layouts/page-layouts.module';\nimport { ThemeModule } from '@src/app/theme/theme.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from '@src/app/common/token.interceptor';\nimport { MockInterceptor } from '@src/app/common/mock.interceptor';\nimport { MockResponseService } from '@src/app/common/mock/mockresponse.service';\nimport { OnboardingModule } from '@src/app/modules/onboarding/onboarding.module';\nimport { UserStateGuard } from '@src/app/common/guards/LoggedInGuard';\nimport { UserService } from '@src/app/modules/users/user.service';\nimport { AutoGeneratedComponent } from '@src/app/auto-generated/auto-generated.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AutoGeneratedComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CommonAppModule,\n    WelcomeModule,\n    PageLayoutsModule,\n    ThemeModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    OnboardingModule\n  ],\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: MockInterceptor,\n    multi: true\n  },\n    {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptor,\n    multi: true\n  },\n  MockResponseService,\n  UserStateGuard,\n  UserService\n],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { HttpClient } from '@angular/common/http';\nimport { merge, Observable, of as observableOf } from 'rxjs';\nimport { startWith, switchMap, map, catchError } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-transactions-summary',\n  templateUrl: './transactions-summary.component.html',\n  styleUrls: ['./transactions-summary.component.css']\n})\nexport class TransactionsSummaryComponent implements AfterViewInit, OnInit {\n\n  displayedColumns: string[] = [ 'Date', 'Narration', 'Reference', 'State',   'Amount', 'ClosingBalance'];\n  data: Transaction[] = [];\n\n  resultsLength = 3;\n  isLoadingResults = true;\n  isRateLimitReached = false;\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  constructor(private httpClient: HttpClient) {}\n  ngOnInit(){\n    // tslint:disable-next-line:max-line-length\n    this.data.push({date : new Date(), state: 'debit', amount: '300', narration: 'Amazon', reference: '112423', closingBalance: '29700.00'});\n    // tslint:disable-next-line:max-line-length\n    this.data.push({date : new Date(new Date().getDate() - 1), state: 'debit', amount: '5000', narration: 'School Fee', reference: 'check:828823', closingBalance: '30000.00'});\n    // tslint:disable-next-line:max-line-length\n    this.data.push({date : new Date(new Date().getDate() - 1), state: 'credit', amount: '30000', narration: 'Salary Credit', reference: '112120', closingBalance: '35000.00'});\n    // this.data.push({date : new Date(new Date().getDate() - 2), number: '4', state: 'debit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 4), number: '5', state: 'debit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 8), number: '6', state: 'debit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 12), number: '7', state: 'credit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 12), number: '8', state: 'debit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 15), number: '9', state: 'debit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 21), number: '10', state: 'debit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 31), number: '11', state: 'debit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 41), number: '12', state: 'debit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 61), number: '13', state: 'credit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 71), number: '14', state: 'debit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 81), number: '15', state: 'debit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 91), number: '16', state: 'debit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 91), number: '17', state: 'debit', narration: 'The narration'});\n  }\n  ngAfterViewInit() {\n    this.isLoadingResults = false;\n\n  }\n}\n\nexport interface GithubApi {\n  items: Transaction[];\n  total_count: number;\n}\nexport interface Transaction {\n  date: Date;\n  narration: string;\n  reference: string;\n  state: string;\n  closingBalance: string;\n  amount: string;\n}\n\n\n/** An example database that the data source uses to retrieve data for the table. */\nexport class ExampleHttpDatabase {\n  constructor(private http: HttpClient) {}\n\n  getRepoIssues(sort: string, order: string, page: number): Observable<GithubApi> {\n    const href = 'https://api.github.com/search/issues';\n    const requestUrl =\n        `${href}?q=repo:angular/components&sort=${sort}&order=${order}&page=${page + 1}`;\n    console.log(requestUrl);\n    return this.http.get<GithubApi>(requestUrl);\n  }\n\n}\n","<div class=\"example-container mat-elevation-z8\">\n    <div class=\"example-loading-shade\"\n         *ngIf=\"isLoadingResults || isRateLimitReached\">\n      <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n    </div>\n  \n    <div class=\"example-table-container\">\n  \n      <table mat-table [dataSource]=\"data\" class=\"example-table\"\n      MatSort matSortActive=\"created\" matSortDisableClear matSortDirection=\"desc\">\n      <caption>Latest Transactions</caption>\n\n        <!-- Number Column -->\n        <ng-container matColumnDef=\"Date\">\n          <th mat-header-cell *matHeaderCellDef id=\"sno\">Date</th>\n          <td mat-cell *matCellDef=\"let row\">{{row.date | date }}</td>\n        </ng-container>\n  \n        <!-- Title Column -->\n        <ng-container matColumnDef=\"Narration\">\n          <th mat-header-cell *matHeaderCellDef id=\"title\">Narration</th>\n          <td mat-cell *matCellDef=\"let row\">{{row.narration}}</td>\n        </ng-container>\n  \n        <!-- State Column -->\n        <ng-container matColumnDef=\"Reference\">\n          <th mat-header-cell *matHeaderCellDef id=\"state\">Cheque/Ref. No.</th>\n          <td mat-cell *matCellDef=\"let row\">{{row.reference}}</td>\n        </ng-container>\n  \n        <!-- Created Column -->\n        <ng-container matColumnDef=\"State\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear id=\"state\">\n            State\n          </th>\n          <td mat-cell *matCellDef=\"let row\">{{row.state}}</td>\n        </ng-container>\n        <!-- Created Column -->\n        <ng-container matColumnDef=\"ClosingBalance\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear id=\"closingBalance\">\n            Closing Balance\n          </th>\n          <td mat-cell *matCellDef=\"let row\">{{row.closingBalance}}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"Amount\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear id=\"amount\">\n            Amount\n          </th>\n          <td mat-cell *matCellDef=\"let row\">{{row.amount}}</td>\n        </ng-container>\n  \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n    </div>\n  \n    <mat-paginator [length]=\"resultsLength\" [pageSize]=\"30\"></mat-paginator>\n  </div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TopNavigationBarComponent } from './top-navigation-bar/top-navigation-bar.component';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { ImageSliderComponent } from './image-slider/image-slider.component';\n\n@NgModule({\n  declarations: [TopNavigationBarComponent,\n    ImageSliderComponent],\n  imports: [\n    CommonModule,\n    MatGridListModule,\n  ],\n  exports: [\n    TopNavigationBarComponent,\n    ImageSliderComponent\n  ]\n})\nexport class CommonAppModule { }\n","import { Component, OnInit, OnDestroy, Input, ViewChild, ComponentFactoryResolver } from '@angular/core';\nimport { OnboardingStep } from '../onboarding-components/onboarding.step';\nimport { OnboardingDirective } from '../onboarding-components/onboardinghost.directive';\nimport { OnboardingComponent } from '../onboarding-components/onboarding.component';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RetailOffer } from './retailoffer.model';\nimport { RetailExploringOnboardingComponent } from '../onboarding-components/retail-exploring-onboarding/retail-exploring-onboarding.component';\nimport { OnboardingFormNotfoundErrorComponent } from '../onboarding-components/onboarding-form-notfound-error/onboarding-form-notfound-error.component';\n\n@Component({\n  selector: 'app-retail-onboarding',\n  templateUrl: './retail-onboarding.component.html',\n  styleUrls: ['./retail-onboarding.component.css']\n})\nexport class RetailOnboardingComponent implements OnInit, OnDestroy  {\n\n  offers: RetailOffer[] = [];\n  selectedOffer: RetailOffer;\n  breakpoint: number;\n  onboardingSteps: OnboardingStep[];\n  currentAdIndex = -1;\n  isLinear = false;\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  @ViewChild(OnboardingDirective, {static: true}) onboardingHost: OnboardingDirective;\n  interval: any;\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.offers.push(this.getExploringOffer());\n    this.offers.push(this.getEnthusiasticOffer());\n    this.offers.push(this.getProOffer());\n\n    this.breakpoint = (window.innerWidth <= 900) ? 1 : this.offers.length;\n\n    this.onboardingSteps =\n    [\n      new OnboardingStep(RetailExploringOnboardingComponent, {name: 'Bombasto', bio: 'Brave as they come'})\n    ];\n  }\n\n  ngOnDestroy(): void {\n    clearInterval(this.interval);\n  }\n\n  loadOfferForm() {\n    const componentFactory =\n      this.componentFactoryResolver\n      .resolveComponentFactory(this.resolveFormComponent(this.selectedOffer.formName));\n\n    const viewContainerRef = this.onboardingHost.viewContainerRef;\n    viewContainerRef.clear();\n\n    const componentRef = viewContainerRef.createComponent<OnboardingComponent>(componentFactory);\n    componentRef.instance.data = this.selectedOffer;\n  }\n  resolveFormComponent(formName) {\n    const formComponents = [\n      { id: 'RetailExploringOnboardingComponent', component: RetailExploringOnboardingComponent}\n    ];\n    const selectedFormComponent = formComponents.find((x => x.id === formName));\n    if (selectedFormComponent == null){\n      return OnboardingFormNotfoundErrorComponent;\n    }\n    return selectedFormComponent.component || OnboardingFormNotfoundErrorComponent;\n  }\n  onResize(event) {\n    this.breakpoint = (event.target.innerWidth <= 900) ? 1 : this.offers.length;\n  }\n  onOfferSelect(selectedOffer: RetailOffer) {\n    this.offers.forEach( (offer) => {\n      offer.recomended = (offer.id === selectedOffer.id);\n    });\n    this.selectedOffer = selectedOffer;\n    this.loadOfferForm();\n  }\n  getExploringOffer(): RetailOffer {\n    const exploring: RetailOffer = new RetailOffer();\n    exploring.id = 1;\n    exploring.title = 'Exploring';\n    exploring.subtitle = 'No Strings Attached';\n    exploring.description = 'Explore our offering without opening a savings account. Best if you would like to view our interface and decide later! We just need your email or phone number to begin with.';\n    exploring.formName = 'RetailExploringOnboardingComponent';\n    return exploring;\n  }\n  getEnthusiasticOffer(): RetailOffer {\n    const enthusiastic: RetailOffer = new RetailOffer();\n    enthusiastic.id = 2;\n    enthusiastic.recomended = true;\n    enthusiastic.title = 'Enthusiastic';\n    enthusiastic.subtitle = 'Get your savings account in 2 mins!';\n    enthusiastic.description = 'Open your accounts with us. Provide us your Aadhar card, Pan card and initial seed money of Rs. 10,000';\n    enthusiastic.formName = 'RetailEnthusiasticOnboardingComponent';\n    return enthusiastic;\n  }\n\n  getProOffer(): RetailOffer {\n    const pro: RetailOffer = new RetailOffer();\n    pro.id = 3;\n    pro.title = 'Pro';\n    pro.subtitle = 'Save like a Professional';\n    pro.description = 'Get the best of our technological and analytical skills to save your money like a professional';\n    pro.formName = 'RetailProOnboardingComponent';\n    return pro;\n  }\n}\n","<mat-grid-list  [cols]=\"breakpoint\" rowHeight=\"200px\" [gutterSize]=\"10\" (window:resize)=\"onResize($event)\">\n    <mat-grid-tile *ngFor=\"let offer of offers\" class=\"offer-tile\">\n      <mat-card class=\"offer-card\" [class.selected]=\"offer.recomended\" (click)=\"onOfferSelect(offer)\">\n        <mat-card-title>{{offer.title}}</mat-card-title>\n        <mat-card-subtitle>{{offer.subtitle}}</mat-card-subtitle>\n        <mat-card-content>{{offer.description}}</mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile>\n      <div>\n        <ng-template appOnboardingHost></ng-template>\n    </div>\n    </mat-grid-tile>\n</mat-grid-list>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.css']\n})\nexport class MainLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-top-fixed-bar></app-top-fixed-bar>\n<app-notification></app-notification>\n<div class=\"mainContent\">\n    <router-outlet></router-outlet>\n</div>\n<app-footer-bar></app-footer-bar>","import { HttpClient } from '@angular/common/http';\nimport { BackendAPIService } from 'src/environments/backendAPIs';\nimport * as core from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PaginatedListResponse } from 'src/app/common/responseTypes/paginated-list-response.model';\nimport { DataResponse } from 'src/app/common/responseTypes/data-response.model';\n@core.Injectable()\nexport class UserService {\n    constructor(private http: HttpClient,\n                private backendAPIs: BackendAPIService) {}\n\n    getUsers(pageSize: number, pageNumber: number): Observable<PaginatedListResponse> {\n       return this.http.get<PaginatedListResponse>(this.backendAPIs.getUsersListAPI(pageSize, pageNumber));\n    }\n\n    getLoggedInUser(): Observable<DataResponse> {\n        return this.http.get<DataResponse>(this.backendAPIs.getLoggedInUserAPI());\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WelcomeComponent } from './welcome-component/welcome-component.component';\nimport { LoginModule } from '../login/login.module';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { CommonAppModule } from 'src/app/common/common.module';\nimport { RegisterComponent } from './register/register.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  declarations: [WelcomeComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    LoginModule,\n    MatGridListModule,\n    CommonAppModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDialogModule\n    ]\n})\nexport class WelcomeModule { }\n","import { HttpRequest, HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { StringifyOptions } from 'querystring';\n@Injectable()\nexport class MockResponseService {\n    constructor(private http: HttpClient) {\n    }\n   getMockRequestUrl(request: HttpRequest<any>): string {\n    const mockUrl = request.url.replace(environment.backendUrl, '');\n    return 'assets/mocks' + mockUrl + '/' + request.method + '/default.json';\n   }\n\n }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { LogoutComponent } from './logout/logout.component';\nimport { DashboardModule } from '../dashboard/dashboard.module';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatCardModule,\n    DashboardModule,\n    MatIconModule,\n  ],\n  declarations: [LoginFormComponent, LogoutComponent],\n  exports: [LoginFormComponent]\n})\nexport class LoginModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OnboardingStartOptionsComponent } from '../../onboarding/onboarding-start-options/onboarding-start-options.component';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n  startOnboarding() {\n    this.dialog.open(OnboardingStartOptionsComponent, {\n      height: '800px',\n      width: '600px',\n    });\n  }\n}\n","<mat-card class=\"register-card\">\n    <p>New here? Register to experience a new world of banking</p>\n    <button \n             mat-raised-button \n             [color]=\"'primary'\"\n             (click)=\"startOnboarding()\"\n             > Register</button>\n</mat-card>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-top-navigation-bar',\n  templateUrl: './top-navigation-bar.component.html',\n  styleUrls: ['./top-navigation-bar.component.css']\n})\nexport class TopNavigationBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>top-navigation-bar works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { LoginService } from '../login.service';\nimport { NotificationService } from 'src/app/theme/notification/notification.service';\nimport { Router } from '@angular/router';\nimport { User } from '../../users/user.model';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css']\n})\nexport class LoginFormComponent implements OnInit {\n  showPassword: boolean;\n  constructor(private loginService: LoginService,\n              private notificationService: NotificationService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.showPassword = false;\n  }\n  login(loginForm: NgForm) {\n    if (loginForm.valid) {\n      const user: User = new User();\n      user.username = loginForm.value.username;\n      user.password = loginForm.value.password;\n      this.loginService.login(user).subscribe(response => {\n        console.log(' login response');\n        console.log(response);\n        if (response.status.status === 'SUCCESS') {\n            console.log(sessionStorage.getItem('authenticated') === 'true');\n            sessionStorage.setItem('authenticated', 'true');\n            console.log(sessionStorage.getItem('authenticated') === 'true');\n\n            let isAdminUser = false;\n            for (let i = 0; i < response.data.authorities.length; i++) {\n                if (response.data.authorities[i].authority === 'ADMIN') {\n                    isAdminUser = true;\n                    break;\n                }\n            }\n            if (isAdminUser) {\n              this.router.navigate(['admin-dashboard']);\n            } else {\n              this.router.navigate(['dashboard']);\n            }\n        } else {\n          this.notificationService.sendNotification('User login Error!');\n        }\n      },\n      error => {\n        console.log('error during login');\n        if (error.status === 401) {\n              this.notificationService.sendNotification('Invalid Credentials!');\n            } else {\n              this.notificationService.sendNotification('An error occurred!');\n            }\n        console.log(error);\n      });\n    }\n  }\n\n  togglePasswordView(){\n    this.showPassword = !this.showPassword;\n  }\n}\n","<mat-card class=\"login-card\">\n    <form (ngSubmit)=\"login(loginForm)\" #loginForm=\"ngForm\" class=\"login-form\">\n        <div class=\"login-form\">\n           <mat-form-field class=\"full-width\">\n             <input \n             placeholder=\"Username\" \n             name=\"username\"\n             type=\"text\"\n             ngModel \n             matInput\n             required>\n           </mat-form-field>\n           <mat-form-field class=\"full-width\">\n              <input \n              placeholder=\"Password\" \n              name=\"password\"\n              [type]=\"showPassword ? 'text' : 'password'\"\n              ngModel \n              matInput\n              required>\n              <mat-icon matSuffix *ngIf = \"!showPassword\" (click)=\"togglePasswordView()\">visibility</mat-icon>\n              <mat-icon matSuffix *ngIf = \"showPassword\" (click)=\"togglePasswordView()\">visibility_off</mat-icon>\n            </mat-form-field>\n           \n         </div>\n         <button \n         mat-raised-button \n         class=\"create-article-save\" \n         [disabled]=\"loginForm.invalid\"\n         [color]=\"'primary'\" \n         type=\"submit\"\n         > Login</button>\n         <button mat-raised-button class=\"create-article-clear\" [color]=\"'warn'\" type=\"reset\"> Clear!</button>\n       </form>\n</mat-card>\n\n   ","import { Authority } from './authority.model';\n\nexport class User {\n    id: number;\n    authorities: Authority[];\n    password: string;\n    username: string;\n    accountNonExpired: boolean;\n    accountNonLocked: boolean;\n    credentialsNonExpired: boolean;\n    termsAccepted: boolean;\n    firstTimePwdReset: boolean;\n    enabled: boolean;\n    firstName: string;\n    lastName: string;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pre-login',\n  templateUrl: './pre-login.component.html',\n  styleUrls: ['./pre-login.component.css']\n})\nexport class PreLoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-top-navigation-bar></app-top-navigation-bar>\n<p>pre-login works!</p>\n","import { Type } from '@angular/core';\n\nexport class OnboardingStep {\n  constructor(public component: Type<any>, public data: any) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AccountsService } from './accounts.service';\nimport {Account} from './account.model';\nimport { Deposit } from './deposit.model';\nimport { Loans } from './loans.model';\nimport { Card } from './card.model';\n\n@Component({\n  selector: 'app-portfolio-summary',\n  templateUrl: './portfolio-summary.component.html',\n  styleUrls: ['./portfolio-summary.component.css']\n})\nexport class PortfolioSummaryComponent implements OnInit {\n\n  constructor(private accountsService: AccountsService) { }\n  currencySymbol: string;\n  savingsAccounts: Account[];\n  depositAccounts: Deposit[];\n  loans: Loans[];\n  cards: Card[];\n  accountsTotal = 0;\n  totalDueThisMonth = 0;\n  totalLoanAmountPending = 0;\n  savingsTotal = 0;\n  depositsTotal = 0;\n  ngOnInit() {\n    this.accountsService.getSavingsAccounts().subscribe( (accounts: Account[]) => {\n      this.savingsAccounts = accounts;\n      this.savingsAccounts.forEach((account) => {\n        this.accountsTotal += account.balance;\n        this.savingsTotal += account.balance;\n      });\n    });\n\n    this.accountsService.getDepositAccounts().subscribe( (depositAccounts: Deposit[]) => {\n      this.depositAccounts = depositAccounts;\n      this.depositAccounts.forEach((account) => {\n        this.accountsTotal += account.balance;\n        this.depositsTotal += account.balance;\n      });\n    });\n    this.accountsService.getLoanAccounts().subscribe( (loans: Loans[]) => {\n      this.loans = loans;\n      this.loans.forEach((account) => {\n        this.totalDueThisMonth += account.monthlyEmi;\n        this.totalLoanAmountPending += (account.initialAmount - account.paidAmount);\n      });\n    });\n    this.accountsService.getCardAccounts().subscribe( (cards: Card[]) => {\n      this.cards = cards;\n      this.cards.forEach((card) => {\n        if (card.balance < 0) {\n          this.totalDueThisMonth += card.balance;\n        }\n      });\n    });\n  }\n\n}\n","<mat-card>\n    <mat-grid-list cols=\"6\" rowHeight=\"30px\">\n        <mat-grid-tile\n            [colspan]=\"6\"\n            [rowspan]=\"1\"\n            [style.background]=\"'white'\">\n            Your total balance is {{accountsTotal |currency: '₹' :'symbol' :0}}\n        </mat-grid-tile>\n        <mat-grid-tile\n            [colspan]=\"2\"\n            [rowspan]=\"1\"\n            [style.background]=\"'white'\">\n            Savings {{savingsTotal |currency: '₹' :'symbol' :0}}\n        </mat-grid-tile>\n        <mat-grid-tile\n            [colspan]=\"2\"\n            [rowspan]=\"1\"\n            [style.background]=\"'white'\">\n            Deposits {{depositsTotal |currency: '₹' :'symbol' :0}}\n        </mat-grid-tile>\n        <mat-grid-tile\n            [colspan]=\"2\"\n            [rowspan]=\"1\"\n            [style.background]=\"'white'\">\n            Pending Loans {{totalLoanAmountPending |currency: '₹' :'symbol' :0}}\n        </mat-grid-tile>\n      </mat-grid-list>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/modules/login/login.service';\n\n@Component({\n  selector: 'app-top-fixed-bar',\n  templateUrl: './top-fixed-bar.component.html',\n  styleUrls: ['./top-fixed-bar.component.css']\n})\nexport class TopFixedBarComponent implements OnInit {\n  isMock: boolean;\n  constructor(private loginService: LoginService) { }\n\n  ngOnInit() {\n    this.isMock = sessionStorage.getItem('mock') === 'true';\n  }\n\n  isAuthenticated(): boolean {\n    return this.loginService.isAuthenticated();\n  }\n\n  toggleMock() {\n    this.isMock = !this.isMock;\n    sessionStorage.setItem('mock', this.isMock ? 'true' : 'false');\n    console.log(this.isMock);\n  }\n}\n","<mat-toolbar class=\"primary toolbar\">  \n  <mat-toolbar-row>\n      \n    <span class=\"menuItem\">XBank!</span>\n    <span class=\"menuItem\"></span>\n    <span *ngIf=\"!isAuthenticated()\">\n      <a routerLink=\"/\" routerLinkActive=\"active\" class=\"menuItem primary\"><button   mat-button mat-flat-button class=\"primary\"><mat-icon class=\"primary\">home</mat-icon><span>Home</span></button></a>\n      <a routerLink=\"/\" routerLinkActive=\"active\" class=\"menuItem primary\"><button   mat-button mat-flat-button class=\"primary\"><mat-icon class=\"primary\">person</mat-icon><span>Retail</span></button></a>\n      <a routerLink=\"/\" routerLinkActive=\"active\" class=\"menuItem primary\"><button   mat-button mat-flat-button class=\"primary\"><mat-icon class=\"primary\">business_center</mat-icon><span>Corporate</span></button></a>\n      <a routerLink=\"/\" routerLinkActive=\"active\" class=\"menuItem primary\"><button   mat-button mat-flat-button class=\"primary\"><mat-icon class=\"primary\">show_chart</mat-icon><span>Investment</span></button></a>  \n    </span>\n    <span *ngIf=\"isAuthenticated()\">\n      <a routerLink=\"/dashboard\" routerLinkActive=\"active\" class=\"menuItem primary\"><button   mat-button mat-flat-button class=\"primary\"><mat-icon class=\"primary\">home</mat-icon><span>Home</span></button></a>\n      <a routerLink=\"/\" routerLinkActive=\"active\" class=\"menuItem primary\"><button   mat-button mat-flat-button class=\"primary\"><mat-icon class=\"primary\">person</mat-icon><span>My Accounts</span></button></a>\n      <a routerLink=\"/\" routerLinkActive=\"active\" class=\"menuItem primary\"><button   mat-button mat-flat-button class=\"primary\"><mat-icon class=\"primary\">business_center</mat-icon><span>Transactions</span></button></a>\n      <a routerLink=\"/\" routerLinkActive=\"active\" class=\"menuItem primary\"><button   mat-button mat-flat-button class=\"primary\"><mat-icon class=\"primary\">show_chart</mat-icon><span>Investments</span></button></a>  \n      <a routerLink=\"/logout\" routerLinkActive=\"active\" class=\"menuItem primary last\"><button   mat-button mat-flat-button class=\"primary\"><mat-icon>face</mat-icon><span>Logout</span></button></a>      \n    </span>\n    <mat-checkbox class=\"example-margin\"  class=\"menuItem primary\" (change)=\"toggleMock()\" [checked]=\"isMock\">Mock</mat-checkbox>\n\n  </mat-toolbar-row>\n\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-quick-actions-bar',\n  templateUrl: './quick-actions-bar.component.html',\n  styleUrls: ['./quick-actions-bar.component.css']\n})\nexport class QuickActionsBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>quick-actions-bar works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WelcomeComponent } from './modules/welcome/welcome-component/welcome-component.component';\nimport { DashboardComponent } from './modules/dashboard/dashboard/dashboard.component';\nimport { LogoutComponent } from './modules/login/logout/logout.component';\nimport { RetailOnboardingComponent } from './modules/onboarding/retail-onboarding/retail-onboarding.component';\nimport { EmailVerificationComponent } from './modules/users/email-verification/email-verification.component';\nimport { UserStateGuard } from './common/guards/LoggedInGuard';\nimport { PrivacyPolicyComponent } from './modules/documentation/privacy-policy/privacy-policy.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'welcome', pathMatch: 'full'},\n  {path: 'login', redirectTo: 'welcome'},\n  {path: 'welcome', component: WelcomeComponent},\n  {path: 'retail-onboarding', component: RetailOnboardingComponent},\n  {path: 'email-verify', component: EmailVerificationComponent},\n  {path: 'dashboard', component: DashboardComponent, canActivate: [UserStateGuard]},\n  {path: 'logout', component: LogoutComponent},\n  {path: 'privacy', component: PrivacyPolicyComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OnboardingStartOptionsComponent } from './onboarding-start-options/onboarding-start-options.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { RetailOnboardingComponent } from './retail-onboarding/retail-onboarding.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { OnboardingDirective } from './onboarding-components/onboardinghost.directive';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RetailExploringOnboardingComponent } from './onboarding-components/retail-exploring-onboarding/retail-exploring-onboarding.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { OnboardingFormNotfoundErrorComponent } from './onboarding-components/onboarding-form-notfound-error/onboarding-form-notfound-error.component';\n\n\n\n@NgModule({\n  declarations: [OnboardingStartOptionsComponent,\n     RetailOnboardingComponent,\n     OnboardingDirective,\n     RetailExploringOnboardingComponent,\n     OnboardingFormNotfoundErrorComponent],\n  exports: [OnboardingStartOptionsComponent],\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatGridListModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatStepperModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    FormsModule,\n    MatInputModule,\n    ReactiveFormsModule\n  ]\n})\nexport class OnboardingModule { }\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}