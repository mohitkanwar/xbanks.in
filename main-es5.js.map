{"version":3,"sources":["webpack:///src/app/modules/onboarding/onboarding-start-options/onboarding-start-options.component.ts","webpack:///src/app/modules/onboarding/onboarding-start-options/onboarding-start-options.component.html","webpack:///src/environments/backendAPIs.ts","webpack:///src/app/theme/confirmation-dialogue/confirmation-dialogue-input.ts","webpack:///src/app/modules/welcome/welcome-component/welcome-component.component.ts","webpack:///src/app/modules/welcome/welcome-component/welcome-component.component.html","webpack:///src/app/auto-generated/auto-generated.component.ts","webpack:///src/app/auto-generated/auto-generated.component.html","webpack:///src/app/modules/dashboard/portfolio-summary/accounts.service.ts","webpack:///src/app/modules/dashboard/dashboard/dashboard.component.ts","webpack:///src/app/modules/dashboard/dashboard/dashboard.component.html","webpack:///src/app/theme/footer-bar/footer-bar.component.ts","webpack:///src/app/theme/footer-bar/footer-bar.component.html","webpack:///src/app/theme/notification/notification.service.ts","webpack:///src/app/page-layouts/page-layouts.module.ts","webpack:///src/app/modules/users/email-verification/email-verification.component.ts","webpack:///src/app/modules/users/email-verification/email-verification.component.html","webpack:///src/app/modules/login/login.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/theme/theme.module.ts","webpack:///src/app/modules/login/logout/logout.component.ts","webpack:///src/app/theme/confirmation-dialogue/confirmation-dialogue.component.ts","webpack:///src/app/theme/confirmation-dialogue/confirmation-dialogue.component.html","webpack:///src/app/theme/expandable-list/expandable-list.component.ts","webpack:///src/app/theme/expandable-list/expandable-list.component.html","webpack:///src/app/modules/onboarding/onboarding-components/onboardinghost.directive.ts","webpack:///src/app/common/token.interceptor.ts","webpack:///src/app/modules/onboarding/retail-onboarding/retailoffer.model.ts","webpack:///src/app/modules/documentation/privacy-policy/privacy-policy.component.ts","webpack:///src/app/modules/documentation/privacy-policy/privacy-policy.component.html","webpack:///src/app/common/guards/LoggedInGuard.ts","webpack:///src/app/common/mock.interceptor.ts","webpack:///src/app/modules/onboarding/onboarding-components/onboarding-form-notfound-error/onboarding-form-notfound-error.component.ts","webpack:///src/app/modules/onboarding/onboarding-components/onboarding-form-notfound-error/onboarding-form-notfound-error.component.html","webpack:///src/app/common/image-slider/image-slider.component.ts","webpack:///src/app/common/image-slider/image-slider.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/modules/onboarding/onboarding-components/retail-exploring-onboarding/retail-exploring-onboarding.component.ts","webpack:///src/app/modules/onboarding/onboarding-components/retail-exploring-onboarding/retail-exploring-onboarding.component.html","webpack:///src/app/theme/expandable-list/pageupdatedevent.model.ts","webpack:///src/app/theme/notification/notification.component.ts","webpack:///src/app/modules/dashboard/dashboard.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/modules/dashboard/transactions-summary/transactions-summary.component.ts","webpack:///src/app/modules/dashboard/transactions-summary/transactions-summary.component.html","webpack:///src/app/common/common.module.ts","webpack:///src/app/modules/onboarding/retail-onboarding/retail-onboarding.component.ts","webpack:///src/app/modules/onboarding/retail-onboarding/retail-onboarding.component.html","webpack:///src/app/theme/main-layout/main-layout.component.ts","webpack:///src/app/theme/main-layout/main-layout.component.html","webpack:///src/app/modules/users/user.service.ts","webpack:///src/app/modules/welcome/welcome.module.ts","webpack:///src/app/common/mock/mockresponse.service.ts","webpack:///src/app/modules/login/login.module.ts","webpack:///src/app/modules/welcome/register/register.component.ts","webpack:///src/app/modules/welcome/register/register.component.html","webpack:///src/app/common/top-navigation-bar/top-navigation-bar.component.ts","webpack:///src/app/common/top-navigation-bar/top-navigation-bar.component.html","webpack:///src/app/modules/login/login-form/login-form.component.ts","webpack:///src/app/modules/login/login-form/login-form.component.html","webpack:///src/app/modules/users/user.model.ts","webpack:///src/app/page-layouts/pre-login/pre-login.component.ts","webpack:///src/app/page-layouts/pre-login/pre-login.component.html","webpack:///src/app/modules/onboarding/onboarding-components/onboarding.step.ts","webpack:///src/app/modules/dashboard/portfolio-summary/portfolio-summary.component.ts","webpack:///src/app/modules/dashboard/portfolio-summary/portfolio-summary.component.html","webpack:///src/app/theme/top-fixed-bar/top-fixed-bar.component.ts","webpack:///src/app/theme/top-fixed-bar/top-fixed-bar.component.html","webpack:///src/app/modules/dashboard/quick-actions-bar/quick-actions-bar.component.ts","webpack:///src/app/modules/dashboard/quick-actions-bar/quick-actions-bar.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/modules/onboarding/onboarding.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["OnboardingStartOptionsComponent","router","dialogRef","close","navigate","startRetailOnboarding","selector","templateUrl","styleUrls","BackendAPIService","backendUrl","PATH_SEPERATOR","context","contextName","baseURL","getBaseUrl","pageSize","pageNumber","companyName","medicineName","searchCriteria","id","providedIn","ConfirmationDialogueInput","ConfirmationDialogueButtons","text","returnText","color","WelcomeComponent","console","log","imagesUrl","AutoGeneratedComponent","AccountsService","http","backendApis","get","getAccountsAPI","getDepositAccountsAPI","getLoanAccountsAPI","getCardsAccountsAPI","DashboardComponent","FooterBarComponent","NotificationService","notificationEvent","message","emit","PageLayoutsModule","declarations","imports","exports","EmailVerificationComponent","activatedRoute","queryParams","subscribe","params","queryParam","q","LoginService","backendAPIs","sessionStorage","getItem","user","authKey","btoa","username","password","headers","authorization","setItem","post","getLogintAPI","getLogOutAPI","environment","production","mockBackendUrl","ThemeModule","providers","bootstrap","LogoutComponent","notificationService","logoutService","removeItem","logout","sendNotification","ConfirmationDialogueComponent","data","i","buttons","ExpandableListComponent","route","pageChanged","deleteEvent","getPaginatedItems","length","pageIndex","previousPageIndex","row","expandedRow","event","paginationUpdate","height","minHeight","display","animations","listData","listColumns","detailsColumns","totalNumberOfItems","OnboardingDirective","viewContainerRef","TokenInterceptor","request","next","accessToken","clone","setHeaders","Authorization","handle","RetailOffer","PrivacyPolicyComponent","UserStateGuard","loginService","userService","isAuthenticated","loggedInUser","getLoggedInUser","status","accountNonExpired","accountNonLocked","credentialsNonExpired","termsAccepted","firstTimePwdReset","error","MockInterceptor","mockResponseService","mock","url","startsWith","mockRequestUrl","getMockRequestUrl","mockRequest","method","OnboardingFormNotfoundErrorComponent","ImageSliderComponent","timer","selectedImage","images","subscription","AppComponent","title","RetailExploringOnboardingComponent","fb","profileForm","group","email","required","PageUpdatedEventData","NotificationComponent","snackbar","showNotification","setTimeout","open","duration","DashboardModule","AppModule","provide","useClass","multi","TransactionsSummaryComponent","httpClient","displayedColumns","resultsLength","isLoadingResults","isRateLimitReached","push","date","Date","state","amount","narration","reference","closingBalance","getDate","paginator","ExampleHttpDatabase","sort","order","page","href","requestUrl","CommonAppModule","RetailOnboardingComponent","componentFactoryResolver","formBuilder","offers","currentAdIndex","isLinear","getExploringOffer","getEnthusiasticOffer","getProOffer","breakpoint","window","innerWidth","onboardingSteps","name","bio","clearInterval","interval","componentFactory","resolveComponentFactory","resolveFormComponent","selectedOffer","formName","onboardingHost","clear","componentRef","createComponent","instance","formComponents","component","selectedFormComponent","find","x","target","forEach","offer","recomended","loadOfferForm","exploring","subtitle","description","enthusiastic","pro","onResize","MainLayoutComponent","UserService","getUsersListAPI","getLoggedInUserAPI","WelcomeModule","MockResponseService","mockUrl","replace","LoginModule","RegisterComponent","dialog","width","startOnboarding","TopNavigationBarComponent","LoginFormComponent","showPassword","loginForm","valid","value","login","response","isAdminUser","authorities","authority","User","PreLoginComponent","OnboardingStep","PortfolioSummaryComponent","accountsService","accountsTotal","totalDueThisMonth","totalLoanAmountPending","savingsTotal","depositsTotal","getSavingsAccounts","accounts","savingsAccounts","account","balance","getDepositAccounts","depositAccounts","getLoanAccounts","loans","monthlyEmi","initialAmount","paidAmount","getCardAccounts","cards","card","TopFixedBarComponent","isMock","toggleMock","QuickActionsBarComponent","routes","path","redirectTo","pathMatch","canActivate","AppRoutingModule","forRoot","OnboardingModule","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaA,+B;AAEX,iDAAmBC,MAAnB,EACoBC,SADpB,EAC+E;AAAA;;AAD5D,eAAAD,MAAA,GAAAA,MAAA;AACC,eAAAC,SAAA,GAAAA,SAAA;AAA8D;;;;qCAE1E,CACP;;;kDACoB;AACnB,iBAAKA,SAAL,CAAeC,KAAf;AACA,iBAAKF,MAAL,CAAYG,QAAZ,CAAqB,CAAC,oBAAD,CAArB;AACD;;;;;;;yBAVUJ,+B,EAA+B,uH,EAAA,sI;AAAA,O;;;cAA/BA,+B;AAA+B,qD;AAAA,iB;AAAA,e;AAAA,kQ;AAAA;AAAA;ACR5C;;AACI;;AAAG;;AAA0B;;AAC7B;;AAAG;;AAAkD;;AACrD;;AACI;;AACI;;AACI;;AACI;;AAAkD;;AAAI;;AACtD;;AAAgB;;AAAU;;AAC1B;;AAAmB;;AAAc;;AACrC;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAAmB;AAAA,qBAAS,IAAAK,qBAAA,EAAT;AAAgC,aAAhC;;AAAkC;;AAAS;;AAClE;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAkD;;AAAoB;;AACtE;;AAAgB;;AAAe;;AAC/B;;AAAmB;;AAAiB;;AACxC;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAAmB;;AAAS;;AAChC;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAkD;;AAAM;;AACxD;;AAAgB;;AAAc;;AAC9B;;AAAmB;;AAAiB;;AACxC;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAAmB;;AAAS;;AAChC;;AACJ;;AACJ;;AACJ;;AACJ;;;;AApDuB;;AAAA,mFAAa,SAAb,EAAa,CAAb;;AAiBA;;AAAA,mFAAa,SAAb,EAAa,CAAb;;AAiBA;;AAAA,mFAAa,SAAb,EAAa,CAAb;;;;;;;;;wED9BVL,+B,EAA+B;gBAL3C,uDAK2C;iBALjC;AACTM,oBAAQ,EAAE,8BADD;AAETC,uBAAW,EAAE,2CAFJ;AAGTC,qBAAS,EAAE,CAAC,0CAAD;AAHF,W;AAKiC,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AER5C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKaC,iB;;;;;;;uCAGU;AACnB,gBAAMC,UAAU,GAAI,yDAAYA,UAAhC;AACA,gBAAMC,cAAc,GAAG,GAAvB;AACA,gBAAMC,OAAO,GAAG,yDAAYC,WAA5B;AAEA,gBAAIC,OAAO,GAAGJ,UAAU,GAAGC,cAA3B;;AACA,gBAAIC,OAAO,KAAK,EAAhB,EAAoB;AAClBE,qBAAO,GAAGA,OAAO,GAAGF,OAAV,GAAoBD,cAA9B;AACD;;AACD,mBAAQG,OAAR;AACD;;;2CAEa;AACZ,mBAAO,KAAKC,UAAL,KAAqB,wBAA5B;AACD;;;kDACoB;AACnB,mBAAO,KAAKA,UAAL,KAAqB,wBAA5B;AACD;;;+CACiB;AAChB,mBAAO,KAAKA,UAAL,KAAqB,qBAA5B;AACD;;;gDACkB;AACjB,mBAAO,KAAKA,UAAL,KAAqB,qBAA5B;AACD;;;6CACe;AACd,mBAAO,KAAKA,UAAL,KAAoB,aAA3B;AACD;;;yCAEW;AACV,mBAAO,KAAKA,UAAL,KAAqB,YAA5B;AACD;;;yCACW;AACV,mBAAO,KAAKA,UAAL,KAAqB,QAA5B;AACD;;;8CACqBC,Q,EAAkBC,U,EAAkB;AACtD,mBAAO,KAAKF,UAAL,KACN,gBADM,GACa,YADb,GAC4BC,QAD5B,GACuC,cADvC,GACwDC,UADxD,GACqE,YAD5E;AAED;;;oDACyBC,W,EAAqBC,Y,EAAoB;AACjE,mBAAO,KAAKJ,UAAL,KACN,mBADM,GACgBG,WADhB,GAC8B,GAD9B,GACoCC,YADpC,GACmD,GAD1D;AAED;;;oDACyBC,c,EAAsB;AAC9C,mBAAO,KAAKL,UAAL,KACP,qBADO,GACiBK,cADxB;AAED;;;8CAEiBC,E,EAAU;AAC5B,mBAAO,KAAKN,UAAL,KAAqB,SAArB,GAAiC,GAAjC,GAAuCM,EAA9C;AACD;;;gDACkB;AACjB,mBAAO,KAAKN,UAAL,KAAqB,SAA5B;AACD;;;4CACwBC,Q,EAAkBC,U,EAAkB;AAC3D,mBAAO,KAAKF,UAAL,KACH,wBADG,GAEHC,QAFG,GAGH,cAHG,GAIHC,UAJG,GAKH,YALJ;AAMD;;;0CACsBD,Q,EAAkBC,U,EAAoB;AAC3D,mBAAO,KAAKF,UAAL,KAAqB,qBAArB,GAA6CC,QAA7C,GAAwD,cAAxD,GAAyEC,UAAzE,GAAsF,YAA7F;AACD;;;+CACwB;AACvB,mBAAO,KAAKF,UAAL,KAAqB,UAA5B;AACH;;;;;;;yBArEYN,iB;AAAiB,O;;;eAAjBA,iB;AAAiB,iBAAjBA,iBAAiB,K;AAAA,oBAFhB;;;;;wEAEDA,iB,EAAiB;gBAH7B,wDAG6B;iBAHlB;AACVa,sBAAU,EAAE;AADF,W;AAGkB,U;;;;;;;;;;;;;;;;;;ACL9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,yB;;;;UAKAC,2B,GAIT,qCAAYC,IAAZ,EAA0BC,UAA1B,EAA8CC,KAA9C,EAA8D;AAAA;;AAC1D,aAAKF,IAAL,GAAYA,IAAZ;AACA,aAAKC,UAAL,GAAkBA,UAAlB;AACA,aAAKC,KAAL,GAAaA,KAAb;AACH,O;;;;;;;;;;;;;;;;;ACbL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,gB;AAEX,oCAAc;AAAA;;AAAEC,iBAAO,CAACC,GAAR,CAAY,mBAAZ;AAAkC;;;;qCAGvC;AACT,iBAAKC,SAAL,GAAiB,CAAC,8BAAD,CAAjB;AACD;;;;;;;yBAPUH,gB;AAAgB,O;;;cAAhBA,gB;AAAgB,8C;AAAA,gB;AAAA,e;AAAA,iH;AAAA;AAAA;ACP7B;;AACI;;AAIQ;;AAGR;;AACA;;AAII;;AACJ;;AACA;;AAII;;AACJ;;AAEF;;;;AApBM;;AAAA,mFAAa,SAAb,EAAa,CAAb;;AAII;;AAAA;;AAIJ;;AAAA,mFAAa,SAAb,EAAa,CAAb;;AAMA;;AAAA,mFAAa,SAAb,EAAa,CAAb;;;;;;;;;wEDTKA,gB,EAAgB;gBAL5B,uDAK4B;iBALlB;AACTtB,oBAAQ,EAAE,uBADD;AAETC,uBAAW,EAAE,oCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAKkB,U;;;;;;;;;;;;;;;;;;;;AEP7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOawB,sB;AAEX,0CAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,sB;AAAsB,O;;;cAAtBA,sB;AAAsB,2C;AAAA,gB;AAAA,e;AAAA;AAAA;ACPnC;;AAAG;;AAAqB;;;;;;;;wEDOXA,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACT1B,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKwB,U;;;;;;;;;;;;;;;;;;;;AEPnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOayB,e;AAaX,iCAAoBC,IAApB,EACoBC,WADpB,EACoD;AAAA;;AADhC,eAAAD,IAAA,GAAAA,IAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AAAmC;;;;+CAblC;AACnB,mBAAO,KAAKD,IAAL,CAAUE,GAAV,CAAc,KAAKD,WAAL,CAAiBE,cAAjB,EAAd,CAAP;AACD;;;+CACoB;AACnB,mBAAO,KAAKH,IAAL,CAAUE,GAAV,CAAc,KAAKD,WAAL,CAAiBG,qBAAjB,EAAd,CAAP;AACD;;;4CACiB;AAChB,mBAAO,KAAKJ,IAAL,CAAUE,GAAV,CAAc,KAAKD,WAAL,CAAiBI,kBAAjB,EAAd,CAAP;AACD;;;4CACiB;AAChB,mBAAO,KAAKL,IAAL,CAAUE,GAAV,CAAc,KAAKD,WAAL,CAAiBK,mBAAjB,EAAd,CAAP;AACD;;;;;;;yBAZUP,e,EAAe,uH,EAAA,sI;AAAA,O;;;eAAfA,e;AAAe,iBAAfA,eAAe,K;AAAA,oBAFd;;;;;wEAEDA,e,EAAe;gBAH3B,wDAG2B;iBAHhB;AACVX,sBAAU,EAAE;AADF,W;AAGgB,U;;;;;;;;;;;;;;;;;;;;;;;;ACP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOamB,kB;AAEX,sCAAc;AAAA;AAAG;;;;qCAEN,CACV;;;;;;;yBALUA,kB;AAAkB,O;;;cAAlBA,kB;AAAkB,sC;AAAA,gB;AAAA,gB;AAAA,iF;AAAA;AAAA;ACN/B;;AACI;;AAII;;AACJ;;AACA;;AAII;;AACJ;;AACA;;AAII;;AACJ;;AAGF;;;;AAjBM;;AAAA;;AAFA,mFAAa,SAAb,EAAa,CAAb;;AAQA;;AAAA;;AAFA,mFAAa,SAAb,EAAa,CAAb;;AAQA;;AAAA;;AAFA,mFAAa,SAAb,EAAa,CAAb;;;;;;;;;wEDRKA,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTnC,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;AEP/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOakC,kB;AAEX,sCAAc;AAAA;AAAG;;;;qCAEN,CACV;;;;;;;yBALUA,kB;AAAkB,O;;;cAAlBA,kB;AAAkB,uC;AAAA,gB;AAAA,e;AAAA;AAAA;ACP/B;;AACE;;AACE;;AACE;;AAAU;;AAAS;;AAAY;;AACjC;;AACF;;AACF;;;;;;;;;wEDCaA,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTpC,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;AEP/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAIamC,mB;AAHb;AAAA;;AAIc,eAAAC,iBAAA,GAAuD,IAAI,0DAAJ,EAAvD;AAKb;;;;2CAH2BC,O,EAAiB;AACrC,iBAAKD,iBAAL,CAAuBE,IAAvB,CAA4B;AAACD,qBAAO,EAAPA;AAAD,aAA5B;AACH;;;;;;;yBALQF,mB;AAAmB,O;;;eAAnBA,mB;AAAmB,iBAAnBA,mBAAmB,K;AAAA,oBAFhB;;;;;wEAEHA,mB,EAAmB;gBAH/B,wDAG+B;iBAHpB;AACRrB,sBAAU,EAAE;AADJ,W;AAGoB,U;AAClBsB,2BAAiB,EAAE,CAAF;kBAA1B;AAA0B,WAAE;;;;;;;;;;;;;;;;;;;ACLjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAeaG,iB;;;;;cAAAA;;;;2BAAAA,iB;AAAiB,S;AAAA,kBARnB,CACP,4DADO,EAEP,qEAFO,CAQmB;;;;4HAAjBA,iB,EAAiB;AAAA,yBATb,gFASa;AATI,oBAE9B,4DAF8B,EAG9B,qEAH8B,CASJ;AANX,oBAGf,gFAHe;AAMW,S;AAHT,O;;;;;wEAGRA,iB,EAAiB;gBAV7B,sDAU6B;iBAVpB;AACRC,wBAAY,EAAE,CAAC,gFAAD,CADN;AAERC,mBAAO,EAAE,CACP,4DADO,EAEP,qEAFO,CAFD;AAMRC,mBAAO,EAAE,CACP,gFADO;AAND,W;AAUoB,U;;;;;;;;;;;;;;;;;;ACf9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaC,0B;AAGX,4CAAoBC,cAApB,EAAoD;AAAA;;AAAA;;AAAhC,eAAAA,cAAA,GAAAA,cAAA;AAClB,eAAKA,cAAL,CAAoBC,WAApB,CAAgCC,SAAhC,CAA0C,UAAAC,MAAM,EAAI;AAC9C,gBAAMC,UAAU,GAAGD,MAAM,CAACE,CAA1B;AACA5B,mBAAO,CAACC,GAAR,CAAY0B,UAAZ;;AACA,gBAAIA,UAAU,IAAI,IAAd,IAAsBA,UAAU,KAAK,EAAzC,EAA6C;AAC3C,mBAAI,CAACX,OAAL,GAAe,4BAAf;AACD,aAFD,MAEO;AACL,mBAAI,CAACA,OAAL,GAAe,6BAAf;AACD;AACJ,WARH;AASD;;;;qCAEO,CACP;;;;;;;yBAhBUM,0B,EAA0B,+H;AAAA,O;;;cAA1BA,0B;AAA0B,+C;AAAA,gB;AAAA,e;AAAA;AAAA;ACRvC;;AAAG;;AAAW;;;;AAAX;;AAAA;;;;;;;;wEDQUA,0B,EAA0B;gBALtC,uDAKsC;iBAL5B;AACT7C,oBAAQ,EAAE,wBADD;AAETC,uBAAW,EAAE,qCAFJ;AAGTC,qBAAS,EAAE,CAAC,oCAAD;AAHF,W;AAK4B,U;;;;;;;;;;;;;;;;;;;;;;AERvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUakD,Y;AAIX,8BAAoBxB,IAApB,EACoByB,WADpB,EACoD;AAAA;;AADhC,eAAAzB,IAAA,GAAAA,IAAA;AACA,eAAAyB,WAAA,GAAAA,WAAA;AAAmC;;;;4CAJxC;AACb,mBAAQC,cAAc,CAACC,OAAf,CAAuB,eAAvB,MAA4C,MAApD;AACD;;;gCAIKC,I,EAAU;AACd,gBAAMC,OAAO,GAAG,WAAWC,IAAI,CAACF,IAAI,CAACG,QAAL,GAAgB,GAAhB,GAAsBH,IAAI,CAACI,QAA5B,CAA/B;AACA,gBAAMC,OAAO,GAAG,IAAI,gEAAJ,CAAgBL,IAAI,GAAG;AACrCM,2BAAa,EAAGL;AADqB,aAAH,GAElC,EAFc,CAAhB;AAGAH,0BAAc,CAACS,OAAf,CAAuB,UAAvB,EAAmCN,OAAnC;AACA,mBAAO,KAAK7B,IAAL,CAAUoC,IAAV,CAA6B,KAAKX,WAAL,CAAiBY,YAAjB,EAA7B,EAA8DT,IAA9D,EAAoE;AAACK,qBAAO,EAAPA;AAAD,aAApE,CAAP;AACD;;;mCACQ;AACP,gBAAMJ,OAAO,GAAGH,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAhB;AACA,gBAAMM,OAAO,GAAG,IAAI,gEAAJ,CAAgBJ,OAAO,GAAG;AACxCK,2BAAa,EAAGL;AADwB,aAAH,GAErC,EAFc,CAAhB;AAGA,mBAAO,KAAK7B,IAAL,CAAUoC,IAAV,CAA6B,KAAKX,WAAL,CAAiBa,YAAjB,EAA7B,EAA8D,IAA9D,EAAoE;AAACL,qBAAO,EAAPA;AAAD,aAApE,CAAP;AACD;;;;;;;yBArBUT,Y,EAAY,uH,EAAA,sI;AAAA,O;;;eAAZA,Y;AAAY,iBAAZA,YAAY,K;AAAA,oBAFX;;;;;wEAEDA,Y,EAAY;gBAHxB,wDAGwB;iBAHb;AACVpC,sBAAU,EAAE;AADF,W;AAGa,U;;;;;;;;;;;;;;;;;;;;;;;;ACVzB;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAMmD,WAAW,GAAG;AACzBC,kBAAU,EAAE,KADa;AAEzBhE,kBAAU,EAAE,uBAFa;AAGzBiE,sBAAc,EAAE,cAHS;AAIzB9D,mBAAW,EAAE;AAJY,OAApB;AAOP;;;;;;;AAOA;;;;;;;;;;;;;;;;;AClBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UA6Ca+D,W;;;;;cAAAA,W;AAAW,oBAHR,sFAGQ;;;;2BAAXA,W;AAAW,S;AAAA,mBAJT,E;AAAE,kBAdJ,CACP,4DADO,EAEP,4FAFO,EAGP,2EAHO,EAIP,oEAJO,EAKP,oEALO,EAMP,qEANO,EAOP,6EAPO,EAQP,wEARO,EASP,uEATO,EAUP,8EAVO,EAWP,6EAXO,CAcI;;;;4HAIJA,W,EAAW;AAAA,yBAzBpB,2FAyBoB,EAxBpB,sFAwBoB,EAvBpB,oFAuBoB,EAtBpB,2FAsBoB,EArBpB,mGAqBoB,EApBpB,qHAoBoB;AApBS,oBAG3B,4DAH2B,EAI3B,4FAJ2B,EAK3B,2EAL2B,EAM3B,oEAN2B,EAO3B,oEAP2B,EAQ3B,qEAR2B,EAS3B,6EAT2B,EAU3B,wEAV2B,EAW3B,uEAX2B,EAY3B,8EAZ2B,EAa3B,6EAb2B,CAoBT;AAPD,oBAKT,sFALS,EAKY,2FALZ,EAKmC,mGALnC,EAK4D,qHAL5D;AAOC,S;AAFwF,O;;;;;wEAEnGA,W,EAAW;gBA3BvB,sDA2BuB;iBA3Bd;AACN5B,wBAAY,EAAE,CACd,2FADc,EAEd,sFAFc,EAGd,oFAHc,EAId,2FAJc,EAKd,mGALc,EAMd,qHANc,CADR;AASNC,mBAAO,EAAE,CACP,4DADO,EAEP,4FAFO,EAGP,2EAHO,EAIP,oEAJO,EAKP,oEALO,EAMP,qEANO,EAOP,6EAPO,EAQP,wEARO,EASP,uEATO,EAUP,8EAVO,EAWP,6EAXO,CATH;AAuBN4B,qBAAS,EAAE,EAvBL;AAwBNC,qBAAS,EAAE,CAAC,sFAAD,CAxBL;AAyBN5B,mBAAO,EAAE,CAAC,sFAAD,EAAsB,2FAAtB,EAA6C,mGAA7C,EAAsE,qHAAtE;AAzBH,W;AA2Bc,U;;;;;;;;;;;;;;;;;;AC7CxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUa6B,e;AAEX,iCAAoB9E,MAApB,EAA4C+E,mBAA5C,EAA8FC,aAA9F,EAA2H;AAAA;;AAAvG,eAAAhF,MAAA,GAAAA,MAAA;AAAwB,eAAA+E,mBAAA,GAAAA,mBAAA;AAAkD,eAAAC,aAAA,GAAAA,aAAA;AAAgC;;;;qCAEnH;AACTrB,0BAAc,CAACsB,UAAf,CAA0B,eAA1B;AACAtB,0BAAc,CAACsB,UAAf,CAA0B,UAA1B;AACA,iBAAKjF,MAAL,CAAYG,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACA,iBAAK6E,aAAL,CAAmBE,MAAnB;AACA,iBAAKH,mBAAL,CAAyBI,gBAAzB,CAA0C,0BAA1C;AACD;;;;;;;yBAVUL,e,EAAe,uH,EAAA,oK,EAAA,4H;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,gB;AAAA,e;AAAA,+D;AAAA;;;;;wEAAfA,e,EAAe;gBAL3B,uDAK2B;iBALjB;AACTzE,oBAAQ,EAAE,YADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKiB,U;;;;;;;;;;;;;;;;;;;;;;;;;;ACV5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACIE;;AACE;;AAA+D;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgD;;AAAe;;AAChI;;;;;;AADwC;;AAAA,iGAAAmB,KAAA;;AAAyE;;AAAA;;;;;;;;AAEjH;;AACE;;AAAmD;AAAA;;AAAA;;AAAA;AAAA;;AAA8C;;AAAc;;AACjH;;;;;;AADmG;;AAAA;;;;UDCxF0D,6B;AAEX,+CACUnF,SADV,EAEkCoF,IAFlC,EAEmE;AAAA;;AADzD,eAAApF,SAAA,GAAAA,SAAA;AACwB,eAAAoF,IAAA,GAAAA,IAAA;AAAmC;;;;qCAE1D,CACV;;;yCAIW;AACV,iBAAKpF,SAAL,CAAeC,KAAf,CAAqB,EAArB;AACD;;;wCAEaoF,C,EAAW;AACvB,iBAAKrF,SAAL,CAAeC,KAAf,CAAqB,KAAKmF,IAAL,CAAUE,OAAV,CAAkBD,CAAlB,EAAqB7D,UAA1C;AACD;;;;;;;yBAjBU2D,6B,EAA6B,sI,EAAA,gEAI9B,wEAJ8B,C;AAIf,O;;;cAJdA,6B;AAA6B,kD;AAAA,gB;AAAA,e;AAAA,wO;AAAA;AAAA;ACT1C;;AACE;;AACE;;AACF;;AACA;;AAGA;;AAGF;;;;AARI;;AAAA;;AAEI;;AAAA;;AAGA;;AAAA;;;;;;;;;wEDEKA,6B,EAA6B;gBALzC,uDAKyC;iBAL/B;AACT/E,oBAAQ,EAAE,2BADD;AAETC,uBAAW,EAAE,wCAFJ;AAGTC,qBAAS,EAAE,CAAC,uCAAD;AAHF,W;AAK+B,U;;;;;;oBAIrC,oD;qBAAO,wE;;;;;;;;;;;;;;;;;;;;;AEbZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACYU;;AAAuC;;AAAW;;;;;;AAAX;;AAAA;;;;;;AACvC;;AAA0C;;AAAsB;;;;;;;;AAAtB;;AAAA;;;;;;AAH9C;;AAEI;;AACA;;AACF;;;;;;AAJY;;;;;;AAcV;;AACE;;AAAgC;;AAAG;;AAAU;;AAAI;;AACjD;;AAAiC;;AAAe;;AAClD;;;;;;;;AAFqC;;AAAA;;AACF;;AAAA;;;;;;AANzC;;AACE;;AAEE;;AACE;;AAIF;;AACF;;AACF;;;;;;;;AAVmC;;AACP;;AAAA;;AAGO;;AAAA;;;;;;AASrC;;;;;;;;AACA;;AAC0D;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC1D;;;;;;;;AADE;;;;;;AAEF;;;;;;;;;;;;UDpBWiF,uB;AAEX,yCAAoBC,KAApB,EAA2C;AAAA;;AAAvB,eAAAA,KAAA,GAAAA,KAAA;AAKZ,eAAA1E,QAAA,GAAW,CAAX;AACA,eAAAC,UAAA,GAAa,CAAb;AACE,eAAA0E,WAAA,GAAkD,IAAI,0DAAJ,EAAlD;AACA,eAAAC,WAAA,GAAkD,IAAI,0DAAJ,EAAlD;AARoC;;;;qCAWnC;AAAA;;AACT,iBAAKF,KAAL,CAAWnC,MAAX,CAAkBD,SAAlB,CAA4B,UAACC,MAAD,EAAoB;AAC9C,oBAAI,CAACsC,iBAAL,CAAuB;AAACC,sBAAM,EAAE,CAAT;AAAYC,yBAAS,EAAE,CAAvB;AAA0B/E,wBAAQ,EAAE,CAApC;AAAuCgF,iCAAiB,EAAE;AAA1D,eAAvB;AACF,aAFA;AAGD;;;4CACiBC,G,EAAK;AACrB,gBAAI,KAAKC,WAAL,KAAqBD,GAAzB,EAA8B;AAC5B,mBAAKC,WAAL,GAAmBD,GAAnB;AACD,aAFD,MAEO;AACL,mBAAKC,WAAL,GAAmB,EAAnB;AACD;AACF;;;4CACiBC,K,EAAO;AACvB,gBAAMC,gBAAgB,GAAyB,IAAI,4EAAJ,EAA/C;AACAA,4BAAgB,CAACN,MAAjB,GAA0BK,KAAK,CAACL,MAAhC;AACAM,4BAAgB,CAACL,SAAjB,GAA6BI,KAAK,CAACJ,SAAnC;AACAK,4BAAgB,CAACpF,QAAjB,GAA4BmF,KAAK,CAACnF,QAAlC;AACAoF,4BAAgB,CAACJ,iBAAjB,GAAqCG,KAAK,CAACH,iBAA3C;AACA,iBAAKL,WAAL,CAAiB7C,IAAjB,CAAsBsD,gBAAtB;AACD;;;;;;;yBAhCUX,uB,EAAuB,+H;AAAA,O;;;cAAvBA,uB;AAAuB,4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,gB;AAAA,m7B;AAAA;AAAA;ACTpC;;AAEM;;AASJ;;AACE;;AAWF;;AAEA;;AACA;;AAGA;;AACF;;AACA;;AAIc;AAAA,qBAAQ,IAAAI,iBAAA,QAAR;AAAiC,aAAjC;;AACd;;;;AApCiB;;AAE6B;;AAAA;;AAuBzB;;AAAA;;AACP;;AAAA;;AAGA;;AAAA;;AAEC;;AAAA,uGAA6B,UAA7B,EAA6B,YAA7B,EAA6B,WAA7B,EAA6B,cAA7B,EAA6B,iBAA7B,EAA6B,sEAA7B;;;;;;qBD9BD,CACV,oEAAQ,cAAR,EAAwB,CACtB,kEAAM,WAAN,EAAmB,kEAAM;AAACQ,kBAAM,EAAE,KAAT;AAAgBC,qBAAS,EAAE,GAA3B;AAAgCC,mBAAO,EAAE;AAAzC,WAAN,CAAnB,CADsB,EAEtB,kEAAM,UAAN,EAAkB,kEAAM;AAACF,kBAAM,EAAE;AAAT,WAAN,CAAlB,CAFsB,EAGtB,uEAAW,wBAAX,EAAqC,oEAAQ,sCAAR,CAArC,CAHsB,CAAxB,CADU;;;;;;wEAQDZ,uB,EAAuB;gBAZnC,uDAYmC;iBAZzB;AACTnF,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD,CAHF;AAITgG,sBAAU,EAAE,CACV,oEAAQ,cAAR,EAAwB,CACtB,kEAAM,WAAN,EAAmB,kEAAM;AAACH,oBAAM,EAAE,KAAT;AAAgBC,uBAAS,EAAE,GAA3B;AAAgCC,qBAAO,EAAE;AAAzC,aAAN,CAAnB,CADsB,EAEtB,kEAAM,UAAN,EAAkB,kEAAM;AAACF,oBAAM,EAAE;AAAT,aAAN,CAAlB,CAFsB,EAGtB,uEAAW,wBAAX,EAAqC,oEAAQ,sCAAR,CAArC,CAHsB,CAAxB,CADU;AAJH,W;AAYyB,U;;;;;AAGzBI,kBAAQ;kBAAhB;AAAgB,Y;AACRC,qBAAW;kBAAnB;AAAmB,Y;AACXC,wBAAc;kBAAtB;AAAsB,Y;AACfC,4BAAkB;kBAAzB;AAAyB,Y;AAClB5F,kBAAQ;kBAAf;AAAe,Y;AACRC,oBAAU;kBAAjB;AAAiB,Y;AACR0E,qBAAW,EAAE,CAAF;kBAApB;AAAoB,WAAE,C;AACbC,qBAAW,EAAE,CAAF;kBAApB;AAAoB,WAAE;;;;;;;;;;;;;;;;;;;AE3BzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKaiB,mB,GACX,6BAAmBC,gBAAnB,EAAuD;AAAA;;AAApC,aAAAA,gBAAA,GAAAA,gBAAA;AAAuC,O;;;yBAD/CD,mB,EAAmB,+H;AAAA,O;;;cAAnBA,mB;AAAmB;;;;;wEAAnBA,mB,EAAmB;gBAH/B,uDAG+B;iBAHrB;AACTvG,oBAAQ,EAAE;AADD,W;AAGqB,U;;;;;;;;;;;;;;;;;;;;;;ACLhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMayG,gB;AACX,oCAAc;AAAA;AACb;;;;oCAESC,O,EAA2BC,I,EAAiB;AAEpD,gBAAMC,WAAW,GAAGtD,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAApB;AACAmD,mBAAO,GAAGA,OAAO,CAACG,KAAR,CAAc;AACtBC,wBAAU,EAAE;AACVC,6BAAa,YAAKH,WAAL;AADH;AADU,aAAd,CAAV;AAKA,mBAAOD,IAAI,CAACK,MAAL,CAAYN,OAAZ,CAAP;AACD;;;;;;;yBAbUD,gB;AAAgB,O;;;eAAhBA,gB;AAAgB,iBAAhBA,gBAAgB;;;;;wEAAhBA,gB,EAAgB;gBAD5B;AAC4B,U;;;;;;;;;;;;;;;;;;;;ACN7B;AAAA;;;AAAA;AAAA;AAAA;;UAAaQ,W;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,sB;AAEX,0CAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,sB;AAAsB,O;;;cAAtBA,sB;AAAsB,2C;AAAA,iB;AAAA,e;AAAA;AAAA;ACPnC;;AACI;;AAAG;;AAA8B;;AACrC;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAMA;;AACA;;AACI;;AAAI;;AAAS;;AACb;;AAAI;;AAAqE;;AACzE;;AAAI;;AAA8C;;AAClD;;AAAI;;AAA+E;;AACvF;;AACA;;AACA;;AAAG;;AAA0B;;AAAI;;AACjC;;AACA;;AACA;;AACI;;AAAG;;AAA6B;;AAAI;;AACpC;;AAEJ;;AACA;;AACA;;AAAG;;AAAsC;;AAAI;;AAC7C;;AACA;;AACA;;AACA;;AAAG;;AAAiB;;AAAI;;AACxB;;AACA;;AACA;;AACA;;AAAG;;AAAgC;;AAAK;;AACxC;;AACA;;;;;;;;wEDrCaA,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTlH,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKwB,U;;;;;;;;;;;;;;;;;;;;AEPnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaiH,c;AACT,gCAAoBC,YAApB,EACoBC,WADpB,EAC4C;AAAA;;AADxB,eAAAD,YAAA,GAAAA,YAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACf;;;;wCAEM;AACP,gBAAMC,eAAe,GAAG,KAAKF,YAAL,CAAkBE,eAAlB,EAAxB;AACA/F,mBAAO,CAACC,GAAR,CAAY8B,cAAc,CAACC,OAAf,CAAuB,eAAvB,MAA4C,MAAxD;;AACA,gBAAID,cAAc,CAACC,OAAf,CAAuB,eAAvB,MAA4C,MAAhD,EAAwD;AACpD,kBAAMgE,YAAY,GAAG,KAAKF,WAAL,CAAiBG,eAAjB,EAArB;AACAD,0BAAY,CAACvE,SAAb,CAAuB,UAAAgC,IAAI,EAAI;AAC3BzD,uBAAO,CAACC,GAAR,CAAYwD,IAAZ;;AACA,oBAAI,CAACA,IAAL,EAAW;AACP;AACAzD,yBAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,yBAAO,gDAAG,KAAH,CAAP;AACH;;AACD,oBAAIwD,IAAI,CAACyC,MAAL,CAAYA,MAAZ,KAAuB,SAA3B,EAAsC;AAClC,sBAAMjE,IAAI,GAASwB,IAAI,CAACA,IAAxB;;AACA,sBAAI,CAACxB,IAAI,CAACkE,iBAAV,EAA6B;AACzB;AACAnG,2BAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,2BAAO,gDAAG,KAAH,CAAP;AACH;;AACD,sBAAI,CAACgC,IAAI,CAACmE,gBAAV,EAA4B;AACxB;AACApG,2BAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,2BAAO,gDAAG,KAAH,CAAP;AACH;;AACD,sBAAI,CAACgC,IAAI,CAACoE,qBAAV,EAAiC;AAC7B;AACArG,2BAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,2BAAO,gDAAG,KAAH,CAAP;AACH;;AACD,sBAAI,CAACgC,IAAI,CAACqE,aAAV,EAAyB;AACrB;AACAtG,2BAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,2BAAO,gDAAG,KAAH,CAAP;AACH;;AACD,sBAAIgC,IAAI,CAACsE,iBAAT,EAA4B;AACxB;AACAvG,2BAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,2BAAO,gDAAG,KAAH,CAAP;AACH;;AACDD,yBAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,yBAAO,gDAAG,IAAH,CAAP;AACH,iBA7BD,MA8BK;AACDD,yBAAO,CAACC,GAAR,CAAY,aAAZ;AACA,yBAAO,gDAAG,KAAH,CAAP;AACH;AACJ,eAzCD,EAyCG,UAAAuG,KAAK,EAAI;AACRxG,uBAAO,CAACC,GAAR,CAAY,aAAZ;AACA,uBAAO,gDAAG,KAAH,CAAP;AACH,eA5CD;AA6CA,qBAAO,gDAAG,IAAH,CAAP;AACH,aAhDD,MAiDK;AACDD,qBAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,qBAAO,gDAAG,KAAH,CAAP;AACH;AACJ;;;;;;;yBA7DQ2F,c,EAAc,wI,EAAA,sI;AAAA,O;;;eAAdA,c;AAAc,iBAAdA,cAAc;;;;;wEAAdA,c,EAAc;gBAD1B;AAC0B,U;;;;;;;;;;;;;;;;;;;;;;;;ACP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaa,e;AACX,iCAAoBC,mBAApB,EAA4D;AAAA;;AAAxC,eAAAA,mBAAA,GAAAA,mBAAA;AACnB;;;;oCAESvB,O,EAA2BC,I,EAAiB;AACpD,gBAAMuB,IAAI,GAAG5E,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAb;;AACA,gBAAI2E,IAAI,KAAK,MAAT,IAAmB,CAACxB,OAAO,CAACyB,GAAR,CAAYC,UAAZ,CAAuB,QAAvB,CAAxB,EAA0D;AACtD,kBAAMC,cAAc,GAAG,KAAKJ,mBAAL,CAAyBK,iBAAzB,CAA2C5B,OAA3C,CAAvB;AACA,kBAAM6B,WAAW,GAAG7B,OAAO,CAACG,KAAR,CAAc;AAACsB,mBAAG,EAAEE,cAAN;AAAsBG,sBAAM,EAAE;AAA9B,eAAd,CAApB;AACA,qBAAO7B,IAAI,CAACK,MAAL,CAAYuB,WAAZ,CAAP;AACH,aAJD,MAIO;AACL;AACA,qBAAO5B,IAAI,CAACK,MAAL,CAAYN,OAAZ,CAAP;AACA;AACH;;;;;;;yBAdUsB,e,EAAe,sI;AAAA,O;;;eAAfA,e;AAAe,iBAAfA,eAAe;;;;;wEAAfA,e,EAAe;gBAD3B;AAC2B,U;;;;;;;;;;;;;;;;;;;;;;ACP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaS,oC;AAEX,wDAAc;AAAA;AAAG;;;;qCAGT,CACP;;;;;;;yBANUA,oC;AAAoC,O;;;cAApCA,oC;AAAoC,2D;AAAA,gB;AAAA,e;AAAA;AAAA;ACRjD;;AAAG;;AAAgH;;;;;;;;wEDQtGA,oC,EAAoC;gBALhD,uDAKgD;iBALtC;AACTzI,oBAAQ,EAAE,oCADD;AAETC,uBAAW,EAAE,iDAFJ;AAGTC,qBAAS,EAAE,CAAC,gDAAD;AAHF,W;AAKsC,U;;;;;;;;;;;;;;;;;;;;AERjD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQawI,oB;AAKX,wCAAc;AAAA;;AAHd,eAAAC,KAAA,GAAQ,sDAAS,IAAT,CAAR;AAGiB;;;;qCACN;AAAA;;AACT,gBAAI1D,CAAC,GAAG,CAAR;AACA,iBAAK2D,aAAL,GAAqB,KAAKC,MAAL,CAAY5D,CAAZ,CAArB;AACA,iBAAK6D,YAAL,GAAoB,KAAKH,KAAL,CAAW3F,SAAX,CAAsB,YAAM;AAC9C,oBAAI,CAAC4F,aAAL,GAAqB,MAAI,CAACC,MAAL,CAAY5D,CAAC,EAAb,CAArB;;AACA,kBAAIA,CAAC,KAAK,MAAI,CAAC4D,MAAL,CAAYrD,MAAtB,EAA8B;AAC5BP,iBAAC,GAAG,CAAJ;AACD;AACJ,aALqB,CAApB;AAMD;;;;;;;yBAfUyD,oB;AAAoB,O;;;cAApBA,oB;AAAoB,yC;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,+D;AAAA;AAAA;ACRjC;;;;AAAK;;;;;;;;wEDQQA,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACT1I,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKsB,U;;;AACtB2I,gBAAM,EAAE,CAAF;kBAAd;AAAc,WAAE;;;;;;;;;;;;;;;;;;;AETnB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaE,Y,GALb;AAAA;;AAME,aAAAC,KAAA,GAAQ,wBAAR;AACD,O;;;yBAFYD,Y;AAAY,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA;AAAA;ACPzB;;;;;;;;;wEDOaA,Y,EAAY;gBALxB,uDAKwB;iBALd;AACT/I,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,qBAAD;AAHF,W;AAKc,U;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACCI;;AACE;;AACE;;AAAW;;AAAa;;AACxB;;AACF;;AACA;;AACE;;AAAiE;AAAA;;AAAA;;AAAA;AAAA;;AAA0D;;AAAQ;;AACrI;;AACF;;;;;;AARM;;AAMyF;;AAAA;;;;;;AAG/F;;AACE;;AACF;;;;;;AADE;;AAAA;;;;UDFO+I,kC;AAEX,oDAAoBC,EAApB,EAAqC;AAAA;;AAAjB,eAAAA,EAAA,GAAAA,EAAA;AAAoB;;;;qCAIhC;AACN,iBAAKC,WAAL,GAAmB,KAAKD,EAAL,CAAQE,KAAR,CAAc;AAC/BC,mBAAK,EAAG,CAAC,EAAD,EAAK,0DAAWC,QAAhB;AADuB,aAAd,CAAnB;AAGD;;;0CAEe;AACd/H,mBAAO,CAACC,GAAR,CAAY,KAAK2H,WAAjB;AACA,iBAAKA,WAAL,GAAmB,IAAnB;AACA,iBAAK5G,OAAL,GAAe,0EAAf;AACD;;;;;;;yBAhBU0G,kC,EAAkC,2H;AAAA,O;;;cAAlCA,kC;AAAkC,wD;AAAA,gB;AAAA,e;AAAA,gU;AAAA;AAAA;ACR3C;;AASA;;;;AATgC;;AAS3B;;AAAA;;;;;;;;;wEDDIA,kC,EAAkC;gBAL9C,uDAK8C;iBALpC;AACTjJ,oBAAQ,EAAE,iCADD;AAETC,uBAAW,EAAE,8CAFJ;AAGTC,qBAAS,EAAE,CAAC,6CAAD;AAHF,W;AAKoC,U;;;;;;;;;;;;;;;;;;;;;;AET/C;AAAA;;;AAAA;AAAA;AAAA;;UAAaqJ,oB;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASaC,qB;AAGX,uCAAoB9E,mBAApB,EAAsE+E,QAAtE,EAA6F;AAAA;;AAAzE,eAAA/E,mBAAA,GAAAA,mBAAA;AAAkD,eAAA+E,QAAA,GAAAA,QAAA;AAA0B;;;;qCAErF;AAAA;;AACT,iBAAKC,gBAAL,GAAwB,KAAxB;AACA,iBAAKhF,mBAAL,CAAyBpC,iBAAzB,CAA2CU,SAA3C,CAAqD,UAAAT,OAAO,EAAI;AAC9DoH,wBAAU,CAAC,YAAM;AACf,sBAAI,CAACD,gBAAL,GAAwB,IAAxB;AACA,sBAAI,CAACnH,OAAL,GAAeA,OAAO,CAACA,OAAvB;;AACA,sBAAI,CAACkH,QAAL,CAAcG,IAAd,CAAmB,MAAI,CAACrH,OAAxB,EAAiC,OAAjC,EAA0C;AACxCsH,0BAAQ,EAAE;AAD8B,iBAA1C;;AAGAF,0BAAU,CAAC,YAAM;AACf,wBAAI,CAACD,gBAAL,GAAwB,KAAxB;AACA,wBAAI,CAACnH,OAAL,GAAe,EAAf;AACD,iBAHS,EAGP,IAHO,CAAV;AAID,eAVS,CAAV;AAYD,aAbD;AAcD;;;;;;;yBArBUiH,qB,EAAqB,0I,EAAA,wI;AAAA,O;;;cAArBA,qB;AAAqB,yC;AAAA,gB;AAAA,e;AAAA,qE;AAAA;;;;;wEAArBA,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTxJ,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKuB,U;;;;;;;;;;;;;;;;;;;;;;;;ACTlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UA0Ba4J,e;;;;;cAAAA;;;;2BAAAA,e;AAAe,S;AAAA,kBAVjB,CACP,4DADO,EAEP,4EAFO,EAGP,6EAHO,EAIP,oEAJO,EAKP,2FALO,EAMP,8EANO,EAOP,sEAPO,CAUiB;;;;4HAAfA,e,EAAe;AAAA,yBAZX,iFAYW,EAZS,wGAYT,EAZoC,kHAYpC,EAZkE,wGAYlE;AAZ0F,oBAGlH,4DAHkH,EAIlH,4EAJkH,EAKlH,6EALkH,EAMlH,oEANkH,EAOlH,2FAPkH,EAQlH,8EARkH,EASlH,sEATkH,CAY1F;AAHV,oBARN,iFAQM;AAGU,S;AAXE,O;;;;;wEAWjBA,e,EAAe;gBAb3B,sDAa2B;iBAblB;AACRpH,wBAAY,EAAE,CAAC,iFAAD,EAAqB,wGAArB,EAAgD,kHAAhD,EAA8E,wGAA9E,CADN;AAERE,mBAAO,EAAE,CAAC,iFAAD,CAFD;AAGRD,mBAAO,EAAE,CACP,4DADO,EAEP,4EAFO,EAGP,6EAHO,EAIP,oEAJO,EAKP,2FALO,EAMP,8EANO,EAOP,sEAPO;AAHD,W;AAakB,U;;;;;;;;;;;;;;;;;;AC1B5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAmDaoH,S;;;;;cAAAA,S;AAAS,oBAFR,mEAEQ;;;;2BAATA,S;AAAS,S;AAAA,mBAhBT,CAAC;AACVC,iBAAO,EAAE,sEADC;AAEVC,kBAAQ,EAAE,iFAFA;AAGVC,eAAK,EAAE;AAHG,SAAD,EAKT;AACAF,iBAAO,EAAE,sEADT;AAEAC,kBAAQ,EAAE,mFAFV;AAGAC,eAAK,EAAE;AAHP,SALS,EAUX,8FAVW,EAWX,oFAXW,EAYX,gFAZW,C;AAaZ,kBAxBU,CACP,uEADO,EAEP,4EAFO,EAGP,6EAHO,EAIP,qFAJO,EAKP,2FALO,EAMP,uEANO,EAOP,4FAPO,EAQP,qEARO,EASP,+FATO,CAwBV;;;;4HAGYH,S,EAAS;AAAA,yBA9BlB,mEA8BkB,EA7BlB,wGA6BkB;AA7BI,oBAGtB,uEAHsB,EAItB,4EAJsB,EAKtB,6EALsB,EAMtB,qFANsB,EAOtB,2FAPsB,EAQtB,uEARsB,EAStB,4FATsB,EAUtB,qEAVsB,EAWtB,+FAXsB;AA6BJ,S;AAlBF,O;;;;;wEAkBPA,S,EAAS;gBAhCrB,sDAgCqB;iBAhCZ;AACRrH,wBAAY,EAAE,CACZ,mEADY,EAEZ,wGAFY,CADN;AAKRC,mBAAO,EAAE,CACP,uEADO,EAEP,4EAFO,EAGP,6EAHO,EAIP,qFAJO,EAKP,2FALO,EAMP,uEANO,EAOP,4FAPO,EAQP,qEARO,EASP,+FATO,CALD;AAgBR4B,qBAAS,EAAE,CAAC;AACVyF,qBAAO,EAAE,sEADC;AAEVC,sBAAQ,EAAE,iFAFA;AAGVC,mBAAK,EAAE;AAHG,aAAD,EAKT;AACAF,qBAAO,EAAE,sEADT;AAEAC,sBAAQ,EAAE,mFAFV;AAGAC,mBAAK,EAAE;AAHP,aALS,EAUX,8FAVW,EAWX,oFAXW,EAYX,gFAZW,CAhBH;AA8BR1F,qBAAS,EAAE,CAAC,mEAAD;AA9BH,W;AAgCY,U;;;;;;;;;;;;;;;;;;ACnDtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGM;;;;;;AAFF;;AAEE;;AACF;;;;;;AADe;;AAAA;;;;;;AAWT;;AAA+C;;AAAI;;;;;;AACnD;;AAAmC;;;;AAAoB;;;;;;AAApB;;AAAA;;;;;;AAKnC;;AAAiD;;AAAS;;;;;;AAC1D;;AAAmC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAKnC;;AAAiD;;AAAe;;;;;;AAChE;;AAAmC;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAKnC;;AACE;;AACF;;;;;;AACA;;AAAmC;;AAAa;;;;;;AAAb;;AAAA;;;;;;AAInC;;AACE;;AACF;;;;;;AACA;;AAAmC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAGnC;;AACE;;AACF;;;;;;AACA;;AAAmC;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAGrC;;;;;;AACA;;;;UDzCK2F,4B;AAWX,8CAAoBC,UAApB,EAA4C;AAAA;;AAAxB,eAAAA,UAAA,GAAAA,UAAA;AATpB,eAAAC,gBAAA,GAA6B,CAAE,MAAF,EAAU,WAAV,EAAuB,WAAvB,EAAoC,OAApC,EAA+C,QAA/C,EAAyD,gBAAzD,CAA7B;AACA,eAAArF,IAAA,GAAsB,EAAtB;AAEA,eAAAsF,aAAA,GAAgB,CAAhB;AACA,eAAAC,gBAAA,GAAmB,IAAnB;AACA,eAAAC,kBAAA,GAAqB,KAArB;AAI8C;;;;qCACtC;AACN;AACA,iBAAKxF,IAAL,CAAUyF,IAAV,CAAe;AAACC,kBAAI,EAAG,IAAIC,IAAJ,EAAR;AAAoBC,mBAAK,EAAE,OAA3B;AAAoCC,oBAAM,EAAE,KAA5C;AAAmDC,uBAAS,EAAE,QAA9D;AAAwEC,uBAAS,EAAE,QAAnF;AAA6FC,4BAAc,EAAE;AAA7G,aAAf,EAFM,CAGN;;AACA,iBAAKhG,IAAL,CAAUyF,IAAV,CAAe;AAACC,kBAAI,EAAG,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWM,OAAX,KAAuB,CAAhC,CAAR;AAA4CL,mBAAK,EAAE,OAAnD;AAA4DC,oBAAM,EAAE,MAApE;AAA4EC,uBAAS,EAAE,YAAvF;AAAqGC,uBAAS,EAAE,cAAhH;AAAgIC,4BAAc,EAAE;AAAhJ,aAAf,EAJM,CAKN;;AACA,iBAAKhG,IAAL,CAAUyF,IAAV,CAAe;AAACC,kBAAI,EAAG,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWM,OAAX,KAAuB,CAAhC,CAAR;AAA4CL,mBAAK,EAAE,QAAnD;AAA6DC,oBAAM,EAAE,OAArE;AAA8EC,uBAAS,EAAE,eAAzF;AAA0GC,uBAAS,EAAE,QAArH;AAA+HC,4BAAc,EAAE;AAA/I,aAAf,EANM,CAON;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;4CACiB;AAChB,iBAAKT,gBAAL,GAAwB,KAAxB;AAED;;;;;;;yBArCUJ,4B,EAA4B,gI;AAAA,O;;;cAA5BA,4B;AAA4B,iD;AAAA;AAAA;4EAS5B,wE,EAAc,I;;;;;;;;;;;;;;ACpB3B;;AACI;;AAKA;;AAEE;;AAEA;;AAAS;;AAAmB;;AAG1B;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AAGA;;AACF;;AAEA;;AACE;;AAGA;;AACF;;AACA;;AACE;;AAGA;;AACF;;AAEA;;AACA;;AACF;;AACF;;AAEA;;AACF;;;;AAvDO;;AAAA;;AAMc;;AAAA;;AA2CI;;AAAA;;AACP;;AAAA;;AAID;;AAAA,kGAAwB,UAAxB,EAAwB,EAAxB;;;;;;;;;;wED7CNA,4B,EAA4B;gBALxC,uDAKwC;iBAL9B;AACTnK,oBAAQ,EAAE,0BADD;AAETC,uBAAW,EAAE,uCAFJ;AAGTC,qBAAS,EAAE,CAAC,sCAAD;AAHF,W;AAK8B,U;;;;;AASEgL,mBAAS,EAAE,CAAF;kBAAjD,uDAAiD;mBAAvC,wE,EAAc;AAAC,wBAAQ;AAAT,a;AAAyB,WAAE;;;AA6CtD;;;UACaC,mB;AACX,qCAAoBvJ,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAAoB;;;;wCAE1BwJ,I,EAAcC,K,EAAeC,I,EAAY;AACrD,gBAAMC,IAAI,GAAG,sCAAb;AACA,gBAAMC,UAAU,aACTD,IADS,6CAC8BH,IAD9B,oBAC4CC,KAD5C,mBAC0DC,IAAI,GAAG,CADjE,CAAhB;AAEA/J,mBAAO,CAACC,GAAR,CAAYgK,UAAZ;AACA,mBAAO,KAAK5J,IAAL,CAAUE,GAAV,CAAyB0J,UAAzB,CAAP;AACD;;;;;;;;;;;;;;;;;;;;;AE3EH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAkBaC,e;;;;;cAAAA;;;;2BAAAA,e;AAAe,S;AAAA,kBATjB,CACP,4DADO,EAEP,6EAFO,CASiB;;;;4HAAfA,e,EAAe;AAAA,yBAXX,0GAWW,EAVxB,yFAUwB;AAVJ,oBAEpB,4DAFoB,EAGpB,6EAHoB,CAUI;AAPP,oBAGjB,0GAHiB,EAIjB,yFAJiB;AAOO,S;AAHJ,O;;;;;wEAGXA,e,EAAe;gBAZ3B,sDAY2B;iBAZlB;AACR/I,wBAAY,EAAE,CAAC,0GAAD,EACZ,yFADY,CADN;AAGRC,mBAAO,EAAE,CACP,4DADO,EAEP,6EAFO,CAHD;AAORC,mBAAO,EAAE,CACP,0GADO,EAEP,yFAFO;AAPD,W;AAYkB,U;;;;;;;;;;;;;;;;;;AClB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACCI;;AACE;;AAAiE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC/D;;AAAgB;;AAAe;;AAC/B;;AAAmB;;AAAkB;;AACrC;;AAAkB;;AAAqB;;AACzC;;AACF;;;;;;AAL+B;;AAAA;;AACX;;AAAA;;AACG;;AAAA;;AACD;;AAAA;;;;;;UDSb8I,yB;AAYX,2CAAoBC,wBAApB,EAAgFC,WAAhF,EAA0G;AAAA;;AAAtF,eAAAD,wBAAA,GAAAA,wBAAA;AAA4D,eAAAC,WAAA,GAAAA,WAAA;AAVhF,eAAAC,MAAA,GAAwB,EAAxB;AAIA,eAAAC,cAAA,GAAiB,CAAC,CAAlB;AACA,eAAAC,QAAA,GAAW,KAAX;AAK6G;;;;qCAErG;AACN,iBAAKF,MAAL,CAAYpB,IAAZ,CAAiB,KAAKuB,iBAAL,EAAjB;AACA,iBAAKH,MAAL,CAAYpB,IAAZ,CAAiB,KAAKwB,oBAAL,EAAjB;AACA,iBAAKJ,MAAL,CAAYpB,IAAZ,CAAiB,KAAKyB,WAAL,EAAjB;AAEA,iBAAKC,UAAL,GAAmBC,MAAM,CAACC,UAAP,IAAqB,GAAtB,GAA6B,CAA7B,GAAiC,KAAKR,MAAL,CAAYrG,MAA/D;AAEA,iBAAK8G,eAAL,GACA,CACE,IAAI,qFAAJ,CAAmB,2JAAnB,EAAuD;AAACC,kBAAI,EAAE,UAAP;AAAmBC,iBAAG,EAAE;AAAxB,aAAvD,CADF,CADA;AAID;;;wCAEU;AACTC,yBAAa,CAAC,KAAKC,QAAN,CAAb;AACD;;;0CAEe;AACd,gBAAMC,gBAAgB,GACpB,KAAKhB,wBAAL,CACCiB,uBADD,CACyB,KAAKC,oBAAL,CAA0B,KAAKC,aAAL,CAAmBC,QAA7C,CADzB,CADF;AAIA,gBAAMvG,gBAAgB,GAAG,KAAKwG,cAAL,CAAoBxG,gBAA7C;AACAA,4BAAgB,CAACyG,KAAjB;AAEA,gBAAMC,YAAY,GAAG1G,gBAAgB,CAAC2G,eAAjB,CAAsDR,gBAAtD,CAArB;AACAO,wBAAY,CAACE,QAAb,CAAsBpI,IAAtB,GAA6B,KAAK8H,aAAlC;AACD;;;+CACoBC,Q,EAAU;AAC7B,gBAAMM,cAAc,GAAG,CACrB;AAAEtM,gBAAE,EAAE,oCAAN;AAA4CuM,uBAAS,EAAE;AAAvD,aADqB,CAAvB;AAGA,gBAAMC,qBAAqB,GAAGF,cAAc,CAACG,IAAf,CAAqB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAAC1M,EAAF,KAASgM,QAAb;AAAA,aAAtB,CAA9B;;AACA,gBAAIQ,qBAAqB,IAAI,IAA7B,EAAkC;AAChC,qBAAO,mKAAP;AACD;;AACD,mBAAOA,qBAAqB,CAACD,SAAtB,IAAmC,mKAA1C;AACD;;;mCACQzH,K,EAAO;AACd,iBAAKsG,UAAL,GAAmBtG,KAAK,CAAC6H,MAAN,CAAarB,UAAb,IAA2B,GAA5B,GAAmC,CAAnC,GAAuC,KAAKR,MAAL,CAAYrG,MAArE;AACD;;;wCACasH,a,EAA4B;AACxC,iBAAKjB,MAAL,CAAY8B,OAAZ,CAAqB,UAACC,KAAD,EAAW;AAC9BA,mBAAK,CAACC,UAAN,GAAoBD,KAAK,CAAC7M,EAAN,KAAa+L,aAAa,CAAC/L,EAA/C;AACD,aAFD;AAGA,iBAAK+L,aAAL,GAAqBA,aAArB;AACA,iBAAKgB,aAAL;AACD;;;8CACgB;AACf,gBAAMC,SAAS,GAAgB,IAAI,8DAAJ,EAA/B;AACAA,qBAAS,CAAChN,EAAV,GAAe,CAAf;AACAgN,qBAAS,CAAC/E,KAAV,GAAkB,WAAlB;AACA+E,qBAAS,CAACC,QAAV,GAAqB,qBAArB;AACAD,qBAAS,CAACE,WAAV,GAAwB,+KAAxB;AACAF,qBAAS,CAAChB,QAAV,GAAqB,oCAArB;AACA,mBAAOgB,SAAP;AACD;;;iDACmB;AAClB,gBAAMG,YAAY,GAAgB,IAAI,8DAAJ,EAAlC;AACAA,wBAAY,CAACnN,EAAb,GAAkB,CAAlB;AACAmN,wBAAY,CAACL,UAAb,GAA0B,IAA1B;AACAK,wBAAY,CAAClF,KAAb,GAAqB,cAArB;AACAkF,wBAAY,CAACF,QAAb,GAAwB,qCAAxB;AACAE,wBAAY,CAACD,WAAb,GAA2B,wGAA3B;AACAC,wBAAY,CAACnB,QAAb,GAAwB,uCAAxB;AACA,mBAAOmB,YAAP;AACD;;;wCAEU;AACT,gBAAMC,GAAG,GAAgB,IAAI,8DAAJ,EAAzB;AACAA,eAAG,CAACpN,EAAJ,GAAS,CAAT;AACAoN,eAAG,CAACnF,KAAJ,GAAY,KAAZ;AACAmF,eAAG,CAACH,QAAJ,GAAe,0BAAf;AACAG,eAAG,CAACF,WAAJ,GAAkB,gGAAlB;AACAE,eAAG,CAACpB,QAAJ,GAAe,8BAAf;AACA,mBAAOoB,GAAP;AACD;;;;;;;yBA1FUzC,yB,EAAyB,uI,EAAA,2H;AAAA,O;;;cAAzBA,yB;AAAyB,8C;AAAA;AAAA;4EAUzB,mG,EAAqB,I;;;;;;;;;;;;;;ACxBlC;;AAAwE;AAAA,qBAAiB,IAAA0C,QAAA,QAAjB;AAAiC,aAAjC,EAAiC,KAAjC,EAAiC,6DAAjC;;AACpE;;AAOA;;AACE;;AACE;;AACJ;;AACA;;AACJ;;;;AAbgB,6FAAmB,YAAnB,EAAmB,EAAnB;;AACG;;AAAA;;;;;;;;;wEDaN1C,yB,EAAyB;gBALrC,uDAKqC;iBAL3B;AACT1L,oBAAQ,EAAE,uBADD;AAETC,uBAAW,EAAE,oCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAK2B,U;;;;;;;AAUY8M,wBAAc,EAAE,CAAF;kBAA7D,uDAA6D;mBAAnD,mG,EAAqB;AAAC,wBAAQ;AAAT,a;AAA8B,WAAE;;;;;;;;;;;;;;;;;;;AExBlE;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaqB,mB;AAEX,uCAAc;AAAA;AAAG;;;;qCAEN,CACV;;;;;;;yBALUA,mB;AAAmB,O;;;cAAnBA,mB;AAAmB,wC;AAAA,gB;AAAA,e;AAAA,oC;AAAA;AAAA;ACPhC;;AACA;;AACA;;AACI;;AACJ;;AACA;;;;;;;;;wEDEaA,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACTrO,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKqB,U;;;;;;;;;;;;;;;;;;;;AEPhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaoO,W;AACT,6BAAoB1M,IAApB,EACoByB,WADpB,EACoD;AAAA;;AADhC,eAAAzB,IAAA,GAAAA,IAAA;AACA,eAAAyB,WAAA,GAAAA,WAAA;AAAkC;;;;mCAE7C3C,Q,EAAkBC,U,EAAkB;AAC1C,mBAAO,KAAKiB,IAAL,CAAUE,GAAV,CAAqC,KAAKuB,WAAL,CAAiBkL,eAAjB,CAAiC7N,QAAjC,EAA2CC,UAA3C,CAArC,CAAP;AACF;;;4CAEc;AACX,mBAAO,KAAKiB,IAAL,CAAUE,GAAV,CAA4B,KAAKuB,WAAL,CAAiBmL,kBAAjB,EAA5B,CAAP;AACH;;;;;;;yBAVQF,W,EAAW,uH,EAAA,sI;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW;;;;;wEAAXA,W,EAAW;gBADvB;AACuB,U;;;;;;;;;;;;;;;;;;;;;;;;ACPxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAuBaG,a;;;;;cAAAA;;;;2BAAAA,a;AAAa,S;AAAA,kBAVf,CACP,4DADO,EAEP,+DAFO,EAGP,6EAHO,EAIP,4EAJO,EAKP,wEALO,EAMP,oEANO,EAOP,wEAPO,CAUe;;;;4HAAbA,a,EAAa;AAAA,yBAXT,+FAWS,EAXS,8EAWT;AAX0B,oBAEhD,4DAFgD,EAGhD,+DAHgD,EAIhD,6EAJgD,EAKhD,4EALgD,EAMhD,wEANgD,EAOhD,oEAPgD,EAQhD,wEARgD;AAW1B,S;AAHP,O;;;;;wEAGNA,a,EAAa;gBAZzB,sDAYyB;iBAZhB;AACR/L,wBAAY,EAAE,CAAC,+FAAD,EAAmB,8EAAnB,CADN;AAERC,mBAAO,EAAE,CACP,4DADO,EAEP,+DAFO,EAGP,6EAHO,EAIP,4EAJO,EAKP,wEALO,EAMP,oEANO,EAOP,wEAPO;AAFD,W;AAYgB,U;;;;;;;;;;;;;;;;;;ACvB1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMa+L,mB;AACT,qCAAoB9M,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AACnB;;;;4CACgB8E,O,EAAyB;AAC1C,gBAAMiI,OAAO,GAAGjI,OAAO,CAACyB,GAAR,CAAYyG,OAAZ,CAAoB,yEAAYxO,UAAhC,EAA4C,EAA5C,CAAhB;AACA,mBAAO,iBAAiBuO,OAAjB,GAA2B,GAA3B,GAAiCjI,OAAO,CAAC8B,MAAzC,GAAkD,eAAzD;AACA;;;;;;;yBANSkG,mB,EAAmB,uH;AAAA,O;;;eAAnBA,mB;AAAmB,iBAAnBA,mBAAmB;;;;;wEAAnBA,mB,EAAmB;gBAD/B;AAC+B,U;;;;;;;;;;;;;;;;;;;;;;ACNhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UA0BaG,W;;;;;cAAAA;;;;2BAAAA,W;AAAW,S;AAAA,kBAbb,CACP,4DADO,EAEP,0DAFO,EAGP,sEAHO,EAIP,+EAJO,EAKP,wEALO,EAMP,oEANO,EAOP,2EAPO,EAQP,qEARO,CAaa;;;;4HAAXA,W,EAAW;AAAA,yBAHP,mFAGO,EAHa,wEAGb;AAH4B,oBAThD,4DASgD,EARhD,0DAQgD,EAPhD,sEAOgD,EANhD,+EAMgD,EALhD,wEAKgD,EAJhD,oEAIgD,EAHhD,2EAGgD,EAFhD,qEAEgD,CAG5B;AALP,oBAGL,mFAHK;AAKO,S;AAFM,O;;;;;wEAEjBA,W,EAAW;gBAdvB,sDAcuB;iBAdd;AACRlM,mBAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,sEAHO,EAIP,+EAJO,EAKP,wEALO,EAMP,oEANO,EAOP,2EAPO,EAQP,qEARO,CADD;AAWRD,wBAAY,EAAE,CAAC,mFAAD,EAAqB,wEAArB,CAXN;AAYRE,mBAAO,EAAE,CAAC,mFAAD;AAZD,W;AAcc,U;;;;;;;;;;;;;;;;;;AC1BxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASakM,iB;AAEX,mCAAmBC,MAAnB,EAAsC;AAAA;;AAAnB,eAAAA,MAAA,GAAAA,MAAA;AAAsB;;;;qCAEjC,CACP;;;4CACiB;AAChB,iBAAKA,MAAL,CAAYnF,IAAZ,CAAiB,uIAAjB,EAAkD;AAChD7D,oBAAM,EAAE,OADwC;AAEhDiJ,mBAAK,EAAE;AAFyC,aAAlD;AAID;;;;;;;yBAXUF,iB,EAAiB,mI;AAAA,O;;;cAAjBA,iB;AAAiB,qC;AAAA,gB;AAAA,e;AAAA,sF;AAAA;AAAA;ACT9B;;AACI;;AAAG;;AAAuD;;AAC1D;;AAGS;AAAA,qBAAS,IAAAG,eAAA,EAAT;AAA0B,aAA1B;;AACE;;AAAQ;;AACvB;;;;AAHa;;AAAA;;;;;;;;;wEDKAH,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACT9O,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,0BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;;;AET9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOagP,yB;AAEX,6CAAc;AAAA;AAAG;;;;qCAEN,CACV;;;;;;;yBALUA,yB;AAAyB,O;;;cAAzBA,yB;AAAyB,+C;AAAA,gB;AAAA,e;AAAA;AAAA;ACPtC;;AAAG;;AAAyB;;;;;;;;wEDOfA,yB,EAAyB;gBALrC,uDAKqC;iBAL3B;AACTlP,oBAAQ,EAAE,wBADD;AAETC,uBAAW,EAAE,qCAFJ;AAGTC,qBAAS,EAAE,CAAC,oCAAD;AAHF,W;AAK2B,U;;;;;;;;;;;;;;;;;;;;AEPtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACoBc;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAU;;;;;;;;AACrF;;AAA2C;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAc;;;;UDTzFiP,kB;AAEX,oCAAoB/H,YAApB,EACoB1C,mBADpB,EAEoB/E,MAFpB,EAEoC;AAAA;;AAFhB,eAAAyH,YAAA,GAAAA,YAAA;AACA,eAAA1C,mBAAA,GAAAA,mBAAA;AACA,eAAA/E,MAAA,GAAAA,MAAA;AAAmB;;;;qCAE5B;AACT,iBAAKyP,YAAL,GAAoB,KAApB;AACD;;;gCACKC,S,EAAmB;AAAA;;AACvB,gBAAIA,SAAS,CAACC,KAAd,EAAqB;AACnB,kBAAM9L,IAAI,GAAS,IAAI,sDAAJ,EAAnB;AACAA,kBAAI,CAACG,QAAL,GAAgB0L,SAAS,CAACE,KAAV,CAAgB5L,QAAhC;AACAH,kBAAI,CAACI,QAAL,GAAgByL,SAAS,CAACE,KAAV,CAAgB3L,QAAhC;AACA,mBAAKwD,YAAL,CAAkBoI,KAAlB,CAAwBhM,IAAxB,EAA8BR,SAA9B,CAAwC,UAAAyM,QAAQ,EAAI;AAClDlO,uBAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,uBAAO,CAACC,GAAR,CAAYiO,QAAZ;;AACA,oBAAIA,QAAQ,CAAChI,MAAT,CAAgBA,MAAhB,KAA2B,SAA/B,EAA0C;AACtClG,yBAAO,CAACC,GAAR,CAAY8B,cAAc,CAACC,OAAf,CAAuB,eAAvB,MAA4C,MAAxD;AACAD,gCAAc,CAACS,OAAf,CAAuB,eAAvB,EAAwC,MAAxC;AACAxC,yBAAO,CAACC,GAAR,CAAY8B,cAAc,CAACC,OAAf,CAAuB,eAAvB,MAA4C,MAAxD;AAEA,sBAAImM,WAAW,GAAG,KAAlB;;AACA,uBAAK,IAAIzK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwK,QAAQ,CAACzK,IAAT,CAAc2K,WAAd,CAA0BnK,MAA9C,EAAsDP,CAAC,EAAvD,EAA2D;AACvD,wBAAIwK,QAAQ,CAACzK,IAAT,CAAc2K,WAAd,CAA0B1K,CAA1B,EAA6B2K,SAA7B,KAA2C,OAA/C,EAAwD;AACpDF,iCAAW,GAAG,IAAd;AACA;AACH;AACJ;;AACD,sBAAIA,WAAJ,EAAiB;AACf,0BAAI,CAAC/P,MAAL,CAAYG,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD,mBAFD,MAEO;AACL,0BAAI,CAACH,MAAL,CAAYG,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD;AACJ,iBAjBD,MAiBO;AACL,wBAAI,CAAC4E,mBAAL,CAAyBI,gBAAzB,CAA0C,mBAA1C;AACD;AACF,eAvBD,EAwBA,UAAAiD,KAAK,EAAI;AACPxG,uBAAO,CAACC,GAAR,CAAY,oBAAZ;;AACA,oBAAIuG,KAAK,CAACN,MAAN,KAAiB,GAArB,EAA0B;AACpB,wBAAI,CAAC/C,mBAAL,CAAyBI,gBAAzB,CAA0C,sBAA1C;AACD,iBAFL,MAEW;AACL,wBAAI,CAACJ,mBAAL,CAAyBI,gBAAzB,CAA0C,oBAA1C;AACD;;AACLvD,uBAAO,CAACC,GAAR,CAAYuG,KAAZ;AACD,eAhCD;AAiCD;AACF;;;+CAEiB;AAChB,iBAAKqH,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACD;;;;;;;yBApDUD,kB,EAAkB,4H,EAAA,oK,EAAA,uH;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA,iB;AAAA,e;AAAA,0lB;AAAA;AAAA;;;ACZ/B;;AACI;;AAAM;AAAA;;AAAA;;AAAA,qBAAY,IAAAK,KAAA,KAAZ;AAA4B,aAA5B;;AACF;;AACG;;AACE;;AAOF;;AACA;;AACG;;AAOA;;AACA;;AACF;;AAEH;;AACA;;AAME;;AAAK;;AACP;;AAAsF;;AAAM;;AAC9F;;AACP;;;;;;AAlBc;;AAAA;;AAIoB;;AAAA;;AACA;;AAAA;;AAOzB;;AAAA,8FAA8B,OAA9B,EAA8B,SAA9B;;AAIuD;;AAAA;;;;;;;;;wEDpBnDL,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTnP,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,6BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEV/B;AAAA;;;AAAA;AAAA;AAAA;;UAAa2P,I;;;;;;;;;;;;;;;;;;;ACFb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,iB;AAEX,qCAAc;AAAA;AAAG;;;;qCAEN,CACV;;;;;;;yBALUA,iB;AAAiB,O;;;cAAjBA,iB;AAAiB,sC;AAAA,gB;AAAA,e;AAAA;AAAA;ACP9B;;AACA;;AAAG;;AAAgB;;;;;;;;;wEDMNA,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACT9P,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;AEL9B;AAAA;;;AAAA;AAAA;AAAA;;UAAa6P,c,GACX,wBAAmBzC,SAAnB,EAAgDtI,IAAhD,EAA2D;AAAA;;AAAxC,aAAAsI,SAAA,GAAAA,SAAA;AAA6B,aAAAtI,IAAA,GAAAA,IAAA;AAAa,O;;;;;;;;;;;;;;;;;ACH/D;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYagL,yB;AAEX,2CAAoBC,eAApB,EAAsD;AAAA;;AAAlC,eAAAA,eAAA,GAAAA,eAAA;AAMpB,eAAAC,aAAA,GAAgB,CAAhB;AACA,eAAAC,iBAAA,GAAoB,CAApB;AACA,eAAAC,sBAAA,GAAyB,CAAzB;AACA,eAAAC,YAAA,GAAe,CAAf;AACA,eAAAC,aAAA,GAAgB,CAAhB;AAVyD;;;;qCAW9C;AAAA;;AACT,iBAAKL,eAAL,CAAqBM,kBAArB,GAA0CvN,SAA1C,CAAqD,UAACwN,QAAD,EAAyB;AAC5E,oBAAI,CAACC,eAAL,GAAuBD,QAAvB;;AACA,oBAAI,CAACC,eAAL,CAAqB9C,OAArB,CAA6B,UAAC+C,OAAD,EAAa;AACxC,sBAAI,CAACR,aAAL,IAAsBQ,OAAO,CAACC,OAA9B;AACA,sBAAI,CAACN,YAAL,IAAqBK,OAAO,CAACC,OAA7B;AACD,eAHD;AAID,aAND;AAQA,iBAAKV,eAAL,CAAqBW,kBAArB,GAA0C5N,SAA1C,CAAqD,UAAC6N,eAAD,EAAgC;AACnF,oBAAI,CAACA,eAAL,GAAuBA,eAAvB;;AACA,oBAAI,CAACA,eAAL,CAAqBlD,OAArB,CAA6B,UAAC+C,OAAD,EAAa;AACxC,sBAAI,CAACR,aAAL,IAAsBQ,OAAO,CAACC,OAA9B;AACA,sBAAI,CAACL,aAAL,IAAsBI,OAAO,CAACC,OAA9B;AACD,eAHD;AAID,aAND;AAOA,iBAAKV,eAAL,CAAqBa,eAArB,GAAuC9N,SAAvC,CAAkD,UAAC+N,KAAD,EAAoB;AACpE,oBAAI,CAACA,KAAL,GAAaA,KAAb;;AACA,oBAAI,CAACA,KAAL,CAAWpD,OAAX,CAAmB,UAAC+C,OAAD,EAAa;AAC9B,sBAAI,CAACP,iBAAL,IAA0BO,OAAO,CAACM,UAAlC;AACA,sBAAI,CAACZ,sBAAL,IAAgCM,OAAO,CAACO,aAAR,GAAwBP,OAAO,CAACQ,UAAhE;AACD,eAHD;AAID,aAND;AAOA,iBAAKjB,eAAL,CAAqBkB,eAArB,GAAuCnO,SAAvC,CAAkD,UAACoO,KAAD,EAAmB;AACnE,oBAAI,CAACA,KAAL,GAAaA,KAAb;;AACA,oBAAI,CAACA,KAAL,CAAWzD,OAAX,CAAmB,UAAC0D,IAAD,EAAU;AAC3B,oBAAIA,IAAI,CAACV,OAAL,GAAe,CAAnB,EAAsB;AACpB,wBAAI,CAACR,iBAAL,IAA0BkB,IAAI,CAACV,OAA/B;AACD;AACF,eAJD;AAKD,aAPD;AAQD;;;;;;;yBA5CUX,yB,EAAyB,kI;AAAA,O;;;cAAzBA,yB;AAAyB,8C;AAAA,iB;AAAA,gB;AAAA,+E;AAAA;AAAA;ACZtC;;AACI;;AACI;;AAII;;;;AACJ;;AACA;;AAII;;;;AACJ;;AACA;;AAII;;;;AACJ;;AACA;;AAII;;;;AACJ;;AACF;;AACN;;;;AAtBY;;AAAA;;AAFA,mFAAa,SAAb,EAAa,CAAb;;AAGA;;AAAA;;AAKA;;AAAA;;AAFA,mFAAa,SAAb,EAAa,CAAb;;AAGA;;AAAA;;AAKA;;AAAA;;AAFA,mFAAa,SAAb,EAAa,CAAb;;AAGA;;AAAA;;AAKA;;AAAA;;AAFA,mFAAa,SAAb,EAAa,CAAb;;AAGA;;AAAA;;;;;;;;;;wEDZCA,yB,EAAyB;gBALrC,uDAKqC;iBAL3B;AACThQ,oBAAQ,EAAE,uBADD;AAETC,uBAAW,EAAE,oCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAK2B,U;;;;;;;;;;;;;;;;;;;;;;AEZtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKI;;AACE;;AAAqE;;AAAqD;;AAA0B;;AAAI;;AAAW;;AAAM;;AAAI;;AAAO;;AAAS;;AAC7L;;AAAqE;;AAAqD;;AAA0B;;AAAM;;AAAW;;AAAM;;AAAM;;AAAO;;AAAS;;AACjM;;AAAqE;;AAAqD;;AAA0B;;AAAe;;AAAW;;AAAM;;AAAS;;AAAO;;AAAS;;AAC7M;;AAAqE;;AAAqD;;AAA0B;;AAAU;;AAAW;;AAAM;;AAAU;;AAAO;;AAAS;;AAC3M;;;;;;AACA;;AACE;;AAA8E;;AAAqD;;AAA0B;;AAAI;;AAAW;;AAAM;;AAAI;;AAAO;;AAAS;;AACtM;;AAAqE;;AAAqD;;AAA0B;;AAAM;;AAAW;;AAAM;;AAAW;;AAAO;;AAAS;;AACtM;;AAAqE;;AAAqD;;AAA0B;;AAAe;;AAAW;;AAAM;;AAAY;;AAAO;;AAAS;;AAChN;;AAAqE;;AAAqD;;AAA0B;;AAAU;;AAAW;;AAAM;;AAAW;;AAAO;;AAAS;;AAC1M;;AAAgF;;AAAqD;;AAAU;;AAAI;;AAAW;;AAAM;;AAAM;;AAAO;;AAAS;;AAC5L;;;;UDTSoR,oB;AAEX,sCAAoBlK,YAApB,EAAgD;AAAA;;AAA5B,eAAAA,YAAA,GAAAA,YAAA;AAA+B;;;;qCAExC;AACT,iBAAKmK,MAAL,GAAcjO,cAAc,CAACC,OAAf,CAAuB,MAAvB,MAAmC,MAAjD;AACD;;;4CAEc;AACb,mBAAO,KAAK6D,YAAL,CAAkBE,eAAlB,EAAP;AACD;;;uCAEY;AACX,iBAAKiK,MAAL,GAAc,CAAC,KAAKA,MAApB;AACAjO,0BAAc,CAACS,OAAf,CAAuB,MAAvB,EAA+B,KAAKwN,MAAL,GAAc,MAAd,GAAuB,OAAtD;AACAhQ,mBAAO,CAACC,GAAR,CAAY,KAAK+P,MAAjB;AACD;;;;;;;yBAhBUD,oB,EAAoB,iJ;AAAA,O;;;cAApBA,oB;AAAoB,0C;AAAA,gB;AAAA,e;AAAA,oc;AAAA;AAAA;ACRjC;;AACE;;AAEE;;AAAuB;;AAAM;;AAC7B;;AACA;;AAMA;;AAOA;;AAA+D;AAAA,qBAAU,IAAAE,UAAA,EAAV;AAAsB,aAAtB;;AAA2C;;AAAI;;AAEhH;;AAEF;;;;AAjBU;;AAAA;;AAMA;;AAAA;;AAOiF;;AAAA;;;;;;;;;wEDV9EF,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACTtR,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD;AAHF,W;AAKsB,U;;;;;;;;;;;;;;;;;;;;;;AERjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOauR,wB;AAEX,4CAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,wB;AAAwB,O;;;cAAxBA,wB;AAAwB,8C;AAAA,gB;AAAA,e;AAAA;AAAA;ACPrC;;AAAG;;AAAwB;;;;;;;;wEDOdA,wB,EAAwB;gBALpC,uDAKoC;iBAL1B;AACTzR,oBAAQ,EAAE,uBADD;AAETC,uBAAW,EAAE,oCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAK0B,U;;;;;;;;;;;;;;;;;;;;AEPrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAUA,UAAMwR,MAAM,GAAW,CACrB;AAACC,YAAI,EAAE,EAAP;AAAWC,kBAAU,EAAE,SAAvB;AAAkCC,iBAAS,EAAE;AAA7C,OADqB,EAErB;AAACF,YAAI,EAAE,OAAP;AAAgBC,kBAAU,EAAE;AAA5B,OAFqB,EAGrB;AAACD,YAAI,EAAE,SAAP;AAAkBrE,iBAAS,EAAE;AAA7B,OAHqB,EAIrB;AAACqE,YAAI,EAAE,mBAAP;AAA4BrE,iBAAS,EAAE;AAAvC,OAJqB,EAKrB;AAACqE,YAAI,EAAE,cAAP;AAAuBrE,iBAAS,EAAE;AAAlC,OALqB,EAMrB;AAACqE,YAAI,EAAE,WAAP;AAAoBrE,iBAAS,EAAE,mGAA/B;AAAmDwE,mBAAW,EAAE,CAAC,2EAAD;AAAhE,OANqB,EAOrB;AAACH,YAAI,EAAE,QAAP;AAAiBrE,iBAAS,EAAE;AAA5B,OAPqB,EAQrB;AAACqE,YAAI,EAAE,SAAP;AAAkBrE,iBAAS,EAAE;AAA7B,OARqB,CAAvB;;UAeayE,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,kBAHlB,CAAC,6DAAaC,OAAb,CAAqBN,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;4HAAhBK,gB,EAAgB;AAAA;AAAA,oBAFjB,4DAEiB;AAAA,S;AAFL,O;;;;;wEAEXA,gB,EAAgB;gBAJ5B,sDAI4B;iBAJnB;AACRpP,mBAAO,EAAE,CAAC,6DAAaqP,OAAb,CAAqBN,MAArB,CAAD,CADD;AAER9O,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAImB,U;;;;;;;;;;;;;;;;;;ACzB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAuCaqP,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,kBAdlB,CACP,4DADO,EAEP,oEAFO,EAGP,6EAHO,EAIP,wEAJO,EAKP,wEALO,EAMP,0EANO,EAOP,gFAPO,EAQP,wEARO,EASP,2DATO,EAUP,uEAVO,EAWP,mEAXO,CAckB;;;;4HAAhBA,gB,EAAgB;AAAA,yBApBZ,4HAoBY,EAnBxB,wGAmBwB,EAlBxB,mGAkBwB,EAjBxB,4JAiBwB,EAhBxB,oKAgBwB;AAhBY,oBAGrC,4DAHqC,EAIrC,oEAJqC,EAKrC,6EALqC,EAMrC,wEANqC,EAOrC,wEAPqC,EAQrC,0EARqC,EASrC,gFATqC,EAUrC,wEAVqC,EAWrC,2DAXqC,EAYrC,uEAZqC,EAarC,mEAbqC,CAgBZ;AAHN,oBAZX,4HAYW;AAGM,S;AAfc,O;;;;;wEAe9BA,gB,EAAgB;gBArB5B,sDAqB4B;iBArBnB;AACRvP,wBAAY,EAAE,CAAC,4HAAD,EACX,wGADW,EAEX,mGAFW,EAGX,4JAHW,EAIX,oKAJW,CADN;AAMRE,mBAAO,EAAE,CAAC,4HAAD,CAND;AAORD,mBAAO,EAAE,CACP,4DADO,EAEP,oEAFO,EAGP,6EAHO,EAIP,wEAJO,EAKP,wEALO,EAMP,0EANO,EAOP,gFAPO,EAQP,wEARO,EASP,2DATO,EAUP,uEAVO,EAWP,mEAXO;AAPD,W;AAqBmB,U;;;;;;;;;;;;;;;;;;ACtC7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAI,sEAAYyB,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyB8N,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,eAAI5Q,OAAO,CAACwG,KAAR,CAAcoK,GAAd,CAAJ;AAAA,OADZ;;;;;;;;;;;;;;;ACXA,eAASC,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAR,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,YAAM,CAACjQ,OAAP,GAAiBwP,wBAAjB;AACAA,8BAAwB,CAACrR,EAAzB,GAA8B,MAA9B","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialogRef } from '@angular/material/dialog';\n@Component({\n  selector: 'app-onboarding-start-options',\n  templateUrl: './onboarding-start-options.component.html',\n  styleUrls: ['./onboarding-start-options.component.css']\n})\nexport class OnboardingStartOptionsComponent implements OnInit {\n\n  constructor(public router: Router,\n              private dialogRef: MatDialogRef<OnboardingStartOptionsComponent >) { }\n\n  ngOnInit(): void {\n  }\n  startRetailOnboarding(){\n    this.dialogRef.close();\n    this.router.navigate(['/retail-onboarding']);\n  }\n}\n","<div class=\"start-onboarding\">\n    <p>Great to have you onboard!</p>\n    <p>Please chose an option which best identifies you :</p>\n    <mat-grid-list cols=\"3\" rowHeight=\"100px\">\n        <mat-grid-tile [colspan]=\"3\" [rowspan]=\"2\" class=\"onboarding-tile\">\n            <mat-card class=\"onboarding-card\">\n                <mat-card-header>\n                    <div mat-card-avatar class=\"material-icons md-48\">face</div>\n                    <mat-card-title>Individual</mat-card-title>\n                    <mat-card-subtitle>Retail Banking</mat-card-subtitle>\n                </mat-card-header>\n                <mat-card-content>\n                    <p>\n                        Apply now and get access to 7% interest rate on your savings account.\n                    </p>\n                </mat-card-content>\n                <mat-card-actions>\n                    <button mat-button (click)=\"startRetailOnboarding()\">Apply Now</button>\n                </mat-card-actions>\n            </mat-card>\n        </mat-grid-tile>\n        <mat-grid-tile [colspan]=\"3\" [rowspan]=\"2\" class=\"onboarding-tile\">\n            <mat-card class=\"onboarding-card\">\n                <mat-card-header>\n                    <div mat-card-avatar class=\"material-icons md-48\">admin_panel_settings</div>\n                    <mat-card-title>Corporate Admin</mat-card-title>\n                    <mat-card-subtitle>Corporate Banking</mat-card-subtitle>\n                </mat-card-header>\n                <mat-card-content>\n                    <p>\n                        Apply now for a complete corporate banking solution for your business.\n                    </p>\n                </mat-card-content>\n                <mat-card-actions>\n                    <button mat-button>Apply Now</button>\n                </mat-card-actions>\n            </mat-card>\n        </mat-grid-tile>\n        <mat-grid-tile [colspan]=\"3\" [rowspan]=\"2\" class=\"onboarding-tile\">\n            <mat-card class=\"onboarding-card\" >\n                <mat-card-header>\n                    <div mat-card-avatar class=\"material-icons md-48\">person</div>\n                    <mat-card-title>Corporate User</mat-card-title>\n                    <mat-card-subtitle>Corporate Banking</mat-card-subtitle>\n                </mat-card-header>\n                <mat-card-content>\n                    <p>\n                        Already have your business registered with us? Join here to access your business details.\n                    </p>\n                </mat-card-content>\n                <mat-card-actions>\n                    <button mat-button>Apply Now</button>\n                </mat-card-actions>\n            </mat-card>\n        </mat-grid-tile>\n    </mat-grid-list>\n</div>","import { environment } from './environment';\nimport { Injectable } from '@angular/core';\n@Injectable({\n  providedIn: 'root',\n})\nexport class BackendAPIService {\n    \n\n  private getBaseUrl() {\n    const backendUrl =  environment.backendUrl;\n    const PATH_SEPERATOR = '/';\n    const context = environment.contextName;\n\n    let baseURL = backendUrl + PATH_SEPERATOR;\n    if (context !== '') {\n      baseURL = baseURL + context + PATH_SEPERATOR;\n    }\n    return  baseURL;\n  }\n\n  getAccountsAPI(): string {\n    return this.getBaseUrl()  + 'user/products/accounts';\n  }\n  getDepositAccountsAPI(): string {\n    return this.getBaseUrl()  + 'user/products/deposits';\n  }\n  getLoanAccountsAPI(): string {\n    return this.getBaseUrl()  + 'user/products/loans';\n  }\n  getCardsAccountsAPI(): string {\n    return this.getBaseUrl()  + 'user/products/cards';\n  }\n  getCorporatesAPI(): string {\n    return this.getBaseUrl() + 'corporates/';\n  }\n\n  getLogintAPI(): string {\n    return this.getBaseUrl()  + 'auth/login';\n  }\n  getLogOutAPI(): string {\n    return this.getBaseUrl()  + 'logout';\n  }\n    getInventoryListAPI(pageSize: number, pageNumber: number): string {\n      return this.getBaseUrl()  +\n       'inventory/list' + '?pageSize=' + pageSize + '&pageNumber=' + pageNumber + '&sortBy=id';\n    }\n    getUpdateInventoryListAPI(companyName: string, medicineName: string): string {\n      return this.getBaseUrl()  +\n       'inventory/update/' + companyName + '/' + medicineName + '/' ;\n    }\n    getSearchInventoryListAPI(searchCriteria: string): string {\n      return this.getBaseUrl()  +\n      'inventory/search?q=' + searchCriteria ;\n    }\n\n  getDeleteArticleAPI(id: number): string {\n    return this.getBaseUrl()  + 'article' + '/' + id;\n  }\n  getCreateArticleAPI(): string {\n    return this.getBaseUrl()  + 'article';\n  }\n  public getArticleListAPI(pageSize: number, pageNumber: number): string {\n    return this.getBaseUrl()\n      + 'article/list?pageSize='\n      + pageSize\n      + '&pageNumber='\n      + pageNumber\n      + '&sortBy=id';\n  }\n  public getUsersListAPI(pageSize: number, pageNumber: number) {\n    return this.getBaseUrl()  + 'user/list?pageSize=' + pageSize + '&pageNumber=' + pageNumber + '&sortBy=id';\n  }\n  public getLoggedInUserAPI(): string {\n    return this.getBaseUrl()  + 'users/me';\n}\n}\n","export class ConfirmationDialogueInput {\n    message: string;\n    buttons: ConfirmationDialogueButtons[];\n    closeButtons: string[];\n}\nexport class ConfirmationDialogueButtons {\n    text: string;\n    color: string;\n    returnText: string;\n    constructor(text: string, returnText: string, color?: string) {\n        this.text = text;\n        this.returnText = returnText;\n        this.color = color;\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome-component',\n  templateUrl: './welcome-component.component.html',\n  styleUrls: ['./welcome-component.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { console.log('Welcome Component');}\n  public imagesUrl;\n\n  ngOnInit() {\n    this.imagesUrl = ['/assets/images/welcome/1.jpg'];\n  }\n\n}\n","<mat-grid-list cols=\"11\" rowHeight=\"100px\">\n    <mat-grid-tile\n        [colspan]=\"8\"\n        [rowspan]=\"8\"\n        >\n            <app-image-slider \n            [images]=\"imagesUrl\"></app-image-slider> \n\n    </mat-grid-tile>\n    <mat-grid-tile\n        [colspan]=\"3\"\n        [rowspan]=\"2\"\n        >\n        <app-login-form></app-login-form>\n    </mat-grid-tile>\n    <mat-grid-tile\n        [colspan]=\"3\"\n        [rowspan]=\"2\"\n        >\n        <app-register class=\"register\"></app-register>\n    </mat-grid-tile>\n    \n  </mat-grid-list>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auto-generated',\n  templateUrl: './auto-generated.component.html',\n  styleUrls: ['./auto-generated.component.css']\n})\nexport class AutoGeneratedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>auto-generated works!</p>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BackendAPIService } from 'src/environments/backendAPIs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountsService {\n  getSavingsAccounts() {\n    return this.http.get(this.backendApis.getAccountsAPI());\n  }\n  getDepositAccounts() {\n    return this.http.get(this.backendApis.getDepositAccountsAPI());\n  }\n  getLoanAccounts() {\n    return this.http.get(this.backendApis.getLoanAccountsAPI());\n  }\n  getCardAccounts() {\n    return this.http.get(this.backendApis.getCardsAccountsAPI());\n  }\n  constructor(private http: HttpClient,\n              private backendApis: BackendAPIService) { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","\n<mat-grid-list cols=\"11\" rowHeight=\"100px\">\n    <mat-grid-tile\n        [colspan]=\"7\"\n        [rowspan]=\"2\"\n        [style.background]=\"'white'\">\n        <app-portfolio-summary></app-portfolio-summary>\n    </mat-grid-tile>\n    <mat-grid-tile\n        [colspan]=\"4\"\n        [rowspan]=\"6\"\n        [style.background]=\"'white'\">\n        <app-quick-actions-bar></app-quick-actions-bar>\n    </mat-grid-tile>\n    <mat-grid-tile\n        [colspan]=\"7\"\n        [rowspan]=\"4\"\n        [style.background]=\"'white'\">\n        <app-transactions-summary ></app-transactions-summary>\n    </mat-grid-tile>\n\n    \n  </mat-grid-list>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer-bar',\n  templateUrl: './footer-bar.component.html',\n  styleUrls: ['./footer-bar.component.css']\n})\nexport class FooterBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<footer>\n  <mat-toolbar>  \n    <mat-toolbar-row>\n      <mat-icon>copyright</mat-icon> Mohit Kanwar\n    </mat-toolbar-row>\n  </mat-toolbar>\n</footer>\n","import { Output, EventEmitter, Injectable } from '@angular/core';\n@Injectable({\n    providedIn: 'root',\n})\nexport class NotificationService {\n    @Output() notificationEvent: EventEmitter<{'message': string}> = new EventEmitter();\n\n    public sendNotification(message: string) {\n        this.notificationEvent.emit({message});\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PreLoginComponent } from './pre-login/pre-login.component';\nimport { CommonAppModule } from '../common/common.module';\n\n@NgModule({\n  declarations: [PreLoginComponent],\n  imports: [\n    CommonModule,\n    CommonAppModule\n  ],\n  exports: [\n    PreLoginComponent\n  ]\n})\nexport class PageLayoutsModule { }\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-email-verification',\n  templateUrl: './email-verification.component.html',\n  styleUrls: ['./email-verification.component.css']\n})\nexport class EmailVerificationComponent implements OnInit {\n\n  message: string;\n  constructor(private activatedRoute: ActivatedRoute) {\n    this.activatedRoute.queryParams.subscribe(params => {\n          const queryParam = params.q;\n          console.log(queryParam);\n          if (queryParam == null || queryParam === '') {\n            this.message = 'Unable to verify the email';\n          } else {\n            this.message = 'Email verified successfully';\n          }\n      });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>{{message}}</p>\n","import { Injectable } from '@angular/core';\nimport { User } from '../users/user.model';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BackendAPIService } from 'src/environments/backendAPIs';\nimport { DataResponse } from 'src/app/common/responseTypes/data-response.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  isAuthenticated(): boolean {\n    return  sessionStorage.getItem('authenticated') === 'true';\n  }\n  constructor(private http: HttpClient,\n              private backendAPIs: BackendAPIService) { }\n\n  login(user: User): Observable<DataResponse> {\n    const authKey = 'Basic ' + btoa(user.username + ':' + user.password);\n    const headers = new HttpHeaders(user ? {\n      authorization : authKey\n  } : {});\n    sessionStorage.setItem('auth-key', authKey);\n    return this.http.post<DataResponse>(this.backendAPIs.getLogintAPI(), user, {headers});\n  }\n  logout() {\n    const authKey = sessionStorage.getItem('auth-key');\n    const headers = new HttpHeaders(authKey ? {\n      authorization : authKey\n  } : {});\n    return this.http.post<DataResponse>(this.backendAPIs.getLogOutAPI(), null, {headers});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  backendUrl: 'http://localhost:8080',\n  mockBackendUrl: 'assets/mocks',\n  contextName: '',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { TopFixedBarComponent } from './top-fixed-bar/top-fixed-bar.component';\nimport { MainLayoutComponent } from './main-layout/main-layout.component';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { FooterBarComponent } from './footer-bar/footer-bar.component';\nimport { NotificationComponent } from './notification/notification.component';\nimport { ExpandableListComponent } from './expandable-list/expandable-list.component';\nimport { ConfirmationDialogueComponent } from './confirmation-dialogue/confirmation-dialogue.component';\nimport { AppRoutingModule } from '../app-routing.module';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n@NgModule({\n    declarations: [\n    TopFixedBarComponent,\n    MainLayoutComponent,\n    FooterBarComponent,\n    NotificationComponent,\n    ExpandableListComponent,\n    ConfirmationDialogueComponent,\n    ],\n    imports: [\n      CommonModule,\n      BrowserAnimationsModule,\n      MatToolbarModule,\n      MatMenuModule,\n      MatIconModule,\n      AppRoutingModule,\n      MatSnackBarModule,\n      MatButtonModule,\n      MatTableModule,\n      MatPaginatorModule,\n      MatCheckboxModule,\n\n    ],\n    providers: [],\n    bootstrap: [MainLayoutComponent],\n    exports: [MainLayoutComponent, NotificationComponent, ExpandableListComponent, ConfirmationDialogueComponent]\n  })\nexport class ThemeModule {\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NotificationService } from 'src/app/theme/notification/notification.service';\nimport { LoginService } from '../login.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private router: Router, private notificationService: NotificationService, private logoutService: LoginService) { }\n\n  ngOnInit() {\n    sessionStorage.removeItem('authenticated');\n    sessionStorage.removeItem('auth-key');\n    this.router.navigate(['login']);\n    this.logoutService.logout();\n    this.notificationService.sendNotification('Logged out successfully!');\n  }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ConfirmationDialogueInput } from './confirmation-dialogue-input';\n\n@Component({\n  selector: 'app-confirmation-dialogue',\n  templateUrl: './confirmation-dialogue.component.html',\n  styleUrls: ['./confirmation-dialogue.component.css']\n})\nexport class ConfirmationDialogueComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<ConfirmationDialogueComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmationDialogueInput) {}\n\n  ngOnInit() {\n  }\n\n\n\n  onCloseClick(): void {\n    this.dialogRef.close('');\n  }\n\n  buttonClicked(i: number) {\n    this.dialogRef.close(this.data.buttons[i].returnText);\n  }\n}\n","<div class=\"dialogue\">\n  <p>\n    {{data.message}}\n  </p>\n  <span *ngFor=\"let button of data.buttons;let i=index\">\n    <button   mat-button mat-flat-button  color=\"{{button.color}}\" (click)=\"buttonClicked(i)\" class=\"button-class\">{{button.text}}</button>\n  </span>\n  <span *ngFor=\"let buttonText of data.closeButtons\">\n    <button   mat-button mat-flat-button  color=\"warn\" (click)=\"onCloseClick()\" class=\"button-class\">{{buttonText}}</button>\n  </span>\n</div>\n\n","import { Component, OnInit, Input, Output , EventEmitter} from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { PageUpdatedEventData } from './pageupdatedevent.model';\nimport { ActivatedRoute, Params } from '@angular/router';\n\n@Component({\n  selector: 'app-expandable-list',\n  templateUrl: './expandable-list.component.html',\n  styleUrls: ['./expandable-list.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class ExpandableListComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute) { }\n  @Input() listData ;\n  @Input() listColumns ;\n  @Input() detailsColumns? ;\n  @Input()totalNumberOfItems;\n  @Input()pageSize = 5;\n  @Input()pageNumber = 1;\n  @Output() pageChanged: EventEmitter<PageUpdatedEventData> = new EventEmitter<PageUpdatedEventData>();\n  @Output() deleteEvent: EventEmitter<PageUpdatedEventData> = new EventEmitter<PageUpdatedEventData>();\n\n  expandedRow;\n  ngOnInit() {\n    this.route.params.subscribe((params: Params) => {\n      this.getPaginatedItems({length: 0, pageIndex: 1, pageSize: 5, previousPageIndex: 1});\n   });\n  }\n  toggleExpandedRow(row) {\n    if (this.expandedRow !== row) {\n      this.expandedRow = row;\n    } else {\n      this.expandedRow = '';\n    }\n  }\n  getPaginatedItems(event) {\n    const paginationUpdate: PageUpdatedEventData = new PageUpdatedEventData();\n    paginationUpdate.length = event.length;\n    paginationUpdate.pageIndex = event.pageIndex;\n    paginationUpdate.pageSize = event.pageSize;\n    paginationUpdate.previousPageIndex = event.previousPageIndex;\n    this.pageChanged.emit(paginationUpdate);\n  }\n}\n","<!-- <table>\n  <tr>\n    <th *ngFor=\"let column of columnsToDisplay\">{{column}}</th>\n  </tr>\n  <tr *ngFor=\"let data of listDataSource\">\n    <td *ngFor=\"let column of columnsToDisplay\">{{data[column]}}</td>\n  </tr>\n</table> -->\n<table mat-table [dataSource]=\"listData\" multiTemplateDataRows class=\"mat-elevation-z8\">\n  \n      <ng-container matColumnDef=\"{{column}}\" *ngFor=\"let column of listColumns\">\n\n          <th mat-header-cell *matHeaderCellDef> {{column}} </th>\n          <td mat-cell *matCellDef=\"let detailRow\"> {{detailRow[column]}} </td>\n        </ng-container>\n  \n  \n\n  <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n  <ng-container matColumnDef=\"expandedDetail\">\n    <td mat-cell *matCellDef=\"let row\" [attr.colspan]=\"columnsToDisplayInDetails.length\">\n      <div class=\"user-details\" [@detailExpand]=\"row == expandedRow ? 'expanded' : 'collapsed'\">\n\n        <table class=\"user-details-table\">\n          <tr class=\"user-details-row\" *ngFor=\"let column of columnsToDisplayInDetails\">\n            <th class=\"user-details-header\"><b>{{column}}</b></th>\n            <td class=\"user-details-details\">{{row[column]}}</td>\n          </tr>\n        </table>\n      </div>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"listColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: listColumns;\" class=\"user-details-row\"\n    [class.user-details-expanded-row]=\"expandedRow === row\" (click)=\"toggleExpandedRow(row)\">\n  </tr>\n  <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"user-detail-row\"></tr>\n</table>\n<mat-paginator [length]=\"totalNumberOfItems\"\n              [pageSize]=\"pageSize\"\n              [pageIndex]=\"pageNumber\"\n              [pageSizeOptions]=\"[5, 10, 25, 100]\"\n              (page)=\"getPaginatedItems($event)\">\n</mat-paginator>","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appOnboardingHost]',\n})\nexport class OnboardingDirective {\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor() {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    const accessToken = sessionStorage.getItem('auth-key');\n    request = request.clone({\n      setHeaders: {\n        Authorization: `${accessToken}`\n      }\n    });\n    return next.handle(request);\n  }\n}\n","export class RetailOffer {\nid: number;\ntitle: string;\nsubtitle: string;\ndescription: string;\nrecomended: boolean;\nformName: string;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-privacy-policy',\n  templateUrl: './privacy-policy.component.html',\n  styleUrls: ['./privacy-policy.component.css']\n})\nexport class PrivacyPolicyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>\n    <i>Last Updated on : 9 March 2021</i>\n</p>\n\n<p>\nThis Privacy Policy explains our practices regarding the collection, usage and disclosure of information that we receive from our users through our chat bot functionalities as made available by our product along with it's implementations. \n</p>\n<p>\nPlease take a moment to familiarize yourself with our privacy practices and contact us if you have any questions.\n</p>\n<p>\nInformation we collect from you\nPersonal information is data that can be used to identify or contact a single person. \n\nSince this chat bot is built to provide answers to basic questions related to a specific topic of discussion (Your Banking Queries), the interactions are not user-specific. Therefore, as we are not dealing with user specific data to provide our services, we do not collect any personal information of our users, except the queries asked by them. Our primary goal in collecting this textual information is to improve our services.\n\nBut there is certain amount of information that is collected by the platforms and integrations our chat bot uses. This includes \n</p>\n<ul>\n    <li>Time zone</li>\n    <li>Location (Latitude and Longitude values wrapped in a Location object)</li>\n    <li>Query (Natural language text to be processed )</li>\n    <li>sessionID- a unique anonymous string of characters identifying the session, etc</li>\n</ul>\n<p>\n<b>How we use the information</b><br/>\nWe only store the textual information to better our chat bots questions handling capacity and efficiency and also to ensure that the number of no match conversations is minimum. Other pieces of information mentioned above are necessary for the agents's functioning over various platforms. \n</p>\n<p>\n    <b>What information do we share?</b><br/>\n    We never share the data with anyone. Data is collected solely for enhancing the response quality and the bot is built for the purpose of making the users aware of their banking needs. \n    \n</p>\n<p>\n<b>How users can change/delete their data</b><br/>\nThe only way this chat bot can identify a user is with the help of a 'sessionID' which is a unique, anonymous string of characters which identifies their session. The users can choose any one of the two options called 'Reset App' or 'Stop this app from remembering me'. Doing this will change or reset the unique code the chat bot uses to remember them and hence the user will seem to be a new user during their next interaction with the app.\n</p>\n<p>\n<b>Privacy Questions</b><br/>\nIf you have any questions or concerns about our Privacy Policy or data processing, or if you would like to reach out to us to report a possible breach of local privacy laws, please contact us. \n</p>\n<p>\n<b>Revisions to this Privacy Policy</b> <br/>\nAny information that is collected via our services is covered by our Privacy Policy in effect at the time such information is collected. We may revise this Privacy Policy from time to time. If any change is brought to this Privacy Policy, we will provide a proper notice of those changes on our service and also update the “Last Updated on” field above to indicate when those changes become effective.\n</p>","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { LoginService } from 'src/app/modules/login/login.service';\nimport { User } from 'src/app/modules/users/user.model';\nimport { UserService } from 'src/app/modules/users/user.service';\n@Injectable()\nexport class UserStateGuard implements CanActivate {\n    constructor(private loginService: LoginService,\n                private userService: UserService\n    ) { }\n\n    canActivate(): Observable<boolean> {\n        const isAuthenticated = this.loginService.isAuthenticated();\n        console.log(sessionStorage.getItem('authenticated') === 'true');\n        if (sessionStorage.getItem('authenticated') === 'true') {\n            const loggedInUser = this.userService.getLoggedInUser();\n            loggedInUser.subscribe(data => {\n                console.log(data);\n                if (!data) {\n                    // No response from API\n                    console.log('No response from API');\n                    return of(false);\n                }\n                if (data.status.status === 'SUCCESS') {\n                    const user: User = data.data;\n                    if (!user.accountNonExpired) {\n                        // account expired\n                        console.log('Account Expired');\n                        return of(false);\n                    }\n                    if (!user.accountNonLocked) {\n                        // account locked\n                        console.log('Account Locked');\n                        return of(false);\n                    }\n                    if (!user.credentialsNonExpired) {\n                        // credentials expired\n                        console.log('credentials expired');\n                        return of(false);\n                    }\n                    if (!user.termsAccepted) {\n                        // Terms not Accepted\n                        console.log('Terms not Accepted');\n                        return of(false);\n                    }\n                    if (user.firstTimePwdReset) {\n                        // First Time Pwd Reset\n                        console.log('First Time Pwd Reset');\n                        return of(false);\n                    }\n                    console.log(' All well, move ahed');\n                    return of(true);\n                }\n                else {\n                    console.log(' some error');\n                    return of(false);\n                }\n            }, error => {\n                console.log(' some error');\n                return of(false);\n            });\n            return of(true);\n        }\n        else {\n            console.log(' user is not authenticated');\n            return of(false);\n        }\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\nimport { Observable} from 'rxjs';\nimport { MockResponseService } from './mock/mockresponse.service';\n\n\n@Injectable()\nexport class MockInterceptor implements HttpInterceptor {\n  constructor(private mockResponseService: MockResponseService ) {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const mock = sessionStorage.getItem('mock');\n    if (mock === 'true' && !request.url.startsWith('assets')) {\n        const mockRequestUrl = this.mockResponseService.getMockRequestUrl(request);\n        const mockRequest = request.clone({url: mockRequestUrl, method: 'GET'});\n        return next.handle(mockRequest);\n    } else {\n      // mocks are disabled here\n      return next.handle(request);\n     }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { OnboardingComponent } from '../onboarding.component';\n\n@Component({\n  selector: 'app-onboarding-form-notfound-error',\n  templateUrl: './onboarding-form-notfound-error.component.html',\n  styleUrls: ['./onboarding-form-notfound-error.component.css']\n})\nexport class OnboardingFormNotfoundErrorComponent implements OnInit, OnboardingComponent {\n\n  constructor() { }\n  data: any;\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>There is a setup error on this page. The developers have been informed of the error. Please check back in 1 hour</p>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { interval, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-image-slider',\n  templateUrl: './image-slider.component.html',\n  styleUrls: ['./image-slider.component.css']\n})\nexport class ImageSliderComponent implements OnInit {\n  @Input() images: string[];\n  timer = interval(2500);\n  subscription: Subscription;\n  public selectedImage: string;\n  constructor() { }\n  ngOnInit() {\n    let i = 0;\n    this.selectedImage = this.images[i];\n    this.subscription = this.timer.subscribe( () => {\n      this.selectedImage = this.images[i++];\n      if (i === this.images.length) {\n        i = 0;\n      }\n  });\n  }\n\n}\n","<img [src]=\"selectedImage\" width=\"100%\" height=\"100%\"/>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'retail-banking-angular';\n}\n","<app-main-layout></app-main-layout>","import { Component, OnInit } from '@angular/core';\nimport { OnboardingComponent } from '../onboarding.component';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-retail-exploring-onboarding',\n  templateUrl: './retail-exploring-onboarding.component.html',\n  styleUrls: ['./retail-exploring-onboarding.component.css']\n})\nexport class RetailExploringOnboardingComponent implements OnInit, OnboardingComponent {\n\n  constructor(private fb: FormBuilder) { }\n  data: any;\n  profileForm: FormGroup;\n  message: string;\n  ngOnInit(): void {\n    this.profileForm = this.fb.group({\n      email:  ['', Validators.required],\n    });\n  }\n\n  onEmailSubmit() {\n    console.log(this.profileForm);\n    this.profileForm = null;\n    this.message = 'A verification email has been sent to your email address. See you there!';\n  }\n}\n","\n    <form [formGroup]=\"profileForm\" *ngIf=\"profileForm\">\n      <mat-form-field class=\"full-width\">\n        <mat-label>Email Address</mat-label>\n        <input matInput placeholder=\"Email Address\" formControlName=\"email\" name=\"profileForm.email\" email/>\n      </mat-form-field>\n      <div class=\"full-width\">\n        <button matInput type=\"submit\" mat-raised-button color=\"primary\" (click)=\"onEmailSubmit()\" [disabled]=\"!profileForm.valid\">Register</button>\n      </div>\n    </form>\n    <div *ngIf=\"message\">\n      {{message}}\n    </div>","export class PageUpdatedEventData {\n    length: number;\n    pageIndex: number;\n    pageSize: number;\n    previousPageIndex: number;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NotificationService } from './notification.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.css']\n})\nexport class NotificationComponent implements OnInit {\n  private showNotification: boolean;\n  private message: string;\n  constructor(private notificationService: NotificationService, private snackbar: MatSnackBar) { }\n\n  ngOnInit() {\n    this.showNotification = false;\n    this.notificationService.notificationEvent.subscribe(message => {\n      setTimeout(() => {\n        this.showNotification = true;\n        this.message = message.message;\n        this.snackbar.open(this.message, 'Close', {\n          duration: 5000,\n        });\n        setTimeout(() => {    // <<<---    using ()=> syntax\n          this.showNotification = false;\n          this.message = '';\n        }, 5000);\n      });\n\n    });\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { PortfolioSummaryComponent } from './portfolio-summary/portfolio-summary.component';\nimport { CommonAppModule } from 'src/app/common/common.module';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTableModule } from '@angular/material/table';\nimport { TransactionsSummaryComponent } from './transactions-summary/transactions-summary.component';\nimport { QuickActionsBarComponent } from './quick-actions-bar/quick-actions-bar.component';\n\n@NgModule({\n  declarations: [DashboardComponent, PortfolioSummaryComponent, TransactionsSummaryComponent, QuickActionsBarComponent],\n  exports: [DashboardComponent],\n  imports: [\n    CommonModule,\n    CommonAppModule,\n    MatGridListModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    MatTableModule\n  ]\n})\nexport class DashboardModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from '@src/app/app-routing.module';\nimport { AppComponent } from '@src/app/app.component';\nimport { CommonAppModule } from '@src/app/common/common.module';\nimport { WelcomeModule } from '@src/app/modules/welcome/welcome.module';\nimport { PageLayoutsModule } from '@src/app/page-layouts/page-layouts.module';\nimport { ThemeModule } from '@src/app/theme/theme.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from '@src/app/common/token.interceptor';\nimport { MockInterceptor } from '@src/app/common/mock.interceptor';\nimport { MockResponseService } from '@src/app/common/mock/mockresponse.service';\nimport { OnboardingModule } from '@src/app/modules/onboarding/onboarding.module';\nimport { UserStateGuard } from '@src/app/common/guards/LoggedInGuard';\nimport { UserService } from '@src/app/modules/users/user.service';\nimport { AutoGeneratedComponent } from '@src/app/auto-generated/auto-generated.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AutoGeneratedComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CommonAppModule,\n    WelcomeModule,\n    PageLayoutsModule,\n    ThemeModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    OnboardingModule\n  ],\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: MockInterceptor,\n    multi: true\n  },\n    {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptor,\n    multi: true\n  },\n  MockResponseService,\n  UserStateGuard,\n  UserService\n],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { HttpClient } from '@angular/common/http';\nimport { merge, Observable, of as observableOf } from 'rxjs';\nimport { startWith, switchMap, map, catchError } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-transactions-summary',\n  templateUrl: './transactions-summary.component.html',\n  styleUrls: ['./transactions-summary.component.css']\n})\nexport class TransactionsSummaryComponent implements AfterViewInit, OnInit {\n\n  displayedColumns: string[] = [ 'Date', 'Narration', 'Reference', 'State',   'Amount', 'ClosingBalance'];\n  data: Transaction[] = [];\n\n  resultsLength = 3;\n  isLoadingResults = true;\n  isRateLimitReached = false;\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  constructor(private httpClient: HttpClient) {}\n  ngOnInit(){\n    // tslint:disable-next-line:max-line-length\n    this.data.push({date : new Date(), state: 'debit', amount: '300', narration: 'Amazon', reference: '112423', closingBalance: '29700.00'});\n    // tslint:disable-next-line:max-line-length\n    this.data.push({date : new Date(new Date().getDate() - 1), state: 'debit', amount: '5000', narration: 'School Fee', reference: 'check:828823', closingBalance: '30000.00'});\n    // tslint:disable-next-line:max-line-length\n    this.data.push({date : new Date(new Date().getDate() - 1), state: 'credit', amount: '30000', narration: 'Salary Credit', reference: '112120', closingBalance: '35000.00'});\n    // this.data.push({date : new Date(new Date().getDate() - 2), number: '4', state: 'debit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 4), number: '5', state: 'debit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 8), number: '6', state: 'debit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 12), number: '7', state: 'credit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 12), number: '8', state: 'debit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 15), number: '9', state: 'debit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 21), number: '10', state: 'debit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 31), number: '11', state: 'debit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 41), number: '12', state: 'debit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 61), number: '13', state: 'credit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 71), number: '14', state: 'debit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 81), number: '15', state: 'debit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 91), number: '16', state: 'debit', narration: 'The narration'});\n    // this.data.push({date : new Date(new Date().getDate() - 91), number: '17', state: 'debit', narration: 'The narration'});\n  }\n  ngAfterViewInit() {\n    this.isLoadingResults = false;\n\n  }\n}\n\nexport interface GithubApi {\n  items: Transaction[];\n  total_count: number;\n}\nexport interface Transaction {\n  date: Date;\n  narration: string;\n  reference: string;\n  state: string;\n  closingBalance: string;\n  amount: string;\n}\n\n\n/** An example database that the data source uses to retrieve data for the table. */\nexport class ExampleHttpDatabase {\n  constructor(private http: HttpClient) {}\n\n  getRepoIssues(sort: string, order: string, page: number): Observable<GithubApi> {\n    const href = 'https://api.github.com/search/issues';\n    const requestUrl =\n        `${href}?q=repo:angular/components&sort=${sort}&order=${order}&page=${page + 1}`;\n    console.log(requestUrl);\n    return this.http.get<GithubApi>(requestUrl);\n  }\n\n}\n","<div class=\"example-container mat-elevation-z8\">\n    <div class=\"example-loading-shade\"\n         *ngIf=\"isLoadingResults || isRateLimitReached\">\n      <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\n    </div>\n  \n    <div class=\"example-table-container\">\n  \n      <table mat-table [dataSource]=\"data\" class=\"example-table\"\n      MatSort matSortActive=\"created\" matSortDisableClear matSortDirection=\"desc\">\n      <caption>Latest Transactions</caption>\n\n        <!-- Number Column -->\n        <ng-container matColumnDef=\"Date\">\n          <th mat-header-cell *matHeaderCellDef id=\"sno\">Date</th>\n          <td mat-cell *matCellDef=\"let row\">{{row.date | date }}</td>\n        </ng-container>\n  \n        <!-- Title Column -->\n        <ng-container matColumnDef=\"Narration\">\n          <th mat-header-cell *matHeaderCellDef id=\"title\">Narration</th>\n          <td mat-cell *matCellDef=\"let row\">{{row.narration}}</td>\n        </ng-container>\n  \n        <!-- State Column -->\n        <ng-container matColumnDef=\"Reference\">\n          <th mat-header-cell *matHeaderCellDef id=\"state\">Cheque/Ref. No.</th>\n          <td mat-cell *matCellDef=\"let row\">{{row.reference}}</td>\n        </ng-container>\n  \n        <!-- Created Column -->\n        <ng-container matColumnDef=\"State\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear id=\"state\">\n            State\n          </th>\n          <td mat-cell *matCellDef=\"let row\">{{row.state}}</td>\n        </ng-container>\n        <!-- Created Column -->\n        <ng-container matColumnDef=\"ClosingBalance\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear id=\"closingBalance\">\n            Closing Balance\n          </th>\n          <td mat-cell *matCellDef=\"let row\">{{row.closingBalance}}</td>\n        </ng-container>\n        <ng-container matColumnDef=\"Amount\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear id=\"amount\">\n            Amount\n          </th>\n          <td mat-cell *matCellDef=\"let row\">{{row.amount}}</td>\n        </ng-container>\n  \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n    </div>\n  \n    <mat-paginator [length]=\"resultsLength\" [pageSize]=\"30\"></mat-paginator>\n  </div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TopNavigationBarComponent } from './top-navigation-bar/top-navigation-bar.component';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { ImageSliderComponent } from './image-slider/image-slider.component';\n\n@NgModule({\n  declarations: [TopNavigationBarComponent,\n    ImageSliderComponent],\n  imports: [\n    CommonModule,\n    MatGridListModule,\n  ],\n  exports: [\n    TopNavigationBarComponent,\n    ImageSliderComponent\n  ]\n})\nexport class CommonAppModule { }\n","import { Component, OnInit, OnDestroy, Input, ViewChild, ComponentFactoryResolver } from '@angular/core';\nimport { OnboardingStep } from '../onboarding-components/onboarding.step';\nimport { OnboardingDirective } from '../onboarding-components/onboardinghost.directive';\nimport { OnboardingComponent } from '../onboarding-components/onboarding.component';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RetailOffer } from './retailoffer.model';\nimport { RetailExploringOnboardingComponent } from '../onboarding-components/retail-exploring-onboarding/retail-exploring-onboarding.component';\nimport { OnboardingFormNotfoundErrorComponent } from '../onboarding-components/onboarding-form-notfound-error/onboarding-form-notfound-error.component';\n\n@Component({\n  selector: 'app-retail-onboarding',\n  templateUrl: './retail-onboarding.component.html',\n  styleUrls: ['./retail-onboarding.component.css']\n})\nexport class RetailOnboardingComponent implements OnInit, OnDestroy  {\n\n  offers: RetailOffer[] = [];\n  selectedOffer: RetailOffer;\n  breakpoint: number;\n  onboardingSteps: OnboardingStep[];\n  currentAdIndex = -1;\n  isLinear = false;\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  @ViewChild(OnboardingDirective, {static: true}) onboardingHost: OnboardingDirective;\n  interval: any;\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.offers.push(this.getExploringOffer());\n    this.offers.push(this.getEnthusiasticOffer());\n    this.offers.push(this.getProOffer());\n\n    this.breakpoint = (window.innerWidth <= 900) ? 1 : this.offers.length;\n\n    this.onboardingSteps =\n    [\n      new OnboardingStep(RetailExploringOnboardingComponent, {name: 'Bombasto', bio: 'Brave as they come'})\n    ];\n  }\n\n  ngOnDestroy(): void {\n    clearInterval(this.interval);\n  }\n\n  loadOfferForm() {\n    const componentFactory =\n      this.componentFactoryResolver\n      .resolveComponentFactory(this.resolveFormComponent(this.selectedOffer.formName));\n\n    const viewContainerRef = this.onboardingHost.viewContainerRef;\n    viewContainerRef.clear();\n\n    const componentRef = viewContainerRef.createComponent<OnboardingComponent>(componentFactory);\n    componentRef.instance.data = this.selectedOffer;\n  }\n  resolveFormComponent(formName) {\n    const formComponents = [\n      { id: 'RetailExploringOnboardingComponent', component: RetailExploringOnboardingComponent}\n    ];\n    const selectedFormComponent = formComponents.find((x => x.id === formName));\n    if (selectedFormComponent == null){\n      return OnboardingFormNotfoundErrorComponent;\n    }\n    return selectedFormComponent.component || OnboardingFormNotfoundErrorComponent;\n  }\n  onResize(event) {\n    this.breakpoint = (event.target.innerWidth <= 900) ? 1 : this.offers.length;\n  }\n  onOfferSelect(selectedOffer: RetailOffer) {\n    this.offers.forEach( (offer) => {\n      offer.recomended = (offer.id === selectedOffer.id);\n    });\n    this.selectedOffer = selectedOffer;\n    this.loadOfferForm();\n  }\n  getExploringOffer(): RetailOffer {\n    const exploring: RetailOffer = new RetailOffer();\n    exploring.id = 1;\n    exploring.title = 'Exploring';\n    exploring.subtitle = 'No Strings Attached';\n    exploring.description = 'Explore our offering without opening a savings account. Best if you would like to view our interface and decide later! We just need your email or phone number to begin with.';\n    exploring.formName = 'RetailExploringOnboardingComponent';\n    return exploring;\n  }\n  getEnthusiasticOffer(): RetailOffer {\n    const enthusiastic: RetailOffer = new RetailOffer();\n    enthusiastic.id = 2;\n    enthusiastic.recomended = true;\n    enthusiastic.title = 'Enthusiastic';\n    enthusiastic.subtitle = 'Get your savings account in 2 mins!';\n    enthusiastic.description = 'Open your accounts with us. Provide us your Aadhar card, Pan card and initial seed money of Rs. 10,000';\n    enthusiastic.formName = 'RetailEnthusiasticOnboardingComponent';\n    return enthusiastic;\n  }\n\n  getProOffer(): RetailOffer {\n    const pro: RetailOffer = new RetailOffer();\n    pro.id = 3;\n    pro.title = 'Pro';\n    pro.subtitle = 'Save like a Professional';\n    pro.description = 'Get the best of our technological and analytical skills to save your money like a professional';\n    pro.formName = 'RetailProOnboardingComponent';\n    return pro;\n  }\n}\n","<mat-grid-list  [cols]=\"breakpoint\" rowHeight=\"200px\" [gutterSize]=\"10\" (window:resize)=\"onResize($event)\">\n    <mat-grid-tile *ngFor=\"let offer of offers\" class=\"offer-tile\">\n      <mat-card class=\"offer-card\" [class.selected]=\"offer.recomended\" (click)=\"onOfferSelect(offer)\">\n        <mat-card-title>{{offer.title}}</mat-card-title>\n        <mat-card-subtitle>{{offer.subtitle}}</mat-card-subtitle>\n        <mat-card-content>{{offer.description}}</mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile>\n      <div>\n        <ng-template appOnboardingHost></ng-template>\n    </div>\n    </mat-grid-tile>\n</mat-grid-list>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-layout',\n  templateUrl: './main-layout.component.html',\n  styleUrls: ['./main-layout.component.css']\n})\nexport class MainLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-top-fixed-bar></app-top-fixed-bar>\n<app-notification></app-notification>\n<div class=\"mainContent\">\n    <router-outlet></router-outlet>\n</div>\n<app-footer-bar></app-footer-bar>","import { HttpClient } from '@angular/common/http';\nimport { BackendAPIService } from 'src/environments/backendAPIs';\nimport * as core from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PaginatedListResponse } from 'src/app/common/responseTypes/paginated-list-response.model';\nimport { DataResponse } from 'src/app/common/responseTypes/data-response.model';\n@core.Injectable()\nexport class UserService {\n    constructor(private http: HttpClient,\n                private backendAPIs: BackendAPIService) {}\n\n    getUsers(pageSize: number, pageNumber: number): Observable<PaginatedListResponse> {\n       return this.http.get<PaginatedListResponse>(this.backendAPIs.getUsersListAPI(pageSize, pageNumber));\n    }\n\n    getLoggedInUser(): Observable<DataResponse> {\n        return this.http.get<DataResponse>(this.backendAPIs.getLoggedInUserAPI());\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WelcomeComponent } from './welcome-component/welcome-component.component';\nimport { LoginModule } from '../login/login.module';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { CommonAppModule } from 'src/app/common/common.module';\nimport { RegisterComponent } from './register/register.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  declarations: [WelcomeComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    LoginModule,\n    MatGridListModule,\n    CommonAppModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDialogModule\n    ]\n})\nexport class WelcomeModule { }\n","import { HttpRequest, HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { StringifyOptions } from 'querystring';\n@Injectable()\nexport class MockResponseService {\n    constructor(private http: HttpClient) {\n    }\n   getMockRequestUrl(request: HttpRequest<any>): string {\n    const mockUrl = request.url.replace(environment.backendUrl, '');\n    return 'assets/mocks' + mockUrl + '/' + request.method + '/default.json';\n   }\n\n }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { LogoutComponent } from './logout/logout.component';\nimport { DashboardModule } from '../dashboard/dashboard.module';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatCardModule,\n    DashboardModule,\n    MatIconModule,\n  ],\n  declarations: [LoginFormComponent, LogoutComponent],\n  exports: [LoginFormComponent]\n})\nexport class LoginModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OnboardingStartOptionsComponent } from '../../onboarding/onboarding-start-options/onboarding-start-options.component';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n  startOnboarding() {\n    this.dialog.open(OnboardingStartOptionsComponent, {\n      height: '800px',\n      width: '600px',\n    });\n  }\n}\n","<mat-card class=\"register-card\">\n    <p>New here? Register to experience a new world of banking</p>\n    <button \n             mat-raised-button \n             [color]=\"'primary'\"\n             (click)=\"startOnboarding()\"\n             > Register</button>\n</mat-card>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-top-navigation-bar',\n  templateUrl: './top-navigation-bar.component.html',\n  styleUrls: ['./top-navigation-bar.component.css']\n})\nexport class TopNavigationBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>top-navigation-bar works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { LoginService } from '../login.service';\nimport { NotificationService } from 'src/app/theme/notification/notification.service';\nimport { Router } from '@angular/router';\nimport { User } from '../../users/user.model';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css']\n})\nexport class LoginFormComponent implements OnInit {\n  showPassword: boolean;\n  constructor(private loginService: LoginService,\n              private notificationService: NotificationService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.showPassword = false;\n  }\n  login(loginForm: NgForm) {\n    if (loginForm.valid) {\n      const user: User = new User();\n      user.username = loginForm.value.username;\n      user.password = loginForm.value.password;\n      this.loginService.login(user).subscribe(response => {\n        console.log(' login response');\n        console.log(response);\n        if (response.status.status === 'SUCCESS') {\n            console.log(sessionStorage.getItem('authenticated') === 'true');\n            sessionStorage.setItem('authenticated', 'true');\n            console.log(sessionStorage.getItem('authenticated') === 'true');\n\n            let isAdminUser = false;\n            for (let i = 0; i < response.data.authorities.length; i++) {\n                if (response.data.authorities[i].authority === 'ADMIN') {\n                    isAdminUser = true;\n                    break;\n                }\n            }\n            if (isAdminUser) {\n              this.router.navigate(['admin-dashboard']);\n            } else {\n              this.router.navigate(['dashboard']);\n            }\n        } else {\n          this.notificationService.sendNotification('User login Error!');\n        }\n      },\n      error => {\n        console.log('error during login');\n        if (error.status === 401) {\n              this.notificationService.sendNotification('Invalid Credentials!');\n            } else {\n              this.notificationService.sendNotification('An error occurred!');\n            }\n        console.log(error);\n      });\n    }\n  }\n\n  togglePasswordView(){\n    this.showPassword = !this.showPassword;\n  }\n}\n","<mat-card class=\"login-card\">\n    <form (ngSubmit)=\"login(loginForm)\" #loginForm=\"ngForm\" class=\"login-form\">\n        <div class=\"login-form\">\n           <mat-form-field class=\"full-width\">\n             <input \n             placeholder=\"Username\" \n             name=\"username\"\n             type=\"text\"\n             ngModel \n             matInput\n             required>\n           </mat-form-field>\n           <mat-form-field class=\"full-width\">\n              <input \n              placeholder=\"Password\" \n              name=\"password\"\n              [type]=\"showPassword ? 'text' : 'password'\"\n              ngModel \n              matInput\n              required>\n              <mat-icon matSuffix *ngIf = \"!showPassword\" (click)=\"togglePasswordView()\">visibility</mat-icon>\n              <mat-icon matSuffix *ngIf = \"showPassword\" (click)=\"togglePasswordView()\">visibility_off</mat-icon>\n            </mat-form-field>\n           \n         </div>\n         <button \n         mat-raised-button \n         class=\"create-article-save\" \n         [disabled]=\"loginForm.invalid\"\n         [color]=\"'primary'\" \n         type=\"submit\"\n         > Login</button>\n         <button mat-raised-button class=\"create-article-clear\" [color]=\"'warn'\" type=\"reset\"> Clear!</button>\n       </form>\n</mat-card>\n\n   ","import { Authority } from './authority.model';\n\nexport class User {\n    id: number;\n    authorities: Authority[];\n    password: string;\n    username: string;\n    accountNonExpired: boolean;\n    accountNonLocked: boolean;\n    credentialsNonExpired: boolean;\n    termsAccepted: boolean;\n    firstTimePwdReset: boolean;\n    enabled: boolean;\n    firstName: string;\n    lastName: string;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pre-login',\n  templateUrl: './pre-login.component.html',\n  styleUrls: ['./pre-login.component.css']\n})\nexport class PreLoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-top-navigation-bar></app-top-navigation-bar>\n<p>pre-login works!</p>\n","import { Type } from '@angular/core';\n\nexport class OnboardingStep {\n  constructor(public component: Type<any>, public data: any) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AccountsService } from './accounts.service';\nimport {Account} from './account.model';\nimport { Deposit } from './deposit.model';\nimport { Loans } from './loans.model';\nimport { Card } from './card.model';\n\n@Component({\n  selector: 'app-portfolio-summary',\n  templateUrl: './portfolio-summary.component.html',\n  styleUrls: ['./portfolio-summary.component.css']\n})\nexport class PortfolioSummaryComponent implements OnInit {\n\n  constructor(private accountsService: AccountsService) { }\n  currencySymbol: string;\n  savingsAccounts: Account[];\n  depositAccounts: Deposit[];\n  loans: Loans[];\n  cards: Card[];\n  accountsTotal = 0;\n  totalDueThisMonth = 0;\n  totalLoanAmountPending = 0;\n  savingsTotal = 0;\n  depositsTotal = 0;\n  ngOnInit() {\n    this.accountsService.getSavingsAccounts().subscribe( (accounts: Account[]) => {\n      this.savingsAccounts = accounts;\n      this.savingsAccounts.forEach((account) => {\n        this.accountsTotal += account.balance;\n        this.savingsTotal += account.balance;\n      });\n    });\n\n    this.accountsService.getDepositAccounts().subscribe( (depositAccounts: Deposit[]) => {\n      this.depositAccounts = depositAccounts;\n      this.depositAccounts.forEach((account) => {\n        this.accountsTotal += account.balance;\n        this.depositsTotal += account.balance;\n      });\n    });\n    this.accountsService.getLoanAccounts().subscribe( (loans: Loans[]) => {\n      this.loans = loans;\n      this.loans.forEach((account) => {\n        this.totalDueThisMonth += account.monthlyEmi;\n        this.totalLoanAmountPending += (account.initialAmount - account.paidAmount);\n      });\n    });\n    this.accountsService.getCardAccounts().subscribe( (cards: Card[]) => {\n      this.cards = cards;\n      this.cards.forEach((card) => {\n        if (card.balance < 0) {\n          this.totalDueThisMonth += card.balance;\n        }\n      });\n    });\n  }\n\n}\n","<mat-card>\n    <mat-grid-list cols=\"6\" rowHeight=\"30px\">\n        <mat-grid-tile\n            [colspan]=\"6\"\n            [rowspan]=\"1\"\n            [style.background]=\"'white'\">\n            Your total balance is {{accountsTotal |currency: '₹' :'symbol' :0}}\n        </mat-grid-tile>\n        <mat-grid-tile\n            [colspan]=\"2\"\n            [rowspan]=\"1\"\n            [style.background]=\"'white'\">\n            Savings {{savingsTotal |currency: '₹' :'symbol' :0}}\n        </mat-grid-tile>\n        <mat-grid-tile\n            [colspan]=\"2\"\n            [rowspan]=\"1\"\n            [style.background]=\"'white'\">\n            Deposits {{depositsTotal |currency: '₹' :'symbol' :0}}\n        </mat-grid-tile>\n        <mat-grid-tile\n            [colspan]=\"2\"\n            [rowspan]=\"1\"\n            [style.background]=\"'white'\">\n            Pending Loans {{totalLoanAmountPending |currency: '₹' :'symbol' :0}}\n        </mat-grid-tile>\n      </mat-grid-list>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/modules/login/login.service';\n\n@Component({\n  selector: 'app-top-fixed-bar',\n  templateUrl: './top-fixed-bar.component.html',\n  styleUrls: ['./top-fixed-bar.component.css']\n})\nexport class TopFixedBarComponent implements OnInit {\n  isMock: boolean;\n  constructor(private loginService: LoginService) { }\n\n  ngOnInit() {\n    this.isMock = sessionStorage.getItem('mock') === 'true';\n  }\n\n  isAuthenticated(): boolean {\n    return this.loginService.isAuthenticated();\n  }\n\n  toggleMock() {\n    this.isMock = !this.isMock;\n    sessionStorage.setItem('mock', this.isMock ? 'true' : 'false');\n    console.log(this.isMock);\n  }\n}\n","<mat-toolbar class=\"primary toolbar\">  \n  <mat-toolbar-row>\n      \n    <span class=\"menuItem\">XBank!</span>\n    <span class=\"menuItem\"></span>\n    <span *ngIf=\"!isAuthenticated()\">\n      <a routerLink=\"/\" routerLinkActive=\"active\" class=\"menuItem primary\"><button   mat-button mat-flat-button class=\"primary\"><mat-icon class=\"primary\">home</mat-icon><span>Home</span></button></a>\n      <a routerLink=\"/\" routerLinkActive=\"active\" class=\"menuItem primary\"><button   mat-button mat-flat-button class=\"primary\"><mat-icon class=\"primary\">person</mat-icon><span>Retail</span></button></a>\n      <a routerLink=\"/\" routerLinkActive=\"active\" class=\"menuItem primary\"><button   mat-button mat-flat-button class=\"primary\"><mat-icon class=\"primary\">business_center</mat-icon><span>Corporate</span></button></a>\n      <a routerLink=\"/\" routerLinkActive=\"active\" class=\"menuItem primary\"><button   mat-button mat-flat-button class=\"primary\"><mat-icon class=\"primary\">show_chart</mat-icon><span>Investment</span></button></a>  \n    </span>\n    <span *ngIf=\"isAuthenticated()\">\n      <a routerLink=\"/dashboard\" routerLinkActive=\"active\" class=\"menuItem primary\"><button   mat-button mat-flat-button class=\"primary\"><mat-icon class=\"primary\">home</mat-icon><span>Home</span></button></a>\n      <a routerLink=\"/\" routerLinkActive=\"active\" class=\"menuItem primary\"><button   mat-button mat-flat-button class=\"primary\"><mat-icon class=\"primary\">person</mat-icon><span>My Accounts</span></button></a>\n      <a routerLink=\"/\" routerLinkActive=\"active\" class=\"menuItem primary\"><button   mat-button mat-flat-button class=\"primary\"><mat-icon class=\"primary\">business_center</mat-icon><span>Transactions</span></button></a>\n      <a routerLink=\"/\" routerLinkActive=\"active\" class=\"menuItem primary\"><button   mat-button mat-flat-button class=\"primary\"><mat-icon class=\"primary\">show_chart</mat-icon><span>Investments</span></button></a>  \n      <a routerLink=\"/logout\" routerLinkActive=\"active\" class=\"menuItem primary last\"><button   mat-button mat-flat-button class=\"primary\"><mat-icon>face</mat-icon><span>Logout</span></button></a>      \n    </span>\n    <mat-checkbox class=\"example-margin\"  class=\"menuItem primary\" (change)=\"toggleMock()\" [checked]=\"isMock\">Mock</mat-checkbox>\n\n  </mat-toolbar-row>\n\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-quick-actions-bar',\n  templateUrl: './quick-actions-bar.component.html',\n  styleUrls: ['./quick-actions-bar.component.css']\n})\nexport class QuickActionsBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>quick-actions-bar works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WelcomeComponent } from './modules/welcome/welcome-component/welcome-component.component';\nimport { DashboardComponent } from './modules/dashboard/dashboard/dashboard.component';\nimport { LogoutComponent } from './modules/login/logout/logout.component';\nimport { RetailOnboardingComponent } from './modules/onboarding/retail-onboarding/retail-onboarding.component';\nimport { EmailVerificationComponent } from './modules/users/email-verification/email-verification.component';\nimport { UserStateGuard } from './common/guards/LoggedInGuard';\nimport { PrivacyPolicyComponent } from './modules/documentation/privacy-policy/privacy-policy.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'welcome', pathMatch: 'full'},\n  {path: 'login', redirectTo: 'welcome'},\n  {path: 'welcome', component: WelcomeComponent},\n  {path: 'retail-onboarding', component: RetailOnboardingComponent},\n  {path: 'email-verify', component: EmailVerificationComponent},\n  {path: 'dashboard', component: DashboardComponent, canActivate: [UserStateGuard]},\n  {path: 'logout', component: LogoutComponent},\n  {path: 'privacy', component: PrivacyPolicyComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OnboardingStartOptionsComponent } from './onboarding-start-options/onboarding-start-options.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { RetailOnboardingComponent } from './retail-onboarding/retail-onboarding.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { OnboardingDirective } from './onboarding-components/onboardinghost.directive';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RetailExploringOnboardingComponent } from './onboarding-components/retail-exploring-onboarding/retail-exploring-onboarding.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { OnboardingFormNotfoundErrorComponent } from './onboarding-components/onboarding-form-notfound-error/onboarding-form-notfound-error.component';\n\n\n\n@NgModule({\n  declarations: [OnboardingStartOptionsComponent,\n     RetailOnboardingComponent,\n     OnboardingDirective,\n     RetailExploringOnboardingComponent,\n     OnboardingFormNotfoundErrorComponent],\n  exports: [OnboardingStartOptionsComponent],\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatGridListModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatStepperModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    FormsModule,\n    MatInputModule,\n    ReactiveFormsModule\n  ]\n})\nexport class OnboardingModule { }\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}